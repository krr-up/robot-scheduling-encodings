edge(ll1,ll2,20).
edge(ll2,ll3,20).
edge(ll3,ll4,20).
edge(ll4,ll5,20).
edge(l1,ll1,30).
edge(ll5,l2,30).
edge(m2,l1,30).
edge(l2,m3,30).
edge(l1,lm1,30).
edge(lm5,l2,30).
edge(lm1,lm2,20).
edge(lm2,lm3,20).
edge(lm3,lm4,20).
edge(lm4,lm5,20).
edge(m1,m2,15).
edge(m3,m4,30).
edge(rm1,rm2,20).
edge(rm2,rm3,20).
edge(rm3,rm4,20).
edge(rm4,rm5,20).
edge(r1,rm1,30).
edge(rm5,r2,30).
edge(m2,r1,30).
edge(r2,m3,30).
edge(r1,rr1,30).
edge(rr5,r2,30).
edge(rr1,rr2,20).
edge(rr2,rr3,20).
edge(rr3,rr4,20).
edge(rr4,rr5,20).
edge(ll1,lm1,10).
edge(ll2,lm2,10).
edge(ll3,lm3,10).
edge(ll4,lm4,10).
edge(ll5,lm5,10).
edge(lm1,rm1,10).
edge(lm2,rm2,10).
edge(lm3,rm3,10).
edge(lm4,rm4,10).
edge(lm5,rm5,10).
edge(rm1,rr1,10).
edge(rm2,rr2,10).
edge(rm3,rr3,10).
edge(rm4,rr4,10).
edge(rm5,rr5,10).
edge(ll1,lm2,25).
edge(ll2,lm3,25).
edge(ll3,lm4,25).
edge(ll4,lm5,25).
edge(lm1,ll2,25).
edge(lm2,ll3,25).
edge(lm3,ll4,25).
edge(lm4,ll5,25).
edge(lm1,rm2,25).
edge(lm2,rm3,25).
edge(lm3,rm4,25).
edge(lm4,rm5,25).
edge(rm1,lm2,25).
edge(rm2,lm3,25).
edge(rm3,lm4,25).
edge(rm4,lm5,25).
edge(rm1,rr2,25).
edge(rm2,rr3,25).
edge(rm3,rr4,25).
edge(rm4,rr5,25).
edge(rr1,rm2,25).
edge(rr2,rm3,25).
edge(rr3,rm4,25).
edge(rr4,rm5,25).
edge(rm5,rr4,25).
edge(rm4,rr3,25).
edge(rm3,rr2,25).
edge(rm2,rr1,25).
edge(rr5,rm4,25).
edge(rr4,rm3,25).
edge(rr3,rm2,25).
edge(rr2,rm1,25).
edge(lm5,rm4,25).
edge(lm4,rm3,25).
edge(lm3,rm2,25).
edge(lm2,rm1,25).
edge(rm5,lm4,25).
edge(rm4,lm3,25).
edge(rm3,lm2,25).
edge(rm2,lm1,25).
edge(ll5,lm4,25).
edge(ll4,lm3,25).
edge(ll3,lm2,25).
edge(ll2,lm1,25).
edge(lm5,ll4,25).
edge(lm4,ll3,25).
edge(lm3,ll2,25).
edge(lm2,ll1,25).
edge(rr5,rm5,10).
edge(rr4,rm4,10).
edge(rr3,rm3,10).
edge(rr2,rm2,10).
edge(rr1,rm1,10).
edge(rm5,lm5,10).
edge(rm4,lm4,10).
edge(rm3,lm3,10).
edge(rm2,lm2,10).
edge(rm1,lm1,10).
edge(lm5,ll5,10).
edge(lm4,ll4,10).
edge(lm3,ll3,10).
edge(lm2,ll2,10).
edge(lm1,ll1,10).
edge(rr5,rr4,20).
edge(rr4,rr3,20).
edge(rr3,rr2,20).
edge(rr2,rr1,20).
edge(r2,rr5,30).
edge(rr1,r1,30).
edge(m3,r2,30).
edge(r1,m2,30).
edge(r2,rm5,30).
edge(rm1,r1,30).
edge(rm5,rm4,20).
edge(rm4,rm3,20).
edge(rm3,rm2,20).
edge(rm2,rm1,20).
edge(m4,m3,30).
edge(m2,m1,15).
edge(lm5,lm4,20).
edge(lm4,lm3,20).
edge(lm3,lm2,20).
edge(lm2,lm1,20).
edge(l2,lm5,30).
edge(lm1,l1,30).
edge(m3,l2,30).
edge(l1,m2,30).
edge(l2,ll5,30).
edge(ll1,l1,30).
edge(ll5,ll4,20).
edge(ll4,ll3,20).
edge(ll3,ll2,20).
edge(ll2,ll1,20).
conflict(ll1,ll1).
conflict(ll2,ll2).
conflict(ll3,ll3).
conflict(ll4,ll4).
conflict(l1,l1).
conflict(ll5,ll5).
conflict(m2,m2).
conflict(l2,l2).
conflict(lm5,lm5).
conflict(lm1,lm1).
conflict(lm2,lm2).
conflict(lm3,lm3).
conflict(lm4,lm4).
conflict(m1,m1).
conflict(m3,m3).
conflict(rm1,rm1).
conflict(rm2,rm2).
conflict(rm3,rm3).
conflict(rm4,rm4).
conflict(r1,r1).
conflict(rm5,rm5).
conflict(r2,r2).
conflict(rr5,rr5).
conflict(rr1,rr1).
conflict(rr2,rr2).
conflict(rr3,rr3).
conflict(rr4,rr4).
conflict(m4,m4).
task(t1,m2).
task(t2,m3).
home(r1,m1).
start(r1,m1).
robot(r1).
depends(deliver,t1,t2).
shortest_path(m1,m2,15,m2).
shortest_path(m1,m3,215,m2).
shortest_path(m2,m3,200,l1).
shortest_path(m2,m3,200,r1).
shortest_path(m2,m1,15,m1).
shortest_path(m3,m2,200,r2).
shortest_path(m3,m2,200,l2).
shortest_path(m3,m1,215,r2).
shortest_path(m3,m1,215,l2).
shortest_path(l2,m1,185,lm5).
shortest_path(l2,m1,185,ll5).
shortest_path(r2,m1,185,rr5).
shortest_path(r2,m1,185,rm5).
shortest_path(l2,m2,170,lm5).
shortest_path(l2,m2,170,ll5).
shortest_path(r2,m2,170,rr5).
shortest_path(r2,m2,170,rm5).
shortest_path(r1,m3,170,rm1).
shortest_path(r1,m3,170,rr1).
shortest_path(l1,m3,170,ll1).
shortest_path(l1,m3,170,lm1).
shortest_path(lm1,m3,140,lm2).
shortest_path(ll1,m3,140,ll2).
shortest_path(rr1,m3,140,rr2).
shortest_path(rm1,m3,140,rm2).
shortest_path(rm5,m2,140,rm4).
shortest_path(rr5,m2,140,rr4).
shortest_path(ll5,m2,140,ll4).
shortest_path(lm5,m2,140,lm4).
shortest_path(rm5,m1,155,rm4).
shortest_path(rr5,m1,155,rr4).
shortest_path(ll5,m1,155,ll4).
shortest_path(lm5,m1,155,lm4).
shortest_path(lm4,m1,135,lm3).
shortest_path(ll4,m1,135,ll3).
shortest_path(rr4,m1,135,rr3).
shortest_path(rm4,m1,135,rm3).
shortest_path(lm4,m2,120,lm3).
shortest_path(ll4,m2,120,ll3).
shortest_path(rr4,m2,120,rr3).
shortest_path(rm4,m2,120,rm3).
shortest_path(rm2,m3,120,rm3).
shortest_path(rr2,m3,120,rr3).
shortest_path(ll2,m3,120,ll3).
shortest_path(lm2,m3,120,lm3).
shortest_path(lm3,m3,100,lm4).
shortest_path(ll3,m3,100,ll4).
shortest_path(rr3,m3,100,rr4).
shortest_path(rm3,m3,100,rm4).
shortest_path(rm3,m2,100,rm2).
shortest_path(rr3,m2,100,rr2).
shortest_path(ll3,m2,100,ll2).
shortest_path(lm3,m2,100,lm2).
shortest_path(rm3,m1,115,rm2).
shortest_path(rr3,m1,115,rr2).
shortest_path(ll3,m1,115,ll2).
shortest_path(lm3,m1,115,lm2).
shortest_path(lm2,m1,95,lm1).
shortest_path(ll2,m1,95,ll1).
shortest_path(rr2,m1,95,rr1).
shortest_path(rm2,m1,95,rm1).
shortest_path(lm2,m2,80,lm1).
shortest_path(ll2,m2,80,ll1).
shortest_path(rr2,m2,80,rr1).
shortest_path(rm2,m2,80,rm1).
shortest_path(rm4,m3,80,rm5).
shortest_path(rr4,m3,80,rr5).
shortest_path(ll4,m3,80,ll5).
shortest_path(lm4,m3,80,lm5).
shortest_path(lm5,m3,60,l2).
shortest_path(ll5,m3,60,l2).
shortest_path(rr5,m3,60,r2).
shortest_path(rm5,m3,60,r2).
shortest_path(rm1,m2,60,r1).
shortest_path(rr1,m2,60,r1).
shortest_path(ll1,m2,60,l1).
shortest_path(lm1,m2,60,l1).
shortest_path(rm1,m1,75,r1).
shortest_path(rr1,m1,75,r1).
shortest_path(ll1,m1,75,l1).
shortest_path(lm1,m1,75,l1).
shortest_path(l1,m1,45,m2).
shortest_path(r1,m1,45,m2).
shortest_path(l1,m2,30,m2).
shortest_path(r1,m2,30,m2).
shortest_path(r2,m3,30,m3).
shortest_path(l2,m3,30,m3).

