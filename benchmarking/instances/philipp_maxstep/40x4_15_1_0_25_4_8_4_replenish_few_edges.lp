edge((17,1),(18,1),15).
edge((18,1),(19,1),15).
edge((19,1),(20,1),15).
edge((20,1),(21,1),15).
edge((22,1),(23,1),15).
edge((23,1),(24,1),15).
edge((27,1),(28,1),15).
edge((21,1),(21,2),15).
edge((22,1),(22,2),15).
edge((24,1),(24,2),15).
edge((28,1),(28,2),15).
edge((21,2),(22,2),15).
edge((24,2),(25,2),15).
edge((25,2),(26,2),15).
edge((26,2),(27,2),15).
edge((27,2),(28,2),15).
edge((26,2),(26,3),15).
edge((27,2),(27,3),15).
edge((27,3),(28,3),15).
edge((28,3),(29,3),15).
edge((29,3),(30,3),15).
edge((26,3),(26,4),15).
edge((28,3),(28,4),15).
edge((30,3),(30,4),15).
edge((27,4),(28,4),15).
edge((28,4),(27,4),15).
edge((30,4),(30,3),15).
edge((28,4),(28,3),15).
edge((26,4),(26,3),15).
edge((30,3),(29,3),15).
edge((29,3),(28,3),15).
edge((28,3),(27,3),15).
edge((27,3),(27,2),15).
edge((26,3),(26,2),15).
edge((28,2),(27,2),15).
edge((27,2),(26,2),15).
edge((26,2),(25,2),15).
edge((25,2),(24,2),15).
edge((22,2),(21,2),15).
edge((28,2),(28,1),15).
edge((24,2),(24,1),15).
edge((22,2),(22,1),15).
edge((21,2),(21,1),15).
edge((28,1),(27,1),15).
edge((24,1),(23,1),15).
edge((23,1),(22,1),15).
edge((21,1),(20,1),15).
edge((20,1),(19,1),15).
edge((19,1),(18,1),15).
edge((18,1),(17,1),15).
conflict((17,1),(17,1)).
conflict((18,1),(18,1)).
conflict((19,1),(19,1)).
conflict((20,1),(20,1)).
conflict((21,1),(21,1)).
conflict((22,1),(22,1)).
conflict((23,1),(23,1)).
conflict((24,1),(24,1)).
conflict((27,1),(27,1)).
conflict((28,1),(28,1)).
conflict((21,2),(21,2)).
conflict((22,2),(22,2)).
conflict((24,2),(24,2)).
conflict((25,2),(25,2)).
conflict((26,2),(26,2)).
conflict((27,2),(27,2)).
conflict((28,2),(28,2)).
conflict((26,3),(26,3)).
conflict((27,3),(27,3)).
conflict((28,3),(28,3)).
conflict((29,3),(29,3)).
conflict((30,3),(30,3)).
conflict((26,4),(26,4)).
conflict((27,4),(27,4)).
conflict((28,4),(28,4)).
conflict((30,4),(30,4)).




































































































task((1,pickup),(19,1)).
task((2,pickup),(27,1)).
task((3,pickup),(28,1)).
task((4,pickup),(27,1)).
task((5,pickup),(28,1)).
task((6,pickup),(20,1)).
task((7,pickup),(18,1)).
task((8,pickup),(17,1)).
task((1,putdown),(26,4)).
task((2,putdown),(18,1)).
task((3,putdown),(20,1)).
task((4,putdown),(19,1)).
task((5,putdown),(17,1)).
task((6,putdown),(30,4)).
task((7,putdown),(26,4)).
task((8,putdown),(26,4)).
home(1,(21,1)).
home(2,(23,1)).
home(3,(24,1)).
home(4,(22,1)).
nearest((17,1),(18,1),15).
nearest((18,1),(19,1),15).
nearest((19,1),(20,1),15).
nearest((20,1),(21,1),15).
nearest((22,1),(23,1),15).
nearest((23,1),(24,1),15).
nearest((27,1),(28,1),15).
nearest((21,1),(21,2),15).
nearest((22,1),(22,2),15).
nearest((24,1),(24,2),15).
nearest((28,1),(28,2),15).
nearest((21,2),(22,2),15).
nearest((24,2),(25,2),15).
nearest((25,2),(26,2),15).
nearest((26,2),(27,2),15).
nearest((27,2),(28,2),15).
nearest((26,2),(26,3),15).
nearest((27,2),(27,3),15).
nearest((27,3),(28,3),15).
nearest((28,3),(29,3),15).
nearest((29,3),(30,3),15).
nearest((26,3),(26,4),15).
nearest((28,3),(28,4),15).
nearest((30,3),(30,4),15).
nearest((27,4),(28,4),15).
nearest((28,4),(27,4),15).
nearest((30,4),(30,3),15).
nearest((28,4),(28,3),15).
nearest((26,4),(26,3),15).
nearest((30,3),(29,3),15).
nearest((29,3),(28,3),15).
nearest((28,3),(27,3),15).
nearest((27,3),(27,2),15).
nearest((26,3),(26,2),15).
nearest((28,2),(27,2),15).
nearest((27,2),(26,2),15).
nearest((26,2),(25,2),15).
nearest((25,2),(24,2),15).
nearest((22,2),(21,2),15).
nearest((28,2),(28,1),15).
nearest((24,2),(24,1),15).
nearest((22,2),(22,1),15).
nearest((21,2),(21,1),15).
nearest((28,1),(27,1),15).
nearest((24,1),(23,1),15).
nearest((23,1),(22,1),15).
nearest((21,1),(20,1),15).
nearest((20,1),(19,1),15).
nearest((19,1),(18,1),15).
nearest((18,1),(17,1),15).
entrypoint((17,1),(17,1),0).
entrypoint((27,1),(27,1),0).
entrypoint((19,1),(19,1),0).
entrypoint((28,1),(28,1),0).
entrypoint((20,1),(20,1),0).
entrypoint((18,1),(18,1),0).
entrypoint((21,1),(21,1),0).
entrypoint((23,1),(23,1),0).
entrypoint((24,1),(24,1),0).
entrypoint((22,1),(22,1),0).
entrypoint((30,3),(30,4),15).
entrypoint((26,3),(26,4),15).
on_deadend((17,1),(17,1)).
on_deadend((27,1),(27,1)).
on_deadend((30,4),(30,4)).
on_deadend((26,4),(26,4)).
on_deadend((26,3),(26,4)).
on_deadend((30,3),(30,4)).
on_deadend((28,1),(27,1)).
on_deadend((18,1),(17,1)).
on_deadend((19,1),(17,1)).
on_deadend((28,2),(27,1)).
on_deadend((29,3),(30,4)).
on_deadend((20,1),(17,1)).
on_deadend((21,1),(17,1)).
on_deadend((21,2),(17,1)).
on_deadend((22,2),(17,1)).
on_deadend((22,1),(17,1)).
on_deadend((23,1),(17,1)).
on_deadend((24,1),(17,1)).
on_deadend((24,2),(17,1)).
on_deadend((25,2),(17,1)).
endpoint_access((17,1),(17,1)).
endpoint_access((27,1),(27,1)).
endpoint_access((19,1),(19,1)).
endpoint_access((28,1),(28,1)).
endpoint_access((20,1),(20,1)).
endpoint_access((18,1),(18,1)).
endpoint_access((21,1),(21,1)).
endpoint_access((23,1),(23,1)).
endpoint_access((24,1),(24,1)).
endpoint_access((22,1),(22,1)).
endpoint_access((30,3),(30,4)).
endpoint_access((26,3),(26,4)).
endpoint_access((30,4),(30,4)).
endpoint_access((26,4),(26,4)).
endpoint_access((28,1),(27,1)).
endpoint_access((18,1),(17,1)).
endpoint_access((19,1),(17,1)).
endpoint_access((28,2),(27,1)).
endpoint_access((29,3),(30,4)).
endpoint_access((20,1),(17,1)).
endpoint_access((21,1),(17,1)).
endpoint_access((21,2),(17,1)).
endpoint_access((22,2),(17,1)).
endpoint_access((22,1),(17,1)).
endpoint_access((23,1),(17,1)).
endpoint_access((24,1),(17,1)).
endpoint_access((24,2),(17,1)).
endpoint_access((25,2),(17,1)).
shortest_path((19,1),(27,1),210,(20,1)).
shortest_path((19,1),(28,1),195,(20,1)).
shortest_path((19,1),(20,1),15,(20,1)).
shortest_path((19,1),(18,1),15,(18,1)).
shortest_path((19,1),(17,1),30,(18,1)).
shortest_path((19,1),(26,4),180,(20,1)).
shortest_path((19,1),(30,4),240,(20,1)).
shortest_path((19,1),(21,1),30,(20,1)).
shortest_path((19,1),(23,1),90,(20,1)).
shortest_path((19,1),(24,1),105,(20,1)).
shortest_path((19,1),(22,1),75,(20,1)).
shortest_path((27,1),(19,1),210,(28,1)).
shortest_path((27,1),(28,1),15,(28,1)).
shortest_path((27,1),(20,1),195,(28,1)).
shortest_path((27,1),(18,1),225,(28,1)).
shortest_path((27,1),(17,1),240,(28,1)).
shortest_path((27,1),(26,4),90,(28,1)).
shortest_path((27,1),(30,4),120,(28,1)).
shortest_path((27,1),(21,1),180,(28,1)).
shortest_path((27,1),(23,1),120,(28,1)).
shortest_path((27,1),(24,1),105,(28,1)).
shortest_path((27,1),(22,1),135,(28,1)).
shortest_path((28,1),(19,1),195,(28,2)).
shortest_path((28,1),(27,1),15,(27,1)).
shortest_path((28,1),(20,1),180,(28,2)).
shortest_path((28,1),(18,1),210,(28,2)).
shortest_path((28,1),(17,1),225,(28,2)).
shortest_path((28,1),(26,4),75,(28,2)).
shortest_path((28,1),(30,4),105,(28,2)).
shortest_path((28,1),(21,1),165,(28,2)).
shortest_path((28,1),(23,1),105,(28,2)).
shortest_path((28,1),(24,1),90,(28,2)).
shortest_path((28,1),(22,1),120,(28,2)).
shortest_path((20,1),(19,1),15,(19,1)).
shortest_path((20,1),(27,1),195,(21,1)).
shortest_path((20,1),(28,1),180,(21,1)).
shortest_path((20,1),(18,1),30,(19,1)).
shortest_path((20,1),(17,1),45,(19,1)).
shortest_path((20,1),(26,4),165,(21,1)).
shortest_path((20,1),(30,4),225,(21,1)).
shortest_path((20,1),(21,1),15,(21,1)).
shortest_path((20,1),(23,1),75,(21,1)).
shortest_path((20,1),(24,1),90,(21,1)).
shortest_path((20,1),(22,1),60,(21,1)).
shortest_path((18,1),(19,1),15,(19,1)).
shortest_path((18,1),(27,1),225,(19,1)).
shortest_path((18,1),(28,1),210,(19,1)).
shortest_path((18,1),(20,1),30,(19,1)).
shortest_path((18,1),(17,1),15,(17,1)).
shortest_path((18,1),(26,4),195,(19,1)).
shortest_path((18,1),(30,4),255,(19,1)).
shortest_path((18,1),(21,1),45,(19,1)).
shortest_path((18,1),(23,1),105,(19,1)).
shortest_path((18,1),(24,1),120,(19,1)).
shortest_path((18,1),(22,1),90,(19,1)).
shortest_path((17,1),(19,1),30,(18,1)).
shortest_path((17,1),(27,1),240,(18,1)).
shortest_path((17,1),(28,1),225,(18,1)).
shortest_path((17,1),(20,1),45,(18,1)).
shortest_path((17,1),(18,1),15,(18,1)).
shortest_path((17,1),(26,4),210,(18,1)).
shortest_path((17,1),(30,4),270,(18,1)).
shortest_path((17,1),(21,1),60,(18,1)).
shortest_path((17,1),(23,1),120,(18,1)).
shortest_path((17,1),(24,1),135,(18,1)).
shortest_path((17,1),(22,1),105,(18,1)).
shortest_path((26,4),(19,1),180,(26,3)).
shortest_path((26,4),(27,1),90,(26,3)).
shortest_path((26,4),(28,1),75,(26,3)).
shortest_path((26,4),(20,1),165,(26,3)).
shortest_path((26,4),(18,1),195,(26,3)).
shortest_path((26,4),(17,1),210,(26,3)).
shortest_path((26,4),(30,4),120,(26,3)).
shortest_path((26,4),(21,1),150,(26,3)).
shortest_path((26,4),(23,1),90,(26,3)).
shortest_path((26,4),(24,1),75,(26,3)).
shortest_path((26,4),(22,1),105,(26,3)).
shortest_path((30,4),(19,1),240,(30,3)).
shortest_path((30,4),(27,1),120,(30,3)).
shortest_path((30,4),(28,1),105,(30,3)).
shortest_path((30,4),(20,1),225,(30,3)).
shortest_path((30,4),(18,1),255,(30,3)).
shortest_path((30,4),(17,1),270,(30,3)).
shortest_path((30,4),(26,4),120,(30,3)).
shortest_path((30,4),(21,1),210,(30,3)).
shortest_path((30,4),(23,1),150,(30,3)).
shortest_path((30,4),(24,1),135,(30,3)).
shortest_path((30,4),(22,1),165,(30,3)).
shortest_path((21,1),(19,1),30,(20,1)).
shortest_path((21,1),(27,1),180,(21,2)).
shortest_path((21,1),(28,1),165,(21,2)).
shortest_path((21,1),(20,1),15,(20,1)).
shortest_path((21,1),(18,1),45,(20,1)).
shortest_path((21,1),(17,1),60,(20,1)).
shortest_path((21,1),(26,4),150,(21,2)).
shortest_path((21,1),(30,4),210,(21,2)).
shortest_path((21,1),(23,1),60,(21,2)).
shortest_path((21,1),(24,1),75,(21,2)).
shortest_path((21,1),(22,1),45,(21,2)).
shortest_path((23,1),(19,1),90,(22,1)).
shortest_path((23,1),(27,1),120,(24,1)).
shortest_path((23,1),(28,1),105,(24,1)).
shortest_path((23,1),(20,1),75,(22,1)).
shortest_path((23,1),(18,1),105,(22,1)).
shortest_path((23,1),(17,1),120,(22,1)).
shortest_path((23,1),(26,4),90,(24,1)).
shortest_path((23,1),(30,4),150,(24,1)).
shortest_path((23,1),(21,1),60,(22,1)).
shortest_path((23,1),(24,1),15,(24,1)).
shortest_path((23,1),(22,1),15,(22,1)).
shortest_path((24,1),(19,1),105,(23,1)).
shortest_path((24,1),(27,1),105,(24,2)).
shortest_path((24,1),(28,1),90,(24,2)).
shortest_path((24,1),(20,1),90,(23,1)).
shortest_path((24,1),(18,1),120,(23,1)).
shortest_path((24,1),(17,1),135,(23,1)).
shortest_path((24,1),(26,4),75,(24,2)).
shortest_path((24,1),(30,4),135,(24,2)).
shortest_path((24,1),(21,1),75,(23,1)).
shortest_path((24,1),(23,1),15,(23,1)).
shortest_path((24,1),(22,1),30,(23,1)).
shortest_path((22,1),(19,1),75,(22,2)).
shortest_path((22,1),(27,1),135,(23,1)).
shortest_path((22,1),(28,1),120,(23,1)).
shortest_path((22,1),(20,1),60,(22,2)).
shortest_path((22,1),(18,1),90,(22,2)).
shortest_path((22,1),(17,1),105,(22,2)).
shortest_path((22,1),(26,4),105,(23,1)).
shortest_path((22,1),(30,4),165,(23,1)).
shortest_path((22,1),(21,1),45,(22,2)).
shortest_path((22,1),(23,1),15,(23,1)).
shortest_path((22,1),(24,1),30,(23,1)).
shortest_path((21,2),(19,1),45,(21,1)).
shortest_path((21,2),(27,1),165,(22,2)).
shortest_path((21,2),(28,1),150,(22,2)).
shortest_path((21,2),(20,1),30,(21,1)).
shortest_path((21,2),(18,1),60,(21,1)).
shortest_path((21,2),(17,1),75,(21,1)).
shortest_path((21,2),(26,4),135,(22,2)).
shortest_path((21,2),(30,4),195,(22,2)).
shortest_path((21,2),(21,1),15,(21,1)).
shortest_path((21,2),(23,1),45,(22,2)).
shortest_path((21,2),(24,1),60,(22,2)).
shortest_path((21,2),(22,1),30,(22,2)).
shortest_path((22,2),(19,1),60,(21,2)).
shortest_path((22,2),(27,1),150,(22,1)).
shortest_path((22,2),(28,1),135,(22,1)).
shortest_path((22,2),(20,1),45,(21,2)).
shortest_path((22,2),(18,1),75,(21,2)).
shortest_path((22,2),(17,1),90,(21,2)).
shortest_path((22,2),(26,4),120,(22,1)).
shortest_path((22,2),(30,4),180,(22,1)).
shortest_path((22,2),(21,1),30,(21,2)).
shortest_path((22,2),(23,1),30,(22,1)).
shortest_path((22,2),(24,1),45,(22,1)).
shortest_path((22,2),(22,1),15,(22,1)).
shortest_path((24,2),(19,1),120,(24,1)).
shortest_path((24,2),(27,1),90,(25,2)).
shortest_path((24,2),(28,1),75,(25,2)).
shortest_path((24,2),(20,1),105,(24,1)).
shortest_path((24,2),(18,1),135,(24,1)).
shortest_path((24,2),(17,1),150,(24,1)).
shortest_path((24,2),(26,4),60,(25,2)).
shortest_path((24,2),(30,4),120,(25,2)).
shortest_path((24,2),(21,1),90,(24,1)).
shortest_path((24,2),(23,1),30,(24,1)).
shortest_path((24,2),(24,1),15,(24,1)).
shortest_path((24,2),(22,1),45,(24,1)).
shortest_path((28,2),(19,1),180,(27,2)).
shortest_path((28,2),(27,1),30,(28,1)).
shortest_path((28,2),(28,1),15,(28,1)).
shortest_path((28,2),(20,1),165,(27,2)).
shortest_path((28,2),(18,1),195,(27,2)).
shortest_path((28,2),(17,1),210,(27,2)).
shortest_path((28,2),(26,4),60,(27,2)).
shortest_path((28,2),(30,4),90,(27,2)).
shortest_path((28,2),(21,1),150,(27,2)).
shortest_path((28,2),(23,1),90,(27,2)).
shortest_path((28,2),(24,1),75,(27,2)).
shortest_path((28,2),(22,1),105,(27,2)).
shortest_path((25,2),(19,1),135,(24,2)).
shortest_path((25,2),(27,1),75,(26,2)).
shortest_path((25,2),(28,1),60,(26,2)).
shortest_path((25,2),(20,1),120,(24,2)).
shortest_path((25,2),(18,1),150,(24,2)).
shortest_path((25,2),(17,1),165,(24,2)).
shortest_path((25,2),(26,4),45,(26,2)).
shortest_path((25,2),(30,4),105,(26,2)).
shortest_path((25,2),(21,1),105,(24,2)).
shortest_path((25,2),(23,1),45,(24,2)).
shortest_path((25,2),(24,1),30,(24,2)).
shortest_path((25,2),(22,1),60,(24,2)).
shortest_path((26,2),(19,1),150,(25,2)).
shortest_path((26,2),(27,1),60,(27,2)).
shortest_path((26,2),(28,1),45,(27,2)).
shortest_path((26,2),(20,1),135,(25,2)).
shortest_path((26,2),(18,1),165,(25,2)).
shortest_path((26,2),(17,1),180,(25,2)).
shortest_path((26,2),(26,4),30,(26,3)).
shortest_path((26,2),(30,4),90,(27,2)).
shortest_path((26,2),(21,1),120,(25,2)).
shortest_path((26,2),(23,1),60,(25,2)).
shortest_path((26,2),(24,1),45,(25,2)).
shortest_path((26,2),(22,1),75,(25,2)).
shortest_path((27,2),(19,1),165,(26,2)).
shortest_path((27,2),(27,1),45,(28,2)).
shortest_path((27,2),(28,1),30,(28,2)).
shortest_path((27,2),(20,1),150,(26,2)).
shortest_path((27,2),(18,1),180,(26,2)).
shortest_path((27,2),(17,1),195,(26,2)).
shortest_path((27,2),(26,4),45,(26,2)).
shortest_path((27,2),(30,4),75,(27,3)).
shortest_path((27,2),(21,1),135,(26,2)).
shortest_path((27,2),(23,1),75,(26,2)).
shortest_path((27,2),(24,1),60,(26,2)).
shortest_path((27,2),(22,1),90,(26,2)).
shortest_path((26,3),(19,1),165,(26,2)).
shortest_path((26,3),(27,1),75,(26,2)).
shortest_path((26,3),(28,1),60,(26,2)).
shortest_path((26,3),(20,1),150,(26,2)).
shortest_path((26,3),(18,1),180,(26,2)).
shortest_path((26,3),(17,1),195,(26,2)).
shortest_path((26,3),(26,4),15,(26,4)).
shortest_path((26,3),(30,4),105,(26,2)).
shortest_path((26,3),(21,1),135,(26,2)).
shortest_path((26,3),(23,1),75,(26,2)).
shortest_path((26,3),(24,1),60,(26,2)).
shortest_path((26,3),(22,1),90,(26,2)).
shortest_path((27,3),(19,1),180,(27,2)).
shortest_path((27,3),(27,1),60,(27,2)).
shortest_path((27,3),(28,1),45,(27,2)).
shortest_path((27,3),(20,1),165,(27,2)).
shortest_path((27,3),(18,1),195,(27,2)).
shortest_path((27,3),(17,1),210,(27,2)).
shortest_path((27,3),(26,4),60,(27,2)).
shortest_path((27,3),(30,4),60,(28,3)).
shortest_path((27,3),(21,1),150,(27,2)).
shortest_path((27,3),(23,1),90,(27,2)).
shortest_path((27,3),(24,1),75,(27,2)).
shortest_path((27,3),(22,1),105,(27,2)).
shortest_path((28,3),(19,1),195,(27,3)).
shortest_path((28,3),(27,1),75,(27,3)).
shortest_path((28,3),(28,1),60,(27,3)).
shortest_path((28,3),(20,1),180,(27,3)).
shortest_path((28,3),(18,1),210,(27,3)).
shortest_path((28,3),(17,1),225,(27,3)).
shortest_path((28,3),(26,4),75,(27,3)).
shortest_path((28,3),(30,4),45,(29,3)).
shortest_path((28,3),(21,1),165,(27,3)).
shortest_path((28,3),(23,1),105,(27,3)).
shortest_path((28,3),(24,1),90,(27,3)).
shortest_path((28,3),(22,1),120,(27,3)).
shortest_path((29,3),(19,1),210,(28,3)).
shortest_path((29,3),(27,1),90,(28,3)).
shortest_path((29,3),(28,1),75,(28,3)).
shortest_path((29,3),(20,1),195,(28,3)).
shortest_path((29,3),(18,1),225,(28,3)).
shortest_path((29,3),(17,1),240,(28,3)).
shortest_path((29,3),(26,4),90,(28,3)).
shortest_path((29,3),(30,4),30,(30,3)).
shortest_path((29,3),(21,1),180,(28,3)).
shortest_path((29,3),(23,1),120,(28,3)).
shortest_path((29,3),(24,1),105,(28,3)).
shortest_path((29,3),(22,1),135,(28,3)).
shortest_path((30,3),(19,1),225,(29,3)).
shortest_path((30,3),(27,1),105,(29,3)).
shortest_path((30,3),(28,1),90,(29,3)).
shortest_path((30,3),(20,1),210,(29,3)).
shortest_path((30,3),(18,1),240,(29,3)).
shortest_path((30,3),(17,1),255,(29,3)).
shortest_path((30,3),(26,4),105,(29,3)).
shortest_path((30,3),(30,4),15,(30,4)).
shortest_path((30,3),(21,1),195,(29,3)).
shortest_path((30,3),(23,1),135,(29,3)).
shortest_path((30,3),(24,1),120,(29,3)).
shortest_path((30,3),(22,1),150,(29,3)).
shortest_path((28,4),(19,1),210,(28,3)).
shortest_path((28,4),(27,1),90,(28,3)).
shortest_path((28,4),(28,1),75,(28,3)).
shortest_path((28,4),(20,1),195,(28,3)).
shortest_path((28,4),(18,1),225,(28,3)).
shortest_path((28,4),(17,1),240,(28,3)).
shortest_path((28,4),(26,4),90,(28,3)).
shortest_path((28,4),(30,4),60,(28,3)).
shortest_path((28,4),(21,1),180,(28,3)).
shortest_path((28,4),(23,1),120,(28,3)).
shortest_path((28,4),(24,1),105,(28,3)).
shortest_path((28,4),(22,1),135,(28,3)).
shortest_path((27,4),(19,1),225,(28,4)).
shortest_path((27,4),(27,1),105,(28,4)).
shortest_path((27,4),(28,1),90,(28,4)).
shortest_path((27,4),(20,1),210,(28,4)).
shortest_path((27,4),(18,1),240,(28,4)).
shortest_path((27,4),(17,1),255,(28,4)).
shortest_path((27,4),(26,4),105,(28,4)).
shortest_path((27,4),(30,4),75,(28,4)).
shortest_path((27,4),(21,1),195,(28,4)).
shortest_path((27,4),(23,1),135,(28,4)).
shortest_path((27,4),(24,1),120,(28,4)).
shortest_path((27,4),(22,1),150,(28,4)).
robot(1).
robot(2).
robot(3).
robot(4).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(deliver,(7,pickup),(7,putdown)).
depends(deliver,(8,pickup),(8,putdown)).
depends(wait,(7,pickup),(2,putdown)).
depends(wait,(6,pickup),(3,putdown)).
depends(wait,(1,pickup),(4,putdown)).
depends(wait,(8,pickup),(5,putdown)).
start(1,(21,1)).
start(2,(23,1)).
start(3,(24,1)).
start(4,(22,1)).


#const maxstep=66.
