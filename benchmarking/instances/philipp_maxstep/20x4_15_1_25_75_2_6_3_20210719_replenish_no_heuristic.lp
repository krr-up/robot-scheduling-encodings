edge((2,1),(3,1),15).
edge((3,1),(4,1),15).
edge((4,1),(5,1),15).
edge((5,1),(6,1),15).
edge((6,1),(7,1),15).
edge((7,1),(8,1),15).
edge((11,1),(12,1),15).
edge((3,1),(3,2),15).
edge((4,1),(4,2),15).
edge((6,1),(6,2),15).
edge((8,1),(8,2),15).
edge((12,1),(12,2),15).
edge((1,2),(2,2),15).
edge((2,2),(3,2),15).
edge((3,2),(4,2),15).
edge((4,2),(5,2),15).
edge((8,2),(9,2),15).
edge((9,2),(10,2),15).
edge((10,2),(11,2),15).
edge((11,2),(12,2),15).
edge((12,2),(13,2),15).
edge((13,2),(14,2),15).
edge((14,2),(15,2),15).
edge((16,2),(17,2),15).
edge((17,2),(18,2),15).
edge((1,2),(1,3),15).
edge((4,2),(4,3),15).
edge((6,2),(6,3),15).
edge((15,2),(15,3),15).
edge((16,2),(16,3),15).
edge((18,2),(18,3),15).
edge((2,3),(3,3),15).
edge((3,3),(4,3),15).
edge((15,3),(16,3),15).
edge((18,3),(19,3),15).
edge((1,3),(1,4),15).
edge((6,3),(6,4),15).
edge((19,3),(19,4),15).
edge((5,4),(6,4),15).
edge((6,4),(7,4),15).
edge((18,4),(19,4),15).
edge((19,4),(20,4),15).
edge((20,4),(19,4),15).
edge((19,4),(18,4),15).
edge((7,4),(6,4),15).
edge((6,4),(5,4),15).
edge((19,4),(19,3),15).
edge((6,4),(6,3),15).
edge((1,4),(1,3),15).
edge((19,3),(18,3),15).
edge((16,3),(15,3),15).
edge((4,3),(3,3),15).
edge((3,3),(2,3),15).
edge((18,3),(18,2),15).
edge((16,3),(16,2),15).
edge((15,3),(15,2),15).
edge((6,3),(6,2),15).
edge((4,3),(4,2),15).
edge((1,3),(1,2),15).
edge((18,2),(17,2),15).
edge((17,2),(16,2),15).
edge((15,2),(14,2),15).
edge((14,2),(13,2),15).
edge((13,2),(12,2),15).
edge((12,2),(11,2),15).
edge((11,2),(10,2),15).
edge((10,2),(9,2),15).
edge((9,2),(8,2),15).
edge((5,2),(4,2),15).
edge((4,2),(3,2),15).
edge((3,2),(2,2),15).
edge((2,2),(1,2),15).
edge((12,2),(12,1),15).
edge((8,2),(8,1),15).
edge((6,2),(6,1),15).
edge((4,2),(4,1),15).
edge((3,2),(3,1),15).
edge((12,1),(11,1),15).
edge((8,1),(7,1),15).
edge((7,1),(6,1),15).
edge((6,1),(5,1),15).
edge((5,1),(4,1),15).
edge((4,1),(3,1),15).
edge((3,1),(2,1),15).
conflict((2,1),(2,1)).
conflict((3,1),(3,1)).
conflict((4,1),(4,1)).
conflict((5,1),(5,1)).
conflict((6,1),(6,1)).
conflict((7,1),(7,1)).
conflict((8,1),(8,1)).
conflict((11,1),(11,1)).
conflict((12,1),(12,1)).
conflict((1,2),(1,2)).
conflict((2,2),(2,2)).
conflict((3,2),(3,2)).
conflict((4,2),(4,2)).
conflict((5,2),(5,2)).
conflict((6,2),(6,2)).
conflict((8,2),(8,2)).
conflict((9,2),(9,2)).
conflict((10,2),(10,2)).
conflict((11,2),(11,2)).
conflict((12,2),(12,2)).
conflict((13,2),(13,2)).
conflict((14,2),(14,2)).
conflict((15,2),(15,2)).
conflict((16,2),(16,2)).
conflict((17,2),(17,2)).
conflict((18,2),(18,2)).
conflict((1,3),(1,3)).
conflict((2,3),(2,3)).
conflict((3,3),(3,3)).
conflict((4,3),(4,3)).
conflict((6,3),(6,3)).
conflict((15,3),(15,3)).
conflict((16,3),(16,3)).
conflict((18,3),(18,3)).
conflict((19,3),(19,3)).
conflict((1,4),(1,4)).
conflict((5,4),(5,4)).
conflict((6,4),(6,4)).
conflict((7,4),(7,4)).
conflict((18,4),(18,4)).
conflict((19,4),(19,4)).
conflict((20,4),(20,4)).
task((1,pickup),(2,1)).
task((2,pickup),(6,1)).
task((3,pickup),(6,1)).
task((4,pickup),(6,1)).
task((5,pickup),(4,1)).
task((6,pickup),(5,1)).
task((1,putdown),(6,4)).
task((2,putdown),(4,1)).
task((3,putdown),(2,1)).
task((4,putdown),(5,1)).
task((5,putdown),(1,4)).
task((6,putdown),(7,4)).
home(1,(12,1)).
home(2,(11,1)).
start(1,(12,1)).
start(2,(11,1)).
robot(1).
robot(2).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(wait,(5,pickup),(2,putdown)).
depends(wait,(1,pickup),(3,putdown)).
depends(wait,(6,pickup),(4,putdown)).
shortest_path((2,1),(6,1),60,(3,1)).
shortest_path((2,1),(4,1),30,(3,1)).
shortest_path((2,1),(5,1),45,(3,1)).
shortest_path((2,1),(6,4),105,(3,1)).
shortest_path((2,1),(1,4),90,(3,1)).
shortest_path((2,1),(7,4),120,(3,1)).
shortest_path((2,1),(12,1),180,(3,1)).
shortest_path((2,1),(11,1),195,(3,1)).
shortest_path((6,1),(2,1),60,(5,1)).
shortest_path((6,1),(4,1),30,(5,1)).
shortest_path((6,1),(5,1),15,(5,1)).
shortest_path((6,1),(6,4),45,(6,2)).
shortest_path((6,1),(1,4),120,(5,1)).
shortest_path((6,1),(7,4),60,(6,2)).
shortest_path((6,1),(12,1),120,(7,1)).
shortest_path((6,1),(11,1),135,(7,1)).
shortest_path((4,1),(2,1),30,(3,1)).
shortest_path((4,1),(6,1),30,(5,1)).
shortest_path((4,1),(5,1),15,(5,1)).
shortest_path((4,1),(6,4),75,(5,1)).
shortest_path((4,1),(1,4),90,(4,2)).
shortest_path((4,1),(1,4),90,(3,1)).
shortest_path((4,1),(7,4),90,(5,1)).
shortest_path((4,1),(12,1),150,(5,1)).
shortest_path((4,1),(11,1),165,(5,1)).
shortest_path((5,1),(2,1),45,(4,1)).
shortest_path((5,1),(6,1),15,(6,1)).
shortest_path((5,1),(4,1),15,(4,1)).
shortest_path((5,1),(6,4),60,(6,1)).
shortest_path((5,1),(1,4),105,(4,1)).
shortest_path((5,1),(7,4),75,(6,1)).
shortest_path((5,1),(12,1),135,(6,1)).
shortest_path((5,1),(11,1),150,(6,1)).
shortest_path((6,4),(2,1),105,(6,3)).
shortest_path((6,4),(6,1),45,(6,3)).
shortest_path((6,4),(4,1),75,(6,3)).
shortest_path((6,4),(5,1),60,(6,3)).
shortest_path((6,4),(1,4),165,(6,3)).
shortest_path((6,4),(7,4),15,(7,4)).
shortest_path((6,4),(12,1),165,(6,3)).
shortest_path((6,4),(11,1),180,(6,3)).
shortest_path((1,4),(2,1),90,(1,3)).
shortest_path((1,4),(6,1),120,(1,3)).
shortest_path((1,4),(4,1),90,(1,3)).
shortest_path((1,4),(5,1),105,(1,3)).
shortest_path((1,4),(6,4),165,(1,3)).
shortest_path((1,4),(7,4),180,(1,3)).
shortest_path((1,4),(12,1),240,(1,3)).
shortest_path((1,4),(11,1),255,(1,3)).
shortest_path((7,4),(2,1),120,(6,4)).
shortest_path((7,4),(6,1),60,(6,4)).
shortest_path((7,4),(4,1),90,(6,4)).
shortest_path((7,4),(5,1),75,(6,4)).
shortest_path((7,4),(6,4),15,(6,4)).
shortest_path((7,4),(1,4),180,(6,4)).
shortest_path((7,4),(12,1),180,(6,4)).
shortest_path((7,4),(11,1),195,(6,4)).
shortest_path((12,1),(2,1),180,(12,2)).
shortest_path((12,1),(6,1),120,(12,2)).
shortest_path((12,1),(4,1),150,(12,2)).
shortest_path((12,1),(5,1),135,(12,2)).
shortest_path((12,1),(6,4),165,(12,2)).
shortest_path((12,1),(1,4),240,(12,2)).
shortest_path((12,1),(7,4),180,(12,2)).
shortest_path((12,1),(11,1),15,(11,1)).
shortest_path((11,1),(2,1),195,(12,1)).
shortest_path((11,1),(6,1),135,(12,1)).
shortest_path((11,1),(4,1),165,(12,1)).
shortest_path((11,1),(5,1),150,(12,1)).
shortest_path((11,1),(6,4),180,(12,1)).
shortest_path((11,1),(1,4),255,(12,1)).
shortest_path((11,1),(7,4),195,(12,1)).
shortest_path((11,1),(12,1),15,(12,1)).
shortest_path((12,2),(7,4),165,(11,2)).
shortest_path((12,2),(1,4),225,(11,2)).
shortest_path((12,2),(6,4),150,(11,2)).
shortest_path((12,2),(5,1),120,(11,2)).
shortest_path((12,2),(4,1),135,(11,2)).
shortest_path((12,2),(6,1),105,(11,2)).
shortest_path((12,2),(2,1),165,(11,2)).
shortest_path((1,3),(11,1),240,(1,2)).
shortest_path((1,3),(12,1),225,(1,2)).
shortest_path((1,3),(7,4),165,(1,2)).
shortest_path((1,3),(6,4),150,(1,2)).
shortest_path((1,3),(5,1),90,(1,2)).
shortest_path((1,3),(4,1),75,(1,2)).
shortest_path((1,3),(6,1),105,(1,2)).
shortest_path((1,3),(2,1),75,(1,2)).
shortest_path((6,3),(11,1),165,(6,2)).
shortest_path((6,3),(12,1),150,(6,2)).
shortest_path((6,3),(1,4),150,(6,2)).
shortest_path((6,3),(5,1),45,(6,2)).
shortest_path((6,3),(4,1),60,(6,2)).
shortest_path((6,3),(6,1),30,(6,2)).
shortest_path((6,3),(2,1),90,(6,2)).
shortest_path((3,1),(1,4),75,(3,2)).
shortest_path((4,2),(1,4),75,(3,2)).
shortest_path((3,1),(2,1),15,(2,1)).
shortest_path((7,1),(11,1),120,(8,1)).
shortest_path((7,1),(12,1),105,(8,1)).
shortest_path((6,2),(7,4),45,(6,3)).
shortest_path((6,2),(6,4),30,(6,3)).
shortest_path((3,1),(11,1),180,(4,1)).
shortest_path((3,1),(12,1),165,(4,1)).
shortest_path((3,1),(7,4),105,(4,1)).
shortest_path((3,1),(6,4),90,(4,1)).
shortest_path((3,1),(5,1),30,(4,1)).
shortest_path((3,1),(4,1),15,(4,1)).
shortest_path((3,1),(6,1),45,(4,1)).
shortest_path((6,3),(6,4),15,(6,4)).
shortest_path((6,3),(7,4),30,(6,4)).
shortest_path((8,1),(12,1),90,(8,2)).
shortest_path((8,1),(11,1),105,(8,2)).
shortest_path((3,2),(1,4),60,(2,2)).
shortest_path((6,2),(2,1),75,(6,1)).
shortest_path((6,2),(6,1),15,(6,1)).
shortest_path((6,2),(4,1),45,(6,1)).
shortest_path((6,2),(5,1),30,(6,1)).
shortest_path((6,2),(1,4),135,(6,1)).
shortest_path((6,2),(12,1),135,(6,1)).
shortest_path((6,2),(11,1),150,(6,1)).
shortest_path((1,2),(2,1),60,(2,2)).
shortest_path((1,2),(6,1),90,(2,2)).
shortest_path((1,2),(4,1),60,(2,2)).
shortest_path((1,2),(5,1),75,(2,2)).
shortest_path((1,2),(6,4),135,(2,2)).
shortest_path((1,2),(7,4),150,(2,2)).
shortest_path((1,2),(12,1),210,(2,2)).
shortest_path((1,2),(11,1),225,(2,2)).
shortest_path((11,2),(2,1),150,(10,2)).
shortest_path((11,2),(6,1),90,(10,2)).
shortest_path((11,2),(4,1),120,(10,2)).
shortest_path((11,2),(5,1),105,(10,2)).
shortest_path((11,2),(6,4),135,(10,2)).
shortest_path((11,2),(1,4),210,(10,2)).
shortest_path((11,2),(7,4),150,(10,2)).
shortest_path((10,2),(7,4),135,(9,2)).
shortest_path((10,2),(1,4),195,(9,2)).
shortest_path((10,2),(6,4),120,(9,2)).
shortest_path((10,2),(5,1),90,(9,2)).
shortest_path((10,2),(4,1),105,(9,2)).
shortest_path((10,2),(6,1),75,(9,2)).
shortest_path((10,2),(2,1),135,(9,2)).
shortest_path((2,2),(11,1),210,(3,2)).
shortest_path((2,2),(12,1),195,(3,2)).
shortest_path((2,2),(7,4),135,(3,2)).
shortest_path((2,2),(6,4),120,(3,2)).
shortest_path((2,2),(5,1),60,(3,2)).
shortest_path((2,2),(4,1),45,(3,2)).
shortest_path((2,2),(6,1),75,(3,2)).
shortest_path((2,2),(2,1),45,(3,2)).
shortest_path((2,2),(1,4),45,(1,2)).
shortest_path((8,2),(11,1),90,(9,2)).
shortest_path((8,2),(12,1),75,(9,2)).
shortest_path((9,2),(12,1),60,(10,2)).
shortest_path((9,2),(11,1),75,(10,2)).
shortest_path((1,2),(1,4),30,(1,3)).
shortest_path((3,2),(2,1),30,(3,1)).
shortest_path((3,2),(6,1),60,(4,2)).
shortest_path((3,2),(6,1),60,(3,1)).
shortest_path((3,2),(4,1),30,(4,2)).
shortest_path((3,2),(4,1),30,(3,1)).
shortest_path((3,2),(5,1),45,(4,2)).
shortest_path((3,2),(5,1),45,(3,1)).
shortest_path((3,2),(6,4),105,(4,2)).
shortest_path((3,2),(6,4),105,(3,1)).
shortest_path((3,2),(7,4),120,(4,2)).
shortest_path((3,2),(7,4),120,(3,1)).
shortest_path((3,2),(12,1),180,(4,2)).
shortest_path((3,2),(12,1),180,(3,1)).
shortest_path((3,2),(11,1),195,(4,2)).
shortest_path((3,2),(11,1),195,(3,1)).
shortest_path((9,2),(2,1),120,(8,2)).
shortest_path((9,2),(6,1),60,(8,2)).
shortest_path((9,2),(4,1),90,(8,2)).
shortest_path((9,2),(5,1),75,(8,2)).
shortest_path((9,2),(6,4),105,(8,2)).
shortest_path((9,2),(1,4),180,(8,2)).
shortest_path((9,2),(7,4),120,(8,2)).
shortest_path((8,2),(7,4),105,(8,1)).
shortest_path((8,2),(1,4),165,(8,1)).
shortest_path((8,2),(6,4),90,(8,1)).
shortest_path((8,2),(5,1),60,(8,1)).
shortest_path((8,2),(4,1),75,(8,1)).
shortest_path((8,2),(6,1),45,(8,1)).
shortest_path((8,2),(2,1),105,(8,1)).
shortest_path((4,2),(11,1),180,(4,1)).
shortest_path((4,2),(12,1),165,(4,1)).
shortest_path((4,2),(7,4),105,(4,1)).
shortest_path((4,2),(6,4),90,(4,1)).
shortest_path((4,2),(5,1),30,(4,1)).
shortest_path((4,2),(4,1),15,(4,1)).
shortest_path((4,2),(6,1),45,(4,1)).
shortest_path((1,3),(1,4),15,(1,4)).
shortest_path((10,2),(11,1),60,(11,2)).
shortest_path((10,2),(12,1),45,(11,2)).
shortest_path((11,2),(12,1),30,(12,2)).
shortest_path((11,2),(11,1),45,(12,2)).
shortest_path((8,1),(2,1),90,(7,1)).
shortest_path((8,1),(6,1),30,(7,1)).
shortest_path((8,1),(4,1),60,(7,1)).
shortest_path((8,1),(5,1),45,(7,1)).
shortest_path((8,1),(6,4),75,(7,1)).
shortest_path((8,1),(1,4),150,(7,1)).
shortest_path((8,1),(7,4),90,(7,1)).
shortest_path((7,1),(7,4),75,(6,1)).
shortest_path((7,1),(1,4),135,(6,1)).
shortest_path((7,1),(6,4),60,(6,1)).
shortest_path((7,1),(5,1),30,(6,1)).
shortest_path((7,1),(4,1),45,(6,1)).
shortest_path((7,1),(6,1),15,(6,1)).
shortest_path((7,1),(2,1),75,(6,1)).
shortest_path((12,2),(11,1),30,(12,1)).
shortest_path((12,2),(12,1),15,(12,1)).


#const maxstep=42.
