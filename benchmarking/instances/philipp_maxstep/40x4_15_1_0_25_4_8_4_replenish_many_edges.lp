edge((12,1),(13,1),15).
edge((13,1),(14,1),15).
edge((14,1),(15,1),15).
edge((15,1),(16,1),15).
edge((16,1),(17,1),15).
edge((17,1),(18,1),15).
edge((18,1),(19,1),15).
edge((19,1),(20,1),15).
edge((20,1),(21,1),15).
edge((21,1),(22,1),15).
edge((22,1),(23,1),15).
edge((23,1),(24,1),15).
edge((24,1),(25,1),15).
edge((25,1),(26,1),15).
edge((26,1),(27,1),15).
edge((27,1),(28,1),15).
edge((28,1),(29,1),15).
edge((29,1),(30,1),15).
edge((30,1),(31,1),15).
edge((31,1),(32,1),15).
edge((32,1),(33,1),15).
edge((33,1),(34,1),15).
edge((34,1),(35,1),15).
edge((35,1),(36,1),15).
edge((36,1),(37,1),15).
edge((37,1),(38,1),15).
edge((38,1),(39,1),15).
edge((14,1),(14,2),15).
edge((39,1),(39,2),15).
edge((14,2),(14,3),15).
edge((39,2),(39,3),15).
edge((11,3),(12,3),15).
edge((12,3),(13,3),15).
edge((13,3),(14,3),15).
edge((14,3),(15,3),15).
edge((11,3),(11,4),15).
edge((12,3),(12,4),15).
edge((39,3),(39,4),15).
edge((11,4),(12,4),15).
edge((39,4),(40,4),15).
edge((40,4),(39,4),15).
edge((12,4),(11,4),15).
edge((39,4),(39,3),15).
edge((12,4),(12,3),15).
edge((11,4),(11,3),15).
edge((15,3),(14,3),15).
edge((14,3),(13,3),15).
edge((13,3),(12,3),15).
edge((12,3),(11,3),15).
edge((39,3),(39,2),15).
edge((14,3),(14,2),15).
edge((39,2),(39,1),15).
edge((14,2),(14,1),15).
edge((39,1),(38,1),15).
edge((38,1),(37,1),15).
edge((37,1),(36,1),15).
edge((36,1),(35,1),15).
edge((35,1),(34,1),15).
edge((34,1),(33,1),15).
edge((33,1),(32,1),15).
edge((32,1),(31,1),15).
edge((31,1),(30,1),15).
edge((30,1),(29,1),15).
edge((29,1),(28,1),15).
edge((28,1),(27,1),15).
edge((27,1),(26,1),15).
edge((26,1),(25,1),15).
edge((25,1),(24,1),15).
edge((24,1),(23,1),15).
edge((23,1),(22,1),15).
edge((22,1),(21,1),15).
edge((21,1),(20,1),15).
edge((20,1),(19,1),15).
edge((19,1),(18,1),15).
edge((18,1),(17,1),15).
edge((17,1),(16,1),15).
edge((16,1),(15,1),15).
edge((15,1),(14,1),15).
edge((14,1),(13,1),15).
edge((13,1),(12,1),15).
conflict((12,1),(12,1)).
conflict((13,1),(13,1)).
conflict((14,1),(14,1)).
conflict((15,1),(15,1)).
conflict((16,1),(16,1)).
conflict((17,1),(17,1)).
conflict((18,1),(18,1)).
conflict((19,1),(19,1)).
conflict((20,1),(20,1)).
conflict((21,1),(21,1)).
conflict((22,1),(22,1)).
conflict((23,1),(23,1)).
conflict((24,1),(24,1)).
conflict((25,1),(25,1)).
conflict((26,1),(26,1)).
conflict((27,1),(27,1)).
conflict((28,1),(28,1)).
conflict((29,1),(29,1)).
conflict((30,1),(30,1)).
conflict((31,1),(31,1)).
conflict((32,1),(32,1)).
conflict((33,1),(33,1)).
conflict((34,1),(34,1)).
conflict((35,1),(35,1)).
conflict((36,1),(36,1)).
conflict((37,1),(37,1)).
conflict((38,1),(38,1)).
conflict((39,1),(39,1)).
conflict((14,2),(14,2)).
conflict((39,2),(39,2)).
conflict((11,3),(11,3)).
conflict((12,3),(12,3)).
conflict((13,3),(13,3)).
conflict((14,3),(14,3)).
conflict((15,3),(15,3)).
conflict((39,3),(39,3)).
conflict((11,4),(11,4)).
conflict((12,4),(12,4)).
conflict((39,4),(39,4)).
conflict((40,4),(40,4)).
task((1,pickup),(27,1)).
task((2,pickup),(16,1)).
task((3,pickup),(27,1)).
task((4,pickup),(14,1)).
task((5,pickup),(27,1)).
task((6,pickup),(26,1)).
task((7,pickup),(12,1)).
task((8,pickup),(15,1)).
task((1,putdown),(15,1)).
task((2,putdown),(40,4)).
task((3,putdown),(12,1)).
task((4,putdown),(40,4)).
task((5,putdown),(16,1)).
task((6,putdown),(14,1)).
task((7,putdown),(40,4)).
task((8,putdown),(12,4)).
home(1,(25,1)).
home(2,(39,1)).
home(3,(23,1)).
home(4,(20,1)).
nearest((12,1),(13,1),15).
nearest((13,1),(14,1),15).
nearest((14,1),(15,1),15).
nearest((15,1),(16,1),15).
nearest((16,1),(17,1),15).
nearest((17,1),(18,1),15).
nearest((18,1),(19,1),15).
nearest((19,1),(20,1),15).
nearest((20,1),(21,1),15).
nearest((21,1),(22,1),15).
nearest((22,1),(23,1),15).
nearest((23,1),(24,1),15).
nearest((24,1),(25,1),15).
nearest((25,1),(26,1),15).
nearest((26,1),(27,1),15).
nearest((27,1),(28,1),15).
nearest((28,1),(29,1),15).
nearest((29,1),(30,1),15).
nearest((30,1),(31,1),15).
nearest((31,1),(32,1),15).
nearest((32,1),(33,1),15).
nearest((33,1),(34,1),15).
nearest((34,1),(35,1),15).
nearest((35,1),(36,1),15).
nearest((36,1),(37,1),15).
nearest((37,1),(38,1),15).
nearest((38,1),(39,1),15).
nearest((14,1),(14,2),15).
nearest((39,1),(39,2),15).
nearest((14,2),(14,3),15).
nearest((39,2),(39,3),15).
nearest((11,3),(12,3),15).
nearest((12,3),(13,3),15).
nearest((13,3),(14,3),15).
nearest((14,3),(15,3),15).
nearest((11,3),(11,4),15).
nearest((12,3),(12,4),15).
nearest((39,3),(39,4),15).
nearest((11,4),(12,4),15).
nearest((39,4),(40,4),15).
nearest((40,4),(39,4),15).
nearest((12,4),(11,4),15).
nearest((39,4),(39,3),15).
nearest((12,4),(12,3),15).
nearest((11,4),(11,3),15).
nearest((15,3),(14,3),15).
nearest((14,3),(13,3),15).
nearest((13,3),(12,3),15).
nearest((12,3),(11,3),15).
nearest((39,3),(39,2),15).
nearest((14,3),(14,2),15).
nearest((39,2),(39,1),15).
nearest((14,2),(14,1),15).
nearest((39,1),(38,1),15).
nearest((38,1),(37,1),15).
nearest((37,1),(36,1),15).
nearest((36,1),(35,1),15).
nearest((35,1),(34,1),15).
nearest((34,1),(33,1),15).
nearest((33,1),(32,1),15).
nearest((32,1),(31,1),15).
nearest((31,1),(30,1),15).
nearest((30,1),(29,1),15).
nearest((29,1),(28,1),15).
nearest((28,1),(27,1),15).
nearest((27,1),(26,1),15).
nearest((26,1),(25,1),15).
nearest((25,1),(24,1),15).
nearest((24,1),(23,1),15).
nearest((23,1),(22,1),15).
nearest((22,1),(21,1),15).
nearest((21,1),(20,1),15).
nearest((20,1),(19,1),15).
nearest((19,1),(18,1),15).
nearest((18,1),(17,1),15).
nearest((17,1),(16,1),15).
nearest((16,1),(15,1),15).
nearest((15,1),(14,1),15).
nearest((14,1),(13,1),15).
nearest((13,1),(12,1),15).
entrypoint((27,1),(27,1),0).
entrypoint((16,1),(16,1),0).
entrypoint((14,1),(14,1),0).
entrypoint((26,1),(26,1),0).
entrypoint((15,1),(15,1),0).
entrypoint((12,4),(12,4),0).
entrypoint((25,1),(25,1),0).
entrypoint((39,1),(39,1),0).
entrypoint((23,1),(23,1),0).
entrypoint((20,1),(20,1),0).
entrypoint((13,1),(12,1),15).
entrypoint((39,4),(40,4),15).
on_deadend((12,1),(12,1)).
on_deadend((40,4),(40,4)).
on_deadend((39,4),(40,4)).
on_deadend((13,1),(12,1)).
on_deadend((39,3),(40,4)).
on_deadend((39,2),(40,4)).
on_deadend((39,1),(40,4)).
on_deadend((38,1),(40,4)).
on_deadend((37,1),(40,4)).
on_deadend((36,1),(40,4)).
on_deadend((35,1),(40,4)).
on_deadend((34,1),(40,4)).
on_deadend((33,1),(40,4)).
on_deadend((32,1),(40,4)).
on_deadend((31,1),(40,4)).
on_deadend((30,1),(40,4)).
on_deadend((29,1),(40,4)).
on_deadend((28,1),(40,4)).
on_deadend((27,1),(40,4)).
on_deadend((26,1),(40,4)).
on_deadend((25,1),(40,4)).
on_deadend((24,1),(40,4)).
on_deadend((23,1),(40,4)).
on_deadend((22,1),(40,4)).
on_deadend((21,1),(40,4)).
on_deadend((20,1),(40,4)).
on_deadend((19,1),(40,4)).
on_deadend((18,1),(40,4)).
on_deadend((17,1),(40,4)).
on_deadend((16,1),(40,4)).
on_deadend((15,1),(40,4)).
endpoint_access((27,1),(27,1)).
endpoint_access((16,1),(16,1)).
endpoint_access((14,1),(14,1)).
endpoint_access((26,1),(26,1)).
endpoint_access((15,1),(15,1)).
endpoint_access((12,4),(12,4)).
endpoint_access((25,1),(25,1)).
endpoint_access((39,1),(39,1)).
endpoint_access((23,1),(23,1)).
endpoint_access((20,1),(20,1)).
endpoint_access((13,1),(12,1)).
endpoint_access((39,4),(40,4)).
endpoint_access((12,1),(12,1)).
endpoint_access((40,4),(40,4)).
endpoint_access((39,3),(40,4)).
endpoint_access((39,2),(40,4)).
endpoint_access((39,1),(40,4)).
endpoint_access((38,1),(40,4)).
endpoint_access((37,1),(40,4)).
endpoint_access((36,1),(40,4)).
endpoint_access((35,1),(40,4)).
endpoint_access((34,1),(40,4)).
endpoint_access((33,1),(40,4)).
endpoint_access((32,1),(40,4)).
endpoint_access((31,1),(40,4)).
endpoint_access((30,1),(40,4)).
endpoint_access((29,1),(40,4)).
endpoint_access((28,1),(40,4)).
endpoint_access((27,1),(40,4)).
endpoint_access((26,1),(40,4)).
endpoint_access((25,1),(40,4)).
endpoint_access((24,1),(40,4)).
endpoint_access((23,1),(40,4)).
endpoint_access((22,1),(40,4)).
endpoint_access((21,1),(40,4)).
endpoint_access((20,1),(40,4)).
endpoint_access((19,1),(40,4)).
endpoint_access((18,1),(40,4)).
endpoint_access((17,1),(40,4)).
endpoint_access((16,1),(40,4)).
endpoint_access((15,1),(40,4)).
shortest_path((27,1),(16,1),165,(26,1)).
shortest_path((27,1),(14,1),195,(26,1)).
shortest_path((27,1),(26,1),15,(26,1)).
shortest_path((27,1),(12,1),225,(26,1)).
shortest_path((27,1),(15,1),180,(26,1)).
shortest_path((27,1),(40,4),240,(28,1)).
shortest_path((27,1),(12,4),270,(26,1)).
shortest_path((27,1),(25,1),30,(26,1)).
shortest_path((27,1),(39,1),180,(28,1)).
shortest_path((27,1),(23,1),60,(26,1)).
shortest_path((27,1),(20,1),105,(26,1)).
shortest_path((16,1),(27,1),165,(17,1)).
shortest_path((16,1),(14,1),30,(15,1)).
shortest_path((16,1),(26,1),150,(17,1)).
shortest_path((16,1),(12,1),60,(15,1)).
shortest_path((16,1),(15,1),15,(15,1)).
shortest_path((16,1),(40,4),405,(17,1)).
shortest_path((16,1),(12,4),105,(15,1)).
shortest_path((16,1),(25,1),135,(17,1)).
shortest_path((16,1),(39,1),345,(17,1)).
shortest_path((16,1),(23,1),105,(17,1)).
shortest_path((16,1),(20,1),60,(17,1)).
shortest_path((14,1),(27,1),195,(15,1)).
shortest_path((14,1),(16,1),30,(15,1)).
shortest_path((14,1),(26,1),180,(15,1)).
shortest_path((14,1),(12,1),30,(13,1)).
shortest_path((14,1),(15,1),15,(15,1)).
shortest_path((14,1),(40,4),435,(15,1)).
shortest_path((14,1),(12,4),75,(14,2)).
shortest_path((14,1),(25,1),165,(15,1)).
shortest_path((14,1),(39,1),375,(15,1)).
shortest_path((14,1),(23,1),135,(15,1)).
shortest_path((14,1),(20,1),90,(15,1)).
shortest_path((26,1),(27,1),15,(27,1)).
shortest_path((26,1),(16,1),150,(25,1)).
shortest_path((26,1),(14,1),180,(25,1)).
shortest_path((26,1),(12,1),210,(25,1)).
shortest_path((26,1),(15,1),165,(25,1)).
shortest_path((26,1),(40,4),255,(27,1)).
shortest_path((26,1),(12,4),255,(25,1)).
shortest_path((26,1),(25,1),15,(25,1)).
shortest_path((26,1),(39,1),195,(27,1)).
shortest_path((26,1),(23,1),45,(25,1)).
shortest_path((26,1),(20,1),90,(25,1)).
shortest_path((12,1),(27,1),225,(13,1)).
shortest_path((12,1),(16,1),60,(13,1)).
shortest_path((12,1),(14,1),30,(13,1)).
shortest_path((12,1),(26,1),210,(13,1)).
shortest_path((12,1),(15,1),45,(13,1)).
shortest_path((12,1),(40,4),465,(13,1)).
shortest_path((12,1),(12,4),105,(13,1)).
shortest_path((12,1),(25,1),195,(13,1)).
shortest_path((12,1),(39,1),405,(13,1)).
shortest_path((12,1),(23,1),165,(13,1)).
shortest_path((12,1),(20,1),120,(13,1)).
shortest_path((15,1),(27,1),180,(16,1)).
shortest_path((15,1),(16,1),15,(16,1)).
shortest_path((15,1),(14,1),15,(14,1)).
shortest_path((15,1),(26,1),165,(16,1)).
shortest_path((15,1),(12,1),45,(14,1)).
shortest_path((15,1),(40,4),420,(16,1)).
shortest_path((15,1),(12,4),90,(14,1)).
shortest_path((15,1),(25,1),150,(16,1)).
shortest_path((15,1),(39,1),360,(16,1)).
shortest_path((15,1),(23,1),120,(16,1)).
shortest_path((15,1),(20,1),75,(16,1)).
shortest_path((40,4),(27,1),240,(39,4)).
shortest_path((40,4),(16,1),405,(39,4)).
shortest_path((40,4),(14,1),435,(39,4)).
shortest_path((40,4),(26,1),255,(39,4)).
shortest_path((40,4),(12,1),465,(39,4)).
shortest_path((40,4),(15,1),420,(39,4)).
shortest_path((40,4),(12,4),510,(39,4)).
shortest_path((40,4),(25,1),270,(39,4)).
shortest_path((40,4),(39,1),60,(39,4)).
shortest_path((40,4),(23,1),300,(39,4)).
shortest_path((40,4),(20,1),345,(39,4)).
shortest_path((12,4),(27,1),270,(12,3)).
shortest_path((12,4),(16,1),105,(12,3)).
shortest_path((12,4),(14,1),75,(12,3)).
shortest_path((12,4),(26,1),255,(12,3)).
shortest_path((12,4),(12,1),105,(12,3)).
shortest_path((12,4),(15,1),90,(12,3)).
shortest_path((12,4),(40,4),510,(12,3)).
shortest_path((12,4),(25,1),240,(12,3)).
shortest_path((12,4),(39,1),450,(12,3)).
shortest_path((12,4),(23,1),210,(12,3)).
shortest_path((12,4),(20,1),165,(12,3)).
shortest_path((25,1),(27,1),30,(26,1)).
shortest_path((25,1),(16,1),135,(24,1)).
shortest_path((25,1),(14,1),165,(24,1)).
shortest_path((25,1),(26,1),15,(26,1)).
shortest_path((25,1),(12,1),195,(24,1)).
shortest_path((25,1),(15,1),150,(24,1)).
shortest_path((25,1),(40,4),270,(26,1)).
shortest_path((25,1),(12,4),240,(24,1)).
shortest_path((25,1),(39,1),210,(26,1)).
shortest_path((25,1),(23,1),30,(24,1)).
shortest_path((25,1),(20,1),75,(24,1)).
shortest_path((39,1),(27,1),180,(38,1)).
shortest_path((39,1),(16,1),345,(38,1)).
shortest_path((39,1),(14,1),375,(38,1)).
shortest_path((39,1),(26,1),195,(38,1)).
shortest_path((39,1),(12,1),405,(38,1)).
shortest_path((39,1),(15,1),360,(38,1)).
shortest_path((39,1),(40,4),60,(39,2)).
shortest_path((39,1),(12,4),450,(38,1)).
shortest_path((39,1),(25,1),210,(38,1)).
shortest_path((39,1),(23,1),240,(38,1)).
shortest_path((39,1),(20,1),285,(38,1)).
shortest_path((23,1),(27,1),60,(24,1)).
shortest_path((23,1),(16,1),105,(22,1)).
shortest_path((23,1),(14,1),135,(22,1)).
shortest_path((23,1),(26,1),45,(24,1)).
shortest_path((23,1),(12,1),165,(22,1)).
shortest_path((23,1),(15,1),120,(22,1)).
shortest_path((23,1),(40,4),300,(24,1)).
shortest_path((23,1),(12,4),210,(22,1)).
shortest_path((23,1),(25,1),30,(24,1)).
shortest_path((23,1),(39,1),240,(24,1)).
shortest_path((23,1),(20,1),45,(22,1)).
shortest_path((20,1),(27,1),105,(21,1)).
shortest_path((20,1),(16,1),60,(19,1)).
shortest_path((20,1),(14,1),90,(19,1)).
shortest_path((20,1),(26,1),90,(21,1)).
shortest_path((20,1),(12,1),120,(19,1)).
shortest_path((20,1),(15,1),75,(19,1)).
shortest_path((20,1),(40,4),345,(21,1)).
shortest_path((20,1),(12,4),165,(19,1)).
shortest_path((20,1),(25,1),75,(21,1)).
shortest_path((20,1),(39,1),285,(21,1)).
shortest_path((20,1),(23,1),45,(21,1)).
shortest_path((13,1),(27,1),210,(14,1)).
shortest_path((13,1),(16,1),45,(14,1)).
shortest_path((13,1),(14,1),15,(14,1)).
shortest_path((13,1),(26,1),195,(14,1)).
shortest_path((13,1),(12,1),15,(12,1)).
shortest_path((13,1),(15,1),30,(14,1)).
shortest_path((13,1),(40,4),450,(14,1)).
shortest_path((13,1),(12,4),90,(14,1)).
shortest_path((13,1),(25,1),180,(14,1)).
shortest_path((13,1),(39,1),390,(14,1)).
shortest_path((13,1),(23,1),150,(14,1)).
shortest_path((13,1),(20,1),105,(14,1)).
shortest_path((17,1),(27,1),150,(18,1)).
shortest_path((17,1),(16,1),15,(16,1)).
shortest_path((17,1),(14,1),45,(16,1)).
shortest_path((17,1),(26,1),135,(18,1)).
shortest_path((17,1),(12,1),75,(16,1)).
shortest_path((17,1),(15,1),30,(16,1)).
shortest_path((17,1),(40,4),390,(18,1)).
shortest_path((17,1),(12,4),120,(16,1)).
shortest_path((17,1),(25,1),120,(18,1)).
shortest_path((17,1),(39,1),330,(18,1)).
shortest_path((17,1),(23,1),90,(18,1)).
shortest_path((17,1),(20,1),45,(18,1)).
shortest_path((18,1),(27,1),135,(19,1)).
shortest_path((18,1),(16,1),30,(17,1)).
shortest_path((18,1),(14,1),60,(17,1)).
shortest_path((18,1),(26,1),120,(19,1)).
shortest_path((18,1),(12,1),90,(17,1)).
shortest_path((18,1),(15,1),45,(17,1)).
shortest_path((18,1),(40,4),375,(19,1)).
shortest_path((18,1),(12,4),135,(17,1)).
shortest_path((18,1),(25,1),105,(19,1)).
shortest_path((18,1),(39,1),315,(19,1)).
shortest_path((18,1),(23,1),75,(19,1)).
shortest_path((18,1),(20,1),30,(19,1)).
shortest_path((19,1),(27,1),120,(20,1)).
shortest_path((19,1),(16,1),45,(18,1)).
shortest_path((19,1),(14,1),75,(18,1)).
shortest_path((19,1),(26,1),105,(20,1)).
shortest_path((19,1),(12,1),105,(18,1)).
shortest_path((19,1),(15,1),60,(18,1)).
shortest_path((19,1),(40,4),360,(20,1)).
shortest_path((19,1),(12,4),150,(18,1)).
shortest_path((19,1),(25,1),90,(20,1)).
shortest_path((19,1),(39,1),300,(20,1)).
shortest_path((19,1),(23,1),60,(20,1)).
shortest_path((19,1),(20,1),15,(20,1)).
shortest_path((21,1),(27,1),90,(22,1)).
shortest_path((21,1),(16,1),75,(20,1)).
shortest_path((21,1),(14,1),105,(20,1)).
shortest_path((21,1),(26,1),75,(22,1)).
shortest_path((21,1),(12,1),135,(20,1)).
shortest_path((21,1),(15,1),90,(20,1)).
shortest_path((21,1),(40,4),330,(22,1)).
shortest_path((21,1),(12,4),180,(20,1)).
shortest_path((21,1),(25,1),60,(22,1)).
shortest_path((21,1),(39,1),270,(22,1)).
shortest_path((21,1),(23,1),30,(22,1)).
shortest_path((21,1),(20,1),15,(20,1)).
shortest_path((22,1),(27,1),75,(23,1)).
shortest_path((22,1),(16,1),90,(21,1)).
shortest_path((22,1),(14,1),120,(21,1)).
shortest_path((22,1),(26,1),60,(23,1)).
shortest_path((22,1),(12,1),150,(21,1)).
shortest_path((22,1),(15,1),105,(21,1)).
shortest_path((22,1),(40,4),315,(23,1)).
shortest_path((22,1),(12,4),195,(21,1)).
shortest_path((22,1),(25,1),45,(23,1)).
shortest_path((22,1),(39,1),255,(23,1)).
shortest_path((22,1),(23,1),15,(23,1)).
shortest_path((22,1),(20,1),30,(21,1)).
shortest_path((24,1),(27,1),45,(25,1)).
shortest_path((24,1),(16,1),120,(23,1)).
shortest_path((24,1),(14,1),150,(23,1)).
shortest_path((24,1),(26,1),30,(25,1)).
shortest_path((24,1),(12,1),180,(23,1)).
shortest_path((24,1),(15,1),135,(23,1)).
shortest_path((24,1),(40,4),285,(25,1)).
shortest_path((24,1),(12,4),225,(23,1)).
shortest_path((24,1),(25,1),15,(25,1)).
shortest_path((24,1),(39,1),225,(25,1)).
shortest_path((24,1),(23,1),15,(23,1)).
shortest_path((24,1),(20,1),60,(23,1)).
shortest_path((28,1),(27,1),15,(27,1)).
shortest_path((28,1),(16,1),180,(27,1)).
shortest_path((28,1),(14,1),210,(27,1)).
shortest_path((28,1),(26,1),30,(27,1)).
shortest_path((28,1),(12,1),240,(27,1)).
shortest_path((28,1),(15,1),195,(27,1)).
shortest_path((28,1),(40,4),225,(29,1)).
shortest_path((28,1),(12,4),285,(27,1)).
shortest_path((28,1),(25,1),45,(27,1)).
shortest_path((28,1),(39,1),165,(29,1)).
shortest_path((28,1),(23,1),75,(27,1)).
shortest_path((28,1),(20,1),120,(27,1)).
shortest_path((29,1),(27,1),30,(28,1)).
shortest_path((29,1),(16,1),195,(28,1)).
shortest_path((29,1),(14,1),225,(28,1)).
shortest_path((29,1),(26,1),45,(28,1)).
shortest_path((29,1),(12,1),255,(28,1)).
shortest_path((29,1),(15,1),210,(28,1)).
shortest_path((29,1),(40,4),210,(30,1)).
shortest_path((29,1),(12,4),300,(28,1)).
shortest_path((29,1),(25,1),60,(28,1)).
shortest_path((29,1),(39,1),150,(30,1)).
shortest_path((29,1),(23,1),90,(28,1)).
shortest_path((29,1),(20,1),135,(28,1)).
shortest_path((30,1),(27,1),45,(29,1)).
shortest_path((30,1),(16,1),210,(29,1)).
shortest_path((30,1),(14,1),240,(29,1)).
shortest_path((30,1),(26,1),60,(29,1)).
shortest_path((30,1),(12,1),270,(29,1)).
shortest_path((30,1),(15,1),225,(29,1)).
shortest_path((30,1),(40,4),195,(31,1)).
shortest_path((30,1),(12,4),315,(29,1)).
shortest_path((30,1),(25,1),75,(29,1)).
shortest_path((30,1),(39,1),135,(31,1)).
shortest_path((30,1),(23,1),105,(29,1)).
shortest_path((30,1),(20,1),150,(29,1)).
shortest_path((31,1),(27,1),60,(30,1)).
shortest_path((31,1),(16,1),225,(30,1)).
shortest_path((31,1),(14,1),255,(30,1)).
shortest_path((31,1),(26,1),75,(30,1)).
shortest_path((31,1),(12,1),285,(30,1)).
shortest_path((31,1),(15,1),240,(30,1)).
shortest_path((31,1),(40,4),180,(32,1)).
shortest_path((31,1),(12,4),330,(30,1)).
shortest_path((31,1),(25,1),90,(30,1)).
shortest_path((31,1),(39,1),120,(32,1)).
shortest_path((31,1),(23,1),120,(30,1)).
shortest_path((31,1),(20,1),165,(30,1)).
shortest_path((32,1),(27,1),75,(31,1)).
shortest_path((32,1),(16,1),240,(31,1)).
shortest_path((32,1),(14,1),270,(31,1)).
shortest_path((32,1),(26,1),90,(31,1)).
shortest_path((32,1),(12,1),300,(31,1)).
shortest_path((32,1),(15,1),255,(31,1)).
shortest_path((32,1),(40,4),165,(33,1)).
shortest_path((32,1),(12,4),345,(31,1)).
shortest_path((32,1),(25,1),105,(31,1)).
shortest_path((32,1),(39,1),105,(33,1)).
shortest_path((32,1),(23,1),135,(31,1)).
shortest_path((32,1),(20,1),180,(31,1)).
shortest_path((33,1),(27,1),90,(32,1)).
shortest_path((33,1),(16,1),255,(32,1)).
shortest_path((33,1),(14,1),285,(32,1)).
shortest_path((33,1),(26,1),105,(32,1)).
shortest_path((33,1),(12,1),315,(32,1)).
shortest_path((33,1),(15,1),270,(32,1)).
shortest_path((33,1),(40,4),150,(34,1)).
shortest_path((33,1),(12,4),360,(32,1)).
shortest_path((33,1),(25,1),120,(32,1)).
shortest_path((33,1),(39,1),90,(34,1)).
shortest_path((33,1),(23,1),150,(32,1)).
shortest_path((33,1),(20,1),195,(32,1)).
shortest_path((34,1),(27,1),105,(33,1)).
shortest_path((34,1),(16,1),270,(33,1)).
shortest_path((34,1),(14,1),300,(33,1)).
shortest_path((34,1),(26,1),120,(33,1)).
shortest_path((34,1),(12,1),330,(33,1)).
shortest_path((34,1),(15,1),285,(33,1)).
shortest_path((34,1),(40,4),135,(35,1)).
shortest_path((34,1),(12,4),375,(33,1)).
shortest_path((34,1),(25,1),135,(33,1)).
shortest_path((34,1),(39,1),75,(35,1)).
shortest_path((34,1),(23,1),165,(33,1)).
shortest_path((34,1),(20,1),210,(33,1)).
shortest_path((35,1),(27,1),120,(34,1)).
shortest_path((35,1),(16,1),285,(34,1)).
shortest_path((35,1),(14,1),315,(34,1)).
shortest_path((35,1),(26,1),135,(34,1)).
shortest_path((35,1),(12,1),345,(34,1)).
shortest_path((35,1),(15,1),300,(34,1)).
shortest_path((35,1),(40,4),120,(36,1)).
shortest_path((35,1),(12,4),390,(34,1)).
shortest_path((35,1),(25,1),150,(34,1)).
shortest_path((35,1),(39,1),60,(36,1)).
shortest_path((35,1),(23,1),180,(34,1)).
shortest_path((35,1),(20,1),225,(34,1)).
shortest_path((36,1),(27,1),135,(35,1)).
shortest_path((36,1),(16,1),300,(35,1)).
shortest_path((36,1),(14,1),330,(35,1)).
shortest_path((36,1),(26,1),150,(35,1)).
shortest_path((36,1),(12,1),360,(35,1)).
shortest_path((36,1),(15,1),315,(35,1)).
shortest_path((36,1),(40,4),105,(37,1)).
shortest_path((36,1),(12,4),405,(35,1)).
shortest_path((36,1),(25,1),165,(35,1)).
shortest_path((36,1),(39,1),45,(37,1)).
shortest_path((36,1),(23,1),195,(35,1)).
shortest_path((36,1),(20,1),240,(35,1)).
shortest_path((37,1),(27,1),150,(36,1)).
shortest_path((37,1),(16,1),315,(36,1)).
shortest_path((37,1),(14,1),345,(36,1)).
shortest_path((37,1),(26,1),165,(36,1)).
shortest_path((37,1),(12,1),375,(36,1)).
shortest_path((37,1),(15,1),330,(36,1)).
shortest_path((37,1),(40,4),90,(38,1)).
shortest_path((37,1),(12,4),420,(36,1)).
shortest_path((37,1),(25,1),180,(36,1)).
shortest_path((37,1),(39,1),30,(38,1)).
shortest_path((37,1),(23,1),210,(36,1)).
shortest_path((37,1),(20,1),255,(36,1)).
shortest_path((38,1),(27,1),165,(37,1)).
shortest_path((38,1),(16,1),330,(37,1)).
shortest_path((38,1),(14,1),360,(37,1)).
shortest_path((38,1),(26,1),180,(37,1)).
shortest_path((38,1),(12,1),390,(37,1)).
shortest_path((38,1),(15,1),345,(37,1)).
shortest_path((38,1),(40,4),75,(39,1)).
shortest_path((38,1),(12,4),435,(37,1)).
shortest_path((38,1),(25,1),195,(37,1)).
shortest_path((38,1),(39,1),15,(39,1)).
shortest_path((38,1),(23,1),225,(37,1)).
shortest_path((38,1),(20,1),270,(37,1)).
shortest_path((14,2),(27,1),210,(14,1)).
shortest_path((14,2),(16,1),45,(14,1)).
shortest_path((14,2),(14,1),15,(14,1)).
shortest_path((14,2),(26,1),195,(14,1)).
shortest_path((14,2),(12,1),45,(14,1)).
shortest_path((14,2),(15,1),30,(14,1)).
shortest_path((14,2),(40,4),450,(14,1)).
shortest_path((14,2),(12,4),60,(14,3)).
shortest_path((14,2),(25,1),180,(14,1)).
shortest_path((14,2),(39,1),390,(14,1)).
shortest_path((14,2),(23,1),150,(14,1)).
shortest_path((14,2),(20,1),105,(14,1)).
shortest_path((39,2),(27,1),195,(39,1)).
shortest_path((39,2),(16,1),360,(39,1)).
shortest_path((39,2),(14,1),390,(39,1)).
shortest_path((39,2),(26,1),210,(39,1)).
shortest_path((39,2),(12,1),420,(39,1)).
shortest_path((39,2),(15,1),375,(39,1)).
shortest_path((39,2),(40,4),45,(39,3)).
shortest_path((39,2),(12,4),465,(39,1)).
shortest_path((39,2),(25,1),225,(39,1)).
shortest_path((39,2),(39,1),15,(39,1)).
shortest_path((39,2),(23,1),255,(39,1)).
shortest_path((39,2),(20,1),300,(39,1)).
shortest_path((14,3),(27,1),225,(14,2)).
shortest_path((14,3),(16,1),60,(14,2)).
shortest_path((14,3),(14,1),30,(14,2)).
shortest_path((14,3),(26,1),210,(14,2)).
shortest_path((14,3),(12,1),60,(14,2)).
shortest_path((14,3),(15,1),45,(14,2)).
shortest_path((14,3),(40,4),465,(14,2)).
shortest_path((14,3),(12,4),45,(13,3)).
shortest_path((14,3),(25,1),195,(14,2)).
shortest_path((14,3),(39,1),405,(14,2)).
shortest_path((14,3),(23,1),165,(14,2)).
shortest_path((14,3),(20,1),120,(14,2)).
shortest_path((39,3),(27,1),210,(39,2)).
shortest_path((39,3),(16,1),375,(39,2)).
shortest_path((39,3),(14,1),405,(39,2)).
shortest_path((39,3),(26,1),225,(39,2)).
shortest_path((39,3),(12,1),435,(39,2)).
shortest_path((39,3),(15,1),390,(39,2)).
shortest_path((39,3),(40,4),30,(39,4)).
shortest_path((39,3),(12,4),480,(39,2)).
shortest_path((39,3),(25,1),240,(39,2)).
shortest_path((39,3),(39,1),30,(39,2)).
shortest_path((39,3),(23,1),270,(39,2)).
shortest_path((39,3),(20,1),315,(39,2)).
shortest_path((11,3),(27,1),270,(12,3)).
shortest_path((11,3),(16,1),105,(12,3)).
shortest_path((11,3),(14,1),75,(12,3)).
shortest_path((11,3),(26,1),255,(12,3)).
shortest_path((11,3),(12,1),105,(12,3)).
shortest_path((11,3),(15,1),90,(12,3)).
shortest_path((11,3),(40,4),510,(12,3)).
shortest_path((11,3),(12,4),30,(12,3)).
shortest_path((11,3),(12,4),30,(11,4)).
shortest_path((11,3),(25,1),240,(12,3)).
shortest_path((11,3),(39,1),450,(12,3)).
shortest_path((11,3),(23,1),210,(12,3)).
shortest_path((11,3),(20,1),165,(12,3)).
shortest_path((12,3),(27,1),255,(13,3)).
shortest_path((12,3),(16,1),90,(13,3)).
shortest_path((12,3),(14,1),60,(13,3)).
shortest_path((12,3),(26,1),240,(13,3)).
shortest_path((12,3),(12,1),90,(13,3)).
shortest_path((12,3),(15,1),75,(13,3)).
shortest_path((12,3),(40,4),495,(13,3)).
shortest_path((12,3),(12,4),15,(12,4)).
shortest_path((12,3),(25,1),225,(13,3)).
shortest_path((12,3),(39,1),435,(13,3)).
shortest_path((12,3),(23,1),195,(13,3)).
shortest_path((12,3),(20,1),150,(13,3)).
shortest_path((13,3),(27,1),240,(14,3)).
shortest_path((13,3),(16,1),75,(14,3)).
shortest_path((13,3),(14,1),45,(14,3)).
shortest_path((13,3),(26,1),225,(14,3)).
shortest_path((13,3),(12,1),75,(14,3)).
shortest_path((13,3),(15,1),60,(14,3)).
shortest_path((13,3),(40,4),480,(14,3)).
shortest_path((13,3),(12,4),30,(12,3)).
shortest_path((13,3),(25,1),210,(14,3)).
shortest_path((13,3),(39,1),420,(14,3)).
shortest_path((13,3),(23,1),180,(14,3)).
shortest_path((13,3),(20,1),135,(14,3)).
shortest_path((15,3),(27,1),240,(14,3)).
shortest_path((15,3),(16,1),75,(14,3)).
shortest_path((15,3),(14,1),45,(14,3)).
shortest_path((15,3),(26,1),225,(14,3)).
shortest_path((15,3),(12,1),75,(14,3)).
shortest_path((15,3),(15,1),60,(14,3)).
shortest_path((15,3),(40,4),480,(14,3)).
shortest_path((15,3),(12,4),60,(14,3)).
shortest_path((15,3),(25,1),210,(14,3)).
shortest_path((15,3),(39,1),420,(14,3)).
shortest_path((15,3),(23,1),180,(14,3)).
shortest_path((15,3),(20,1),135,(14,3)).
shortest_path((11,4),(27,1),285,(12,4)).
shortest_path((11,4),(27,1),285,(11,3)).
shortest_path((11,4),(16,1),120,(12,4)).
shortest_path((11,4),(16,1),120,(11,3)).
shortest_path((11,4),(14,1),90,(12,4)).
shortest_path((11,4),(14,1),90,(11,3)).
shortest_path((11,4),(26,1),270,(12,4)).
shortest_path((11,4),(26,1),270,(11,3)).
shortest_path((11,4),(12,1),120,(12,4)).
shortest_path((11,4),(12,1),120,(11,3)).
shortest_path((11,4),(15,1),105,(12,4)).
shortest_path((11,4),(15,1),105,(11,3)).
shortest_path((11,4),(40,4),525,(12,4)).
shortest_path((11,4),(40,4),525,(11,3)).
shortest_path((11,4),(12,4),15,(12,4)).
shortest_path((11,4),(25,1),255,(12,4)).
shortest_path((11,4),(25,1),255,(11,3)).
shortest_path((11,4),(39,1),465,(12,4)).
shortest_path((11,4),(39,1),465,(11,3)).
shortest_path((11,4),(23,1),225,(12,4)).
shortest_path((11,4),(23,1),225,(11,3)).
shortest_path((11,4),(20,1),180,(12,4)).
shortest_path((11,4),(20,1),180,(11,3)).
shortest_path((39,4),(27,1),225,(39,3)).
shortest_path((39,4),(16,1),390,(39,3)).
shortest_path((39,4),(14,1),420,(39,3)).
shortest_path((39,4),(26,1),240,(39,3)).
shortest_path((39,4),(12,1),450,(39,3)).
shortest_path((39,4),(15,1),405,(39,3)).
shortest_path((39,4),(40,4),15,(40,4)).
shortest_path((39,4),(12,4),495,(39,3)).
shortest_path((39,4),(25,1),255,(39,3)).
shortest_path((39,4),(39,1),45,(39,3)).
shortest_path((39,4),(23,1),285,(39,3)).
shortest_path((39,4),(20,1),330,(39,3)).
robot(1).
robot(2).
robot(3).
robot(4).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(deliver,(7,pickup),(7,putdown)).
depends(deliver,(8,pickup),(8,putdown)).
depends(wait,(8,pickup),(1,putdown)).
depends(wait,(7,pickup),(3,putdown)).
depends(wait,(2,pickup),(5,putdown)).
depends(wait,(4,pickup),(6,putdown)).
start(1,(25,1)).
start(2,(39,1)).
start(3,(23,1)).
start(4,(20,1)).


#const maxstep=0.
