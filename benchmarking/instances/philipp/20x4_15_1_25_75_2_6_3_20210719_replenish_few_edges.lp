edge((3,1),(4,1),15).
edge((4,1),(5,1),15).
edge((8,1),(9,1),15).
edge((9,1),(10,1),15).
edge((10,1),(11,1),15).
edge((5,1),(5,2),15).
edge((8,1),(8,2),15).
edge((2,2),(3,2),15).
edge((3,2),(4,2),15).
edge((4,2),(5,2),15).
edge((5,2),(6,2),15).
edge((6,2),(7,2),15).
edge((7,2),(8,2),15).
edge((2,2),(2,3),15).
edge((5,2),(5,3),15).
edge((2,3),(3,3),15).
edge((3,3),(4,3),15).
edge((5,3),(6,3),15).
edge((6,3),(7,3),15).
edge((7,3),(8,3),15).
edge((3,3),(3,4),15).
edge((4,3),(4,4),15).
edge((8,3),(8,4),15).
edge((8,4),(9,4),15).
edge((9,4),(8,4),15).
edge((8,4),(8,3),15).
edge((4,4),(4,3),15).
edge((3,4),(3,3),15).
edge((8,3),(7,3),15).
edge((7,3),(6,3),15).
edge((6,3),(5,3),15).
edge((4,3),(3,3),15).
edge((3,3),(2,3),15).
edge((5,3),(5,2),15).
edge((2,3),(2,2),15).
edge((8,2),(7,2),15).
edge((7,2),(6,2),15).
edge((6,2),(5,2),15).
edge((5,2),(4,2),15).
edge((4,2),(3,2),15).
edge((3,2),(2,2),15).
edge((8,2),(8,1),15).
edge((5,2),(5,1),15).
edge((11,1),(10,1),15).
edge((10,1),(9,1),15).
edge((9,1),(8,1),15).
edge((5,1),(4,1),15).
edge((4,1),(3,1),15).
conflict((3,1),(3,1)).
conflict((4,1),(4,1)).
conflict((5,1),(5,1)).
conflict((8,1),(8,1)).
conflict((9,1),(9,1)).
conflict((10,1),(10,1)).
conflict((11,1),(11,1)).
conflict((2,2),(2,2)).
conflict((3,2),(3,2)).
conflict((4,2),(4,2)).
conflict((5,2),(5,2)).
conflict((6,2),(6,2)).
conflict((7,2),(7,2)).
conflict((8,2),(8,2)).
conflict((2,3),(2,3)).
conflict((3,3),(3,3)).
conflict((4,3),(4,3)).
conflict((5,3),(5,3)).
conflict((6,3),(6,3)).
conflict((7,3),(7,3)).
conflict((8,3),(8,3)).
conflict((3,4),(3,4)).
conflict((4,4),(4,4)).
conflict((8,4),(8,4)).
conflict((9,4),(9,4)).
task((1,pickup),(5,1)).
task((2,pickup),(3,1)).
task((3,pickup),(3,1)).
task((4,pickup),(4,1)).
task((5,pickup),(8,1)).
task((6,pickup),(3,1)).
task((1,putdown),(9,4)).
task((2,putdown),(5,1)).
task((3,putdown),(4,1)).
task((4,putdown),(8,4)).
task((5,putdown),(9,4)).
task((6,putdown),(8,1)).
home(1,(10,1)).
home(2,(11,1)).
start(1,(10,1)).
start(2,(11,1)).
robot(1).
robot(2).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(wait,(1,pickup),(2,putdown)).
depends(wait,(4,pickup),(3,putdown)).
depends(wait,(5,pickup),(6,putdown)).
shortest_path((5,1),(3,1),30,(4,1)).
shortest_path((5,1),(4,1),15,(4,1)).
shortest_path((5,1),(8,1),75,(5,2)).
shortest_path((5,1),(9,4),105,(5,2)).
shortest_path((5,1),(8,4),90,(5,2)).
shortest_path((5,1),(10,1),105,(5,2)).
shortest_path((5,1),(11,1),120,(5,2)).
shortest_path((3,1),(5,1),30,(4,1)).
shortest_path((3,1),(4,1),15,(4,1)).
shortest_path((3,1),(8,1),105,(4,1)).
shortest_path((3,1),(9,4),135,(4,1)).
shortest_path((3,1),(8,4),120,(4,1)).
shortest_path((3,1),(10,1),135,(4,1)).
shortest_path((3,1),(11,1),150,(4,1)).
shortest_path((4,1),(5,1),15,(5,1)).
shortest_path((4,1),(3,1),15,(3,1)).
shortest_path((4,1),(8,1),90,(5,1)).
shortest_path((4,1),(9,4),120,(5,1)).
shortest_path((4,1),(8,4),105,(5,1)).
shortest_path((4,1),(10,1),120,(5,1)).
shortest_path((4,1),(11,1),135,(5,1)).
shortest_path((8,1),(5,1),75,(8,2)).
shortest_path((8,1),(3,1),105,(8,2)).
shortest_path((8,1),(4,1),90,(8,2)).
shortest_path((8,1),(9,4),150,(8,2)).
shortest_path((8,1),(8,4),135,(8,2)).
shortest_path((8,1),(10,1),30,(9,1)).
shortest_path((8,1),(11,1),45,(9,1)).
shortest_path((9,4),(5,1),105,(8,4)).
shortest_path((9,4),(3,1),135,(8,4)).
shortest_path((9,4),(4,1),120,(8,4)).
shortest_path((9,4),(8,1),150,(8,4)).
shortest_path((9,4),(8,4),15,(8,4)).
shortest_path((9,4),(10,1),180,(8,4)).
shortest_path((9,4),(11,1),195,(8,4)).
shortest_path((8,4),(5,1),90,(8,3)).
shortest_path((8,4),(3,1),120,(8,3)).
shortest_path((8,4),(4,1),105,(8,3)).
shortest_path((8,4),(8,1),135,(8,3)).
shortest_path((8,4),(9,4),15,(9,4)).
shortest_path((8,4),(10,1),165,(8,3)).
shortest_path((8,4),(11,1),180,(8,3)).
shortest_path((10,1),(5,1),105,(9,1)).
shortest_path((10,1),(3,1),135,(9,1)).
shortest_path((10,1),(4,1),120,(9,1)).
shortest_path((10,1),(8,1),30,(9,1)).
shortest_path((10,1),(9,4),180,(9,1)).
shortest_path((10,1),(8,4),165,(9,1)).
shortest_path((10,1),(11,1),15,(11,1)).
shortest_path((11,1),(5,1),120,(10,1)).
shortest_path((11,1),(3,1),150,(10,1)).
shortest_path((11,1),(4,1),135,(10,1)).
shortest_path((11,1),(8,1),45,(10,1)).
shortest_path((11,1),(9,4),195,(10,1)).
shortest_path((11,1),(8,4),180,(10,1)).
shortest_path((11,1),(10,1),15,(10,1)).
shortest_path((9,1),(8,4),150,(8,1)).
shortest_path((9,1),(9,4),165,(8,1)).
shortest_path((9,1),(8,1),15,(8,1)).
shortest_path((9,1),(4,1),105,(8,1)).
shortest_path((9,1),(3,1),120,(8,1)).
shortest_path((9,1),(5,1),90,(8,1)).
shortest_path((8,3),(11,1),165,(7,3)).
shortest_path((8,3),(10,1),150,(7,3)).
shortest_path((8,3),(8,1),120,(7,3)).
shortest_path((8,3),(4,1),90,(7,3)).
shortest_path((8,3),(3,1),105,(7,3)).
shortest_path((8,3),(5,1),75,(7,3)).
shortest_path((9,1),(11,1),30,(10,1)).
shortest_path((9,1),(10,1),15,(10,1)).
shortest_path((8,2),(8,4),120,(7,2)).
shortest_path((8,2),(9,4),135,(7,2)).
shortest_path((8,2),(4,1),75,(7,2)).
shortest_path((8,2),(3,1),90,(7,2)).
shortest_path((8,2),(5,1),60,(7,2)).
shortest_path((5,2),(11,1),105,(6,2)).
shortest_path((5,2),(10,1),90,(6,2)).
shortest_path((5,2),(8,4),75,(5,3)).
shortest_path((5,2),(9,4),90,(5,3)).
shortest_path((5,2),(8,1),60,(6,2)).
shortest_path((6,2),(8,1),45,(7,2)).
shortest_path((5,3),(9,4),75,(6,3)).
shortest_path((5,3),(8,4),60,(6,3)).
shortest_path((6,2),(10,1),75,(7,2)).
shortest_path((6,2),(11,1),90,(7,2)).
shortest_path((7,2),(5,1),45,(6,2)).
shortest_path((7,2),(3,1),75,(6,2)).
shortest_path((7,2),(4,1),60,(6,2)).
shortest_path((7,2),(9,4),120,(6,2)).
shortest_path((7,2),(8,4),105,(6,2)).
shortest_path((7,3),(5,1),60,(6,3)).
shortest_path((7,3),(3,1),90,(6,3)).
shortest_path((7,3),(4,1),75,(6,3)).
shortest_path((7,3),(8,1),105,(6,3)).
shortest_path((7,3),(10,1),135,(6,3)).
shortest_path((7,3),(11,1),150,(6,3)).
shortest_path((6,3),(11,1),135,(5,3)).
shortest_path((6,3),(10,1),120,(5,3)).
shortest_path((6,3),(8,1),90,(5,3)).
shortest_path((6,3),(4,1),60,(5,3)).
shortest_path((6,3),(3,1),75,(5,3)).
shortest_path((6,3),(5,1),45,(5,3)).
shortest_path((6,2),(8,4),90,(5,2)).
shortest_path((6,2),(9,4),105,(5,2)).
shortest_path((6,2),(4,1),45,(5,2)).
shortest_path((6,2),(3,1),60,(5,2)).
shortest_path((6,2),(5,1),30,(5,2)).
shortest_path((7,2),(11,1),75,(8,2)).
shortest_path((7,2),(10,1),60,(8,2)).
shortest_path((6,3),(8,4),45,(7,3)).
shortest_path((6,3),(9,4),60,(7,3)).
shortest_path((7,2),(8,1),30,(8,2)).
shortest_path((8,2),(8,1),15,(8,1)).
shortest_path((7,3),(9,4),45,(8,3)).
shortest_path((7,3),(8,4),30,(8,3)).
shortest_path((8,2),(10,1),45,(8,1)).
shortest_path((8,2),(11,1),60,(8,1)).
shortest_path((5,2),(5,1),15,(5,1)).
shortest_path((5,2),(3,1),45,(5,1)).
shortest_path((5,2),(4,1),30,(5,1)).
shortest_path((5,3),(5,1),30,(5,2)).
shortest_path((5,3),(3,1),60,(5,2)).
shortest_path((5,3),(4,1),45,(5,2)).
shortest_path((5,3),(8,1),75,(5,2)).
shortest_path((5,3),(10,1),105,(5,2)).
shortest_path((5,3),(11,1),120,(5,2)).
shortest_path((8,3),(8,4),15,(8,4)).
shortest_path((8,3),(9,4),30,(8,4)).

