edge((17,1),(18,1),15).
edge((18,1),(19,1),15).
edge((19,1),(20,1),15).
edge((22,1),(23,1),15).
edge((23,1),(24,1),15).
edge((24,1),(25,1),15).
edge((25,1),(26,1),15).
edge((26,1),(27,1),15).
edge((27,1),(28,1),15).
edge((28,1),(29,1),15).
edge((29,1),(30,1),15).
edge((30,1),(31,1),15).
edge((31,1),(32,1),15).
edge((32,1),(33,1),15).
edge((33,1),(34,1),15).
edge((34,1),(35,1),15).
edge((35,1),(36,1),15).
edge((36,1),(37,1),15).
edge((37,1),(38,1),15).
edge((38,1),(39,1),15).
edge((18,1),(18,2),15).
edge((19,1),(19,2),15).
edge((23,1),(23,2),15).
edge((27,1),(27,2),15).
edge((29,1),(29,2),15).
edge((30,1),(30,2),15).
edge((31,1),(31,2),15).
edge((37,1),(37,2),15).
edge((39,1),(39,2),15).
edge((19,2),(20,2),15).
edge((20,2),(21,2),15).
edge((21,2),(22,2),15).
edge((22,2),(23,2),15).
edge((29,2),(29,3),15).
edge((39,2),(39,3),15).
edge((29,3),(29,4),15).
edge((39,3),(39,4),15).
edge((28,4),(29,4),15).
edge((39,4),(40,4),15).
edge((40,4),(39,4),15).
edge((29,4),(28,4),15).
edge((39,4),(39,3),15).
edge((29,4),(29,3),15).
edge((39,3),(39,2),15).
edge((29,3),(29,2),15).
edge((23,2),(22,2),15).
edge((22,2),(21,2),15).
edge((21,2),(20,2),15).
edge((20,2),(19,2),15).
edge((39,2),(39,1),15).
edge((37,2),(37,1),15).
edge((31,2),(31,1),15).
edge((30,2),(30,1),15).
edge((29,2),(29,1),15).
edge((27,2),(27,1),15).
edge((23,2),(23,1),15).
edge((19,2),(19,1),15).
edge((18,2),(18,1),15).
edge((39,1),(38,1),15).
edge((38,1),(37,1),15).
edge((37,1),(36,1),15).
edge((36,1),(35,1),15).
edge((35,1),(34,1),15).
edge((34,1),(33,1),15).
edge((33,1),(32,1),15).
edge((32,1),(31,1),15).
edge((31,1),(30,1),15).
edge((30,1),(29,1),15).
edge((29,1),(28,1),15).
edge((28,1),(27,1),15).
edge((27,1),(26,1),15).
edge((26,1),(25,1),15).
edge((25,1),(24,1),15).
edge((24,1),(23,1),15).
edge((23,1),(22,1),15).
edge((20,1),(19,1),15).
edge((19,1),(18,1),15).
edge((18,1),(17,1),15).
conflict(v,(17,1),(17,1)).
conflict(v,(18,1),(18,1)).
conflict(v,(19,1),(19,1)).
conflict(v,(20,1),(20,1)).
conflict(v,(22,1),(22,1)).
conflict(v,(23,1),(23,1)).
conflict(v,(24,1),(24,1)).
conflict(v,(25,1),(25,1)).
conflict(v,(26,1),(26,1)).
conflict(v,(27,1),(27,1)).
conflict(v,(28,1),(28,1)).
conflict(v,(29,1),(29,1)).
conflict(v,(30,1),(30,1)).
conflict(v,(31,1),(31,1)).
conflict(v,(32,1),(32,1)).
conflict(v,(33,1),(33,1)).
conflict(v,(34,1),(34,1)).
conflict(v,(35,1),(35,1)).
conflict(v,(36,1),(36,1)).
conflict(v,(37,1),(37,1)).
conflict(v,(38,1),(38,1)).
conflict(v,(39,1),(39,1)).
conflict(v,(18,2),(18,2)).
conflict(v,(19,2),(19,2)).
conflict(v,(20,2),(20,2)).
conflict(v,(21,2),(21,2)).
conflict(v,(22,2),(22,2)).
conflict(v,(23,2),(23,2)).
conflict(v,(27,2),(27,2)).
conflict(v,(29,2),(29,2)).
conflict(v,(30,2),(30,2)).
conflict(v,(31,2),(31,2)).
conflict(v,(37,2),(37,2)).
conflict(v,(39,2),(39,2)).
conflict(v,(29,3),(29,3)).
conflict(v,(39,3),(39,3)).
conflict(v,(28,4),(28,4)).
conflict(v,(29,4),(29,4)).
conflict(v,(39,4),(39,4)).
conflict(v,(40,4),(40,4)).
conflict(e,((17,1),(18,1)),((18,1),(17,1))).
conflict(e,((18,1),(17,1)),((17,1),(18,1))).
conflict(e,((18,1),(18,2)),((18,2),(18,1))).
conflict(e,((18,1),(19,1)),((19,1),(18,1))).
conflict(e,((19,1),(18,1)),((18,1),(19,1))).
conflict(e,((19,1),(19,2)),((19,2),(19,1))).
conflict(e,((19,1),(20,1)),((20,1),(19,1))).
conflict(e,((20,1),(19,1)),((19,1),(20,1))).
conflict(e,((22,1),(23,1)),((23,1),(22,1))).
conflict(e,((23,1),(22,1)),((22,1),(23,1))).
conflict(e,((23,1),(23,2)),((23,2),(23,1))).
conflict(e,((23,1),(24,1)),((24,1),(23,1))).
conflict(e,((24,1),(23,1)),((23,1),(24,1))).
conflict(e,((24,1),(25,1)),((25,1),(24,1))).
conflict(e,((25,1),(24,1)),((24,1),(25,1))).
conflict(e,((25,1),(26,1)),((26,1),(25,1))).
conflict(e,((26,1),(25,1)),((25,1),(26,1))).
conflict(e,((26,1),(27,1)),((27,1),(26,1))).
conflict(e,((27,1),(26,1)),((26,1),(27,1))).
conflict(e,((27,1),(27,2)),((27,2),(27,1))).
conflict(e,((27,1),(28,1)),((28,1),(27,1))).
conflict(e,((28,1),(27,1)),((27,1),(28,1))).
conflict(e,((28,1),(29,1)),((29,1),(28,1))).
conflict(e,((29,1),(28,1)),((28,1),(29,1))).
conflict(e,((29,1),(29,2)),((29,2),(29,1))).
conflict(e,((29,1),(30,1)),((30,1),(29,1))).
conflict(e,((30,1),(29,1)),((29,1),(30,1))).
conflict(e,((30,1),(30,2)),((30,2),(30,1))).
conflict(e,((30,1),(31,1)),((31,1),(30,1))).
conflict(e,((31,1),(30,1)),((30,1),(31,1))).
conflict(e,((31,1),(31,2)),((31,2),(31,1))).
conflict(e,((31,1),(32,1)),((32,1),(31,1))).
conflict(e,((32,1),(31,1)),((31,1),(32,1))).
conflict(e,((32,1),(33,1)),((33,1),(32,1))).
conflict(e,((33,1),(32,1)),((32,1),(33,1))).
conflict(e,((33,1),(34,1)),((34,1),(33,1))).
conflict(e,((34,1),(33,1)),((33,1),(34,1))).
conflict(e,((34,1),(35,1)),((35,1),(34,1))).
conflict(e,((35,1),(34,1)),((34,1),(35,1))).
conflict(e,((35,1),(36,1)),((36,1),(35,1))).
conflict(e,((36,1),(35,1)),((35,1),(36,1))).
conflict(e,((36,1),(37,1)),((37,1),(36,1))).
conflict(e,((37,1),(36,1)),((36,1),(37,1))).
conflict(e,((37,1),(37,2)),((37,2),(37,1))).
conflict(e,((37,1),(38,1)),((38,1),(37,1))).
conflict(e,((38,1),(37,1)),((37,1),(38,1))).
conflict(e,((38,1),(39,1)),((39,1),(38,1))).
conflict(e,((39,1),(38,1)),((38,1),(39,1))).
conflict(e,((39,1),(39,2)),((39,2),(39,1))).
conflict(e,((18,2),(18,1)),((18,1),(18,2))).
conflict(e,((19,2),(19,1)),((19,1),(19,2))).
conflict(e,((19,2),(20,2)),((20,2),(19,2))).
conflict(e,((20,2),(19,2)),((19,2),(20,2))).
conflict(e,((20,2),(21,2)),((21,2),(20,2))).
conflict(e,((21,2),(20,2)),((20,2),(21,2))).
conflict(e,((21,2),(22,2)),((22,2),(21,2))).
conflict(e,((22,2),(21,2)),((21,2),(22,2))).
conflict(e,((22,2),(23,2)),((23,2),(22,2))).
conflict(e,((23,2),(23,1)),((23,1),(23,2))).
conflict(e,((23,2),(22,2)),((22,2),(23,2))).
conflict(e,((27,2),(27,1)),((27,1),(27,2))).
conflict(e,((29,2),(29,1)),((29,1),(29,2))).
conflict(e,((29,2),(29,3)),((29,3),(29,2))).
conflict(e,((30,2),(30,1)),((30,1),(30,2))).
conflict(e,((31,2),(31,1)),((31,1),(31,2))).
conflict(e,((37,2),(37,1)),((37,1),(37,2))).
conflict(e,((39,2),(39,1)),((39,1),(39,2))).
conflict(e,((39,2),(39,3)),((39,3),(39,2))).
conflict(e,((29,3),(29,2)),((29,2),(29,3))).
conflict(e,((29,3),(29,4)),((29,4),(29,3))).
conflict(e,((39,3),(39,2)),((39,2),(39,3))).
conflict(e,((39,3),(39,4)),((39,4),(39,3))).
conflict(e,((28,4),(29,4)),((29,4),(28,4))).
conflict(e,((29,4),(29,3)),((29,3),(29,4))).
conflict(e,((29,4),(28,4)),((28,4),(29,4))).
conflict(e,((39,4),(39,3)),((39,3),(39,4))).
conflict(e,((39,4),(40,4)),((40,4),(39,4))).
conflict(e,((40,4),(39,4)),((39,4),(40,4))).
conflict(e,((18,1),(17,1)),((18,1),(17,1))).
conflict(e,((17,1),(18,1)),((17,1),(18,1))).
conflict(e,((18,2),(18,1)),((18,2),(18,1))).
conflict(e,((19,1),(18,1)),((19,1),(18,1))).
conflict(e,((18,1),(19,1)),((18,1),(19,1))).
conflict(e,((19,2),(19,1)),((19,2),(19,1))).
conflict(e,((20,1),(19,1)),((20,1),(19,1))).
conflict(e,((19,1),(20,1)),((19,1),(20,1))).
conflict(e,((23,1),(22,1)),((23,1),(22,1))).
conflict(e,((22,1),(23,1)),((22,1),(23,1))).
conflict(e,((23,2),(23,1)),((23,2),(23,1))).
conflict(e,((24,1),(23,1)),((24,1),(23,1))).
conflict(e,((23,1),(24,1)),((23,1),(24,1))).
conflict(e,((25,1),(24,1)),((25,1),(24,1))).
conflict(e,((24,1),(25,1)),((24,1),(25,1))).
conflict(e,((26,1),(25,1)),((26,1),(25,1))).
conflict(e,((25,1),(26,1)),((25,1),(26,1))).
conflict(e,((27,1),(26,1)),((27,1),(26,1))).
conflict(e,((26,1),(27,1)),((26,1),(27,1))).
conflict(e,((27,2),(27,1)),((27,2),(27,1))).
conflict(e,((28,1),(27,1)),((28,1),(27,1))).
conflict(e,((27,1),(28,1)),((27,1),(28,1))).
conflict(e,((29,1),(28,1)),((29,1),(28,1))).
conflict(e,((28,1),(29,1)),((28,1),(29,1))).
conflict(e,((29,2),(29,1)),((29,2),(29,1))).
conflict(e,((30,1),(29,1)),((30,1),(29,1))).
conflict(e,((29,1),(30,1)),((29,1),(30,1))).
conflict(e,((30,2),(30,1)),((30,2),(30,1))).
conflict(e,((31,1),(30,1)),((31,1),(30,1))).
conflict(e,((30,1),(31,1)),((30,1),(31,1))).
conflict(e,((31,2),(31,1)),((31,2),(31,1))).
conflict(e,((32,1),(31,1)),((32,1),(31,1))).
conflict(e,((31,1),(32,1)),((31,1),(32,1))).
conflict(e,((33,1),(32,1)),((33,1),(32,1))).
conflict(e,((32,1),(33,1)),((32,1),(33,1))).
conflict(e,((34,1),(33,1)),((34,1),(33,1))).
conflict(e,((33,1),(34,1)),((33,1),(34,1))).
conflict(e,((35,1),(34,1)),((35,1),(34,1))).
conflict(e,((34,1),(35,1)),((34,1),(35,1))).
conflict(e,((36,1),(35,1)),((36,1),(35,1))).
conflict(e,((35,1),(36,1)),((35,1),(36,1))).
conflict(e,((37,1),(36,1)),((37,1),(36,1))).
conflict(e,((36,1),(37,1)),((36,1),(37,1))).
conflict(e,((37,2),(37,1)),((37,2),(37,1))).
conflict(e,((38,1),(37,1)),((38,1),(37,1))).
conflict(e,((37,1),(38,1)),((37,1),(38,1))).
conflict(e,((39,1),(38,1)),((39,1),(38,1))).
conflict(e,((38,1),(39,1)),((38,1),(39,1))).
conflict(e,((39,2),(39,1)),((39,2),(39,1))).
conflict(e,((18,1),(18,2)),((18,1),(18,2))).
conflict(e,((19,1),(19,2)),((19,1),(19,2))).
conflict(e,((20,2),(19,2)),((20,2),(19,2))).
conflict(e,((19,2),(20,2)),((19,2),(20,2))).
conflict(e,((21,2),(20,2)),((21,2),(20,2))).
conflict(e,((20,2),(21,2)),((20,2),(21,2))).
conflict(e,((22,2),(21,2)),((22,2),(21,2))).
conflict(e,((21,2),(22,2)),((21,2),(22,2))).
conflict(e,((23,2),(22,2)),((23,2),(22,2))).
conflict(e,((23,1),(23,2)),((23,1),(23,2))).
conflict(e,((22,2),(23,2)),((22,2),(23,2))).
conflict(e,((27,1),(27,2)),((27,1),(27,2))).
conflict(e,((29,1),(29,2)),((29,1),(29,2))).
conflict(e,((29,3),(29,2)),((29,3),(29,2))).
conflict(e,((30,1),(30,2)),((30,1),(30,2))).
conflict(e,((31,1),(31,2)),((31,1),(31,2))).
conflict(e,((37,1),(37,2)),((37,1),(37,2))).
conflict(e,((39,1),(39,2)),((39,1),(39,2))).
conflict(e,((39,3),(39,2)),((39,3),(39,2))).
conflict(e,((29,2),(29,3)),((29,2),(29,3))).
conflict(e,((29,4),(29,3)),((29,4),(29,3))).
conflict(e,((39,2),(39,3)),((39,2),(39,3))).
conflict(e,((39,4),(39,3)),((39,4),(39,3))).
conflict(e,((29,4),(28,4)),((29,4),(28,4))).
conflict(e,((29,3),(29,4)),((29,3),(29,4))).
conflict(e,((28,4),(29,4)),((28,4),(29,4))).
conflict(e,((39,3),(39,4)),((39,3),(39,4))).
conflict(e,((40,4),(39,4)),((40,4),(39,4))).
conflict(e,((39,4),(40,4)),((39,4),(40,4))).
task((1,pickup),(31,1)).
task((2,pickup),(31,1)).
task((3,pickup),(17,1)).
task((4,pickup),(39,1)).
task((5,pickup),(31,1)).
task((6,pickup),(19,1)).
task((7,pickup),(18,1)).
task((8,pickup),(20,1)).
task((1,putdown),(17,1)).
task((2,putdown),(20,1)).
task((3,putdown),(39,4)).
task((4,putdown),(18,1)).
task((5,putdown),(19,1)).
task((6,putdown),(28,4)).
task((7,putdown),(39,4)).
task((8,putdown),(29,4)).
home(1,(30,1)).
home(2,(27,1)).
home(3,(23,1)).
home(4,(35,1)).
nearest((17,1),(18,1),15).
nearest((18,1),(19,1),15).
nearest((19,1),(20,1),15).
nearest((22,1),(23,1),15).
nearest((23,1),(24,1),15).
nearest((24,1),(25,1),15).
nearest((25,1),(26,1),15).
nearest((26,1),(27,1),15).
nearest((27,1),(28,1),15).
nearest((28,1),(29,1),15).
nearest((29,1),(30,1),15).
nearest((30,1),(31,1),15).
nearest((31,1),(32,1),15).
nearest((32,1),(33,1),15).
nearest((33,1),(34,1),15).
nearest((34,1),(35,1),15).
nearest((35,1),(36,1),15).
nearest((36,1),(37,1),15).
nearest((37,1),(38,1),15).
nearest((38,1),(39,1),15).
nearest((18,1),(18,2),15).
nearest((19,1),(19,2),15).
nearest((23,1),(23,2),15).
nearest((27,1),(27,2),15).
nearest((29,1),(29,2),15).
nearest((30,1),(30,2),15).
nearest((31,1),(31,2),15).
nearest((37,1),(37,2),15).
nearest((39,1),(39,2),15).
nearest((19,2),(20,2),15).
nearest((20,2),(21,2),15).
nearest((21,2),(22,2),15).
nearest((22,2),(23,2),15).
nearest((29,2),(29,3),15).
nearest((39,2),(39,3),15).
nearest((29,3),(29,4),15).
nearest((39,3),(39,4),15).
nearest((28,4),(29,4),15).
nearest((39,4),(40,4),15).
nearest((40,4),(39,4),15).
nearest((29,4),(28,4),15).
nearest((39,4),(39,3),15).
nearest((29,4),(29,3),15).
nearest((39,3),(39,2),15).
nearest((29,3),(29,2),15).
nearest((23,2),(22,2),15).
nearest((22,2),(21,2),15).
nearest((21,2),(20,2),15).
nearest((20,2),(19,2),15).
nearest((39,2),(39,1),15).
nearest((37,2),(37,1),15).
nearest((31,2),(31,1),15).
nearest((30,2),(30,1),15).
nearest((29,2),(29,1),15).
nearest((27,2),(27,1),15).
nearest((23,2),(23,1),15).
nearest((19,2),(19,1),15).
nearest((18,2),(18,1),15).
nearest((39,1),(38,1),15).
nearest((38,1),(37,1),15).
nearest((37,1),(36,1),15).
nearest((36,1),(35,1),15).
nearest((35,1),(34,1),15).
nearest((34,1),(33,1),15).
nearest((33,1),(32,1),15).
nearest((32,1),(31,1),15).
nearest((31,1),(30,1),15).
nearest((30,1),(29,1),15).
nearest((29,1),(28,1),15).
nearest((28,1),(27,1),15).
nearest((27,1),(26,1),15).
nearest((26,1),(25,1),15).
nearest((25,1),(24,1),15).
nearest((24,1),(23,1),15).
nearest((23,1),(22,1),15).
nearest((20,1),(19,1),15).
nearest((19,1),(18,1),15).
nearest((18,1),(17,1),15).
entrypoint((17,1),(17,1),0).
entrypoint((28,4),(28,4),0).
entrypoint((20,1),(20,1),0).
entrypoint((31,1),(31,1),0).
entrypoint((39,1),(39,1),0).
entrypoint((19,1),(19,1),0).
entrypoint((18,1),(18,1),0).
entrypoint((39,4),(39,4),0).
entrypoint((29,4),(29,4),0).
entrypoint((30,1),(30,1),0).
entrypoint((27,1),(27,1),0).
entrypoint((23,1),(23,1),0).
entrypoint((35,1),(35,1),0).
on_deadend((17,1),(17,1)).
on_deadend((28,4),(28,4)).
on_deadend((20,1),(20,1)).
on_deadend((29,4),(28,4)).
on_deadend((29,3),(28,4)).
on_deadend((29,2),(28,4)).
endpoint_access((17,1),(17,1)).
endpoint_access((28,4),(28,4)).
endpoint_access((20,1),(20,1)).
endpoint_access((31,1),(31,1)).
endpoint_access((39,1),(39,1)).
endpoint_access((19,1),(19,1)).
endpoint_access((18,1),(18,1)).
endpoint_access((39,4),(39,4)).
endpoint_access((29,4),(29,4)).
endpoint_access((30,1),(30,1)).
endpoint_access((27,1),(27,1)).
endpoint_access((23,1),(23,1)).
endpoint_access((35,1),(35,1)).
endpoint_access((29,4),(28,4)).
endpoint_access((29,3),(28,4)).
endpoint_access((29,2),(28,4)).
shortest_path((31,1),(17,1),240,(30,1)).
shortest_path((31,1),(39,1),120,(32,1)).
shortest_path((31,1),(19,1),210,(30,1)).
shortest_path((31,1),(18,1),225,(30,1)).
shortest_path((31,1),(20,1),225,(30,1)).
shortest_path((31,1),(39,4),165,(32,1)).
shortest_path((31,1),(28,4),90,(30,1)).
shortest_path((31,1),(29,4),75,(30,1)).
shortest_path((31,1),(30,1),15,(30,1)).
shortest_path((31,1),(27,1),60,(30,1)).
shortest_path((31,1),(23,1),120,(30,1)).
shortest_path((31,1),(35,1),60,(32,1)).
shortest_path((17,1),(31,1),240,(18,1)).
shortest_path((17,1),(39,1),360,(18,1)).
shortest_path((17,1),(19,1),30,(18,1)).
shortest_path((17,1),(18,1),15,(18,1)).
shortest_path((17,1),(20,1),45,(18,1)).
shortest_path((17,1),(39,4),405,(18,1)).
shortest_path((17,1),(28,4),270,(18,1)).
shortest_path((17,1),(29,4),255,(18,1)).
shortest_path((17,1),(30,1),225,(18,1)).
shortest_path((17,1),(27,1),180,(18,1)).
shortest_path((17,1),(23,1),120,(18,1)).
shortest_path((17,1),(35,1),300,(18,1)).
shortest_path((39,1),(31,1),120,(38,1)).
shortest_path((39,1),(17,1),360,(38,1)).
shortest_path((39,1),(19,1),330,(38,1)).
shortest_path((39,1),(18,1),345,(38,1)).
shortest_path((39,1),(20,1),345,(38,1)).
shortest_path((39,1),(39,4),45,(39,2)).
shortest_path((39,1),(28,4),210,(38,1)).
shortest_path((39,1),(29,4),195,(38,1)).
shortest_path((39,1),(30,1),135,(38,1)).
shortest_path((39,1),(27,1),180,(38,1)).
shortest_path((39,1),(23,1),240,(38,1)).
shortest_path((39,1),(35,1),60,(38,1)).
shortest_path((19,1),(31,1),210,(19,2)).
shortest_path((19,1),(17,1),30,(18,1)).
shortest_path((19,1),(39,1),330,(19,2)).
shortest_path((19,1),(18,1),15,(18,1)).
shortest_path((19,1),(20,1),15,(20,1)).
shortest_path((19,1),(39,4),375,(19,2)).
shortest_path((19,1),(28,4),240,(19,2)).
shortest_path((19,1),(29,4),225,(19,2)).
shortest_path((19,1),(30,1),195,(19,2)).
shortest_path((19,1),(27,1),150,(19,2)).
shortest_path((19,1),(23,1),90,(19,2)).
shortest_path((19,1),(35,1),270,(19,2)).
shortest_path((18,1),(31,1),225,(19,1)).
shortest_path((18,1),(17,1),15,(17,1)).
shortest_path((18,1),(39,1),345,(19,1)).
shortest_path((18,1),(19,1),15,(19,1)).
shortest_path((18,1),(20,1),30,(19,1)).
shortest_path((18,1),(39,4),390,(19,1)).
shortest_path((18,1),(28,4),255,(19,1)).
shortest_path((18,1),(29,4),240,(19,1)).
shortest_path((18,1),(30,1),210,(19,1)).
shortest_path((18,1),(27,1),165,(19,1)).
shortest_path((18,1),(23,1),105,(19,1)).
shortest_path((18,1),(35,1),285,(19,1)).
shortest_path((20,1),(31,1),225,(19,1)).
shortest_path((20,1),(17,1),45,(19,1)).
shortest_path((20,1),(39,1),345,(19,1)).
shortest_path((20,1),(19,1),15,(19,1)).
shortest_path((20,1),(18,1),30,(19,1)).
shortest_path((20,1),(39,4),390,(19,1)).
shortest_path((20,1),(28,4),255,(19,1)).
shortest_path((20,1),(29,4),240,(19,1)).
shortest_path((20,1),(30,1),210,(19,1)).
shortest_path((20,1),(27,1),165,(19,1)).
shortest_path((20,1),(23,1),105,(19,1)).
shortest_path((20,1),(35,1),285,(19,1)).
shortest_path((39,4),(31,1),165,(39,3)).
shortest_path((39,4),(17,1),405,(39,3)).
shortest_path((39,4),(39,1),45,(39,3)).
shortest_path((39,4),(19,1),375,(39,3)).
shortest_path((39,4),(18,1),390,(39,3)).
shortest_path((39,4),(20,1),390,(39,3)).
shortest_path((39,4),(28,4),255,(39,3)).
shortest_path((39,4),(29,4),240,(39,3)).
shortest_path((39,4),(30,1),180,(39,3)).
shortest_path((39,4),(27,1),225,(39,3)).
shortest_path((39,4),(23,1),285,(39,3)).
shortest_path((39,4),(35,1),105,(39,3)).
shortest_path((28,4),(31,1),90,(29,4)).
shortest_path((28,4),(17,1),270,(29,4)).
shortest_path((28,4),(39,1),210,(29,4)).
shortest_path((28,4),(19,1),240,(29,4)).
shortest_path((28,4),(18,1),255,(29,4)).
shortest_path((28,4),(20,1),255,(29,4)).
shortest_path((28,4),(39,4),255,(29,4)).
shortest_path((28,4),(29,4),15,(29,4)).
shortest_path((28,4),(30,1),75,(29,4)).
shortest_path((28,4),(27,1),90,(29,4)).
shortest_path((28,4),(23,1),150,(29,4)).
shortest_path((28,4),(35,1),150,(29,4)).
shortest_path((29,4),(31,1),75,(29,3)).
shortest_path((29,4),(17,1),255,(29,3)).
shortest_path((29,4),(39,1),195,(29,3)).
shortest_path((29,4),(19,1),225,(29,3)).
shortest_path((29,4),(18,1),240,(29,3)).
shortest_path((29,4),(20,1),240,(29,3)).
shortest_path((29,4),(39,4),240,(29,3)).
shortest_path((29,4),(28,4),15,(28,4)).
shortest_path((29,4),(30,1),60,(29,3)).
shortest_path((29,4),(27,1),75,(29,3)).
shortest_path((29,4),(23,1),135,(29,3)).
shortest_path((29,4),(35,1),135,(29,3)).
shortest_path((30,1),(31,1),15,(31,1)).
shortest_path((30,1),(17,1),225,(29,1)).
shortest_path((30,1),(39,1),135,(31,1)).
shortest_path((30,1),(19,1),195,(29,1)).
shortest_path((30,1),(18,1),210,(29,1)).
shortest_path((30,1),(20,1),210,(29,1)).
shortest_path((30,1),(39,4),180,(31,1)).
shortest_path((30,1),(28,4),75,(29,1)).
shortest_path((30,1),(29,4),60,(29,1)).
shortest_path((30,1),(27,1),45,(29,1)).
shortest_path((30,1),(23,1),105,(29,1)).
shortest_path((30,1),(35,1),75,(31,1)).
shortest_path((27,1),(31,1),60,(28,1)).
shortest_path((27,1),(17,1),180,(26,1)).
shortest_path((27,1),(39,1),180,(28,1)).
shortest_path((27,1),(19,1),150,(26,1)).
shortest_path((27,1),(18,1),165,(26,1)).
shortest_path((27,1),(20,1),165,(26,1)).
shortest_path((27,1),(39,4),225,(28,1)).
shortest_path((27,1),(28,4),90,(28,1)).
shortest_path((27,1),(29,4),75,(28,1)).
shortest_path((27,1),(30,1),45,(28,1)).
shortest_path((27,1),(23,1),60,(26,1)).
shortest_path((27,1),(35,1),120,(28,1)).
shortest_path((23,1),(31,1),120,(24,1)).
shortest_path((23,1),(17,1),120,(23,2)).
shortest_path((23,1),(39,1),240,(24,1)).
shortest_path((23,1),(19,1),90,(23,2)).
shortest_path((23,1),(18,1),105,(23,2)).
shortest_path((23,1),(20,1),105,(23,2)).
shortest_path((23,1),(39,4),285,(24,1)).
shortest_path((23,1),(28,4),150,(24,1)).
shortest_path((23,1),(29,4),135,(24,1)).
shortest_path((23,1),(30,1),105,(24,1)).
shortest_path((23,1),(27,1),60,(24,1)).
shortest_path((23,1),(35,1),180,(24,1)).
shortest_path((35,1),(31,1),60,(34,1)).
shortest_path((35,1),(17,1),300,(34,1)).
shortest_path((35,1),(39,1),60,(36,1)).
shortest_path((35,1),(19,1),270,(34,1)).
shortest_path((35,1),(18,1),285,(34,1)).
shortest_path((35,1),(20,1),285,(34,1)).
shortest_path((35,1),(39,4),105,(36,1)).
shortest_path((35,1),(28,4),150,(34,1)).
shortest_path((35,1),(29,4),135,(34,1)).
shortest_path((35,1),(30,1),75,(34,1)).
shortest_path((35,1),(27,1),120,(34,1)).
shortest_path((35,1),(23,1),180,(34,1)).
shortest_path((22,1),(31,1),135,(23,1)).
shortest_path((22,1),(17,1),135,(23,1)).
shortest_path((22,1),(39,1),255,(23,1)).
shortest_path((22,1),(19,1),105,(23,1)).
shortest_path((22,1),(18,1),120,(23,1)).
shortest_path((22,1),(20,1),120,(23,1)).
shortest_path((22,1),(39,4),300,(23,1)).
shortest_path((22,1),(28,4),165,(23,1)).
shortest_path((22,1),(29,4),150,(23,1)).
shortest_path((22,1),(30,1),120,(23,1)).
shortest_path((22,1),(27,1),75,(23,1)).
shortest_path((22,1),(23,1),15,(23,1)).
shortest_path((22,1),(35,1),195,(23,1)).
shortest_path((24,1),(31,1),105,(25,1)).
shortest_path((24,1),(17,1),135,(23,1)).
shortest_path((24,1),(39,1),225,(25,1)).
shortest_path((24,1),(19,1),105,(23,1)).
shortest_path((24,1),(18,1),120,(23,1)).
shortest_path((24,1),(20,1),120,(23,1)).
shortest_path((24,1),(39,4),270,(25,1)).
shortest_path((24,1),(28,4),135,(25,1)).
shortest_path((24,1),(29,4),120,(25,1)).
shortest_path((24,1),(30,1),90,(25,1)).
shortest_path((24,1),(27,1),45,(25,1)).
shortest_path((24,1),(23,1),15,(23,1)).
shortest_path((24,1),(35,1),165,(25,1)).
shortest_path((25,1),(31,1),90,(26,1)).
shortest_path((25,1),(17,1),150,(24,1)).
shortest_path((25,1),(39,1),210,(26,1)).
shortest_path((25,1),(19,1),120,(24,1)).
shortest_path((25,1),(18,1),135,(24,1)).
shortest_path((25,1),(20,1),135,(24,1)).
shortest_path((25,1),(39,4),255,(26,1)).
shortest_path((25,1),(28,4),120,(26,1)).
shortest_path((25,1),(29,4),105,(26,1)).
shortest_path((25,1),(30,1),75,(26,1)).
shortest_path((25,1),(27,1),30,(26,1)).
shortest_path((25,1),(23,1),30,(24,1)).
shortest_path((25,1),(35,1),150,(26,1)).
shortest_path((26,1),(31,1),75,(27,1)).
shortest_path((26,1),(17,1),165,(25,1)).
shortest_path((26,1),(39,1),195,(27,1)).
shortest_path((26,1),(19,1),135,(25,1)).
shortest_path((26,1),(18,1),150,(25,1)).
shortest_path((26,1),(20,1),150,(25,1)).
shortest_path((26,1),(39,4),240,(27,1)).
shortest_path((26,1),(28,4),105,(27,1)).
shortest_path((26,1),(29,4),90,(27,1)).
shortest_path((26,1),(30,1),60,(27,1)).
shortest_path((26,1),(27,1),15,(27,1)).
shortest_path((26,1),(23,1),45,(25,1)).
shortest_path((26,1),(35,1),135,(27,1)).
shortest_path((28,1),(31,1),45,(29,1)).
shortest_path((28,1),(17,1),195,(27,1)).
shortest_path((28,1),(39,1),165,(29,1)).
shortest_path((28,1),(19,1),165,(27,1)).
shortest_path((28,1),(18,1),180,(27,1)).
shortest_path((28,1),(20,1),180,(27,1)).
shortest_path((28,1),(39,4),210,(29,1)).
shortest_path((28,1),(28,4),75,(29,1)).
shortest_path((28,1),(29,4),60,(29,1)).
shortest_path((28,1),(30,1),30,(29,1)).
shortest_path((28,1),(27,1),15,(27,1)).
shortest_path((28,1),(23,1),75,(27,1)).
shortest_path((28,1),(35,1),105,(29,1)).
shortest_path((29,1),(31,1),30,(30,1)).
shortest_path((29,1),(17,1),210,(28,1)).
shortest_path((29,1),(39,1),150,(30,1)).
shortest_path((29,1),(19,1),180,(28,1)).
shortest_path((29,1),(18,1),195,(28,1)).
shortest_path((29,1),(20,1),195,(28,1)).
shortest_path((29,1),(39,4),195,(30,1)).
shortest_path((29,1),(28,4),60,(29,2)).
shortest_path((29,1),(29,4),45,(29,2)).
shortest_path((29,1),(30,1),15,(30,1)).
shortest_path((29,1),(27,1),30,(28,1)).
shortest_path((29,1),(23,1),90,(28,1)).
shortest_path((29,1),(35,1),90,(30,1)).
shortest_path((32,1),(31,1),15,(31,1)).
shortest_path((32,1),(17,1),255,(31,1)).
shortest_path((32,1),(39,1),105,(33,1)).
shortest_path((32,1),(19,1),225,(31,1)).
shortest_path((32,1),(18,1),240,(31,1)).
shortest_path((32,1),(20,1),240,(31,1)).
shortest_path((32,1),(39,4),150,(33,1)).
shortest_path((32,1),(28,4),105,(31,1)).
shortest_path((32,1),(29,4),90,(31,1)).
shortest_path((32,1),(30,1),30,(31,1)).
shortest_path((32,1),(27,1),75,(31,1)).
shortest_path((32,1),(23,1),135,(31,1)).
shortest_path((32,1),(35,1),45,(33,1)).
shortest_path((33,1),(31,1),30,(32,1)).
shortest_path((33,1),(17,1),270,(32,1)).
shortest_path((33,1),(39,1),90,(34,1)).
shortest_path((33,1),(19,1),240,(32,1)).
shortest_path((33,1),(18,1),255,(32,1)).
shortest_path((33,1),(20,1),255,(32,1)).
shortest_path((33,1),(39,4),135,(34,1)).
shortest_path((33,1),(28,4),120,(32,1)).
shortest_path((33,1),(29,4),105,(32,1)).
shortest_path((33,1),(30,1),45,(32,1)).
shortest_path((33,1),(27,1),90,(32,1)).
shortest_path((33,1),(23,1),150,(32,1)).
shortest_path((33,1),(35,1),30,(34,1)).
shortest_path((34,1),(31,1),45,(33,1)).
shortest_path((34,1),(17,1),285,(33,1)).
shortest_path((34,1),(39,1),75,(35,1)).
shortest_path((34,1),(19,1),255,(33,1)).
shortest_path((34,1),(18,1),270,(33,1)).
shortest_path((34,1),(20,1),270,(33,1)).
shortest_path((34,1),(39,4),120,(35,1)).
shortest_path((34,1),(28,4),135,(33,1)).
shortest_path((34,1),(29,4),120,(33,1)).
shortest_path((34,1),(30,1),60,(33,1)).
shortest_path((34,1),(27,1),105,(33,1)).
shortest_path((34,1),(23,1),165,(33,1)).
shortest_path((34,1),(35,1),15,(35,1)).
shortest_path((36,1),(31,1),75,(35,1)).
shortest_path((36,1),(17,1),315,(35,1)).
shortest_path((36,1),(39,1),45,(37,1)).
shortest_path((36,1),(19,1),285,(35,1)).
shortest_path((36,1),(18,1),300,(35,1)).
shortest_path((36,1),(20,1),300,(35,1)).
shortest_path((36,1),(39,4),90,(37,1)).
shortest_path((36,1),(28,4),165,(35,1)).
shortest_path((36,1),(29,4),150,(35,1)).
shortest_path((36,1),(30,1),90,(35,1)).
shortest_path((36,1),(27,1),135,(35,1)).
shortest_path((36,1),(23,1),195,(35,1)).
shortest_path((36,1),(35,1),15,(35,1)).
shortest_path((37,1),(31,1),90,(36,1)).
shortest_path((37,1),(17,1),330,(36,1)).
shortest_path((37,1),(39,1),30,(38,1)).
shortest_path((37,1),(19,1),300,(36,1)).
shortest_path((37,1),(18,1),315,(36,1)).
shortest_path((37,1),(20,1),315,(36,1)).
shortest_path((37,1),(39,4),75,(38,1)).
shortest_path((37,1),(28,4),180,(36,1)).
shortest_path((37,1),(29,4),165,(36,1)).
shortest_path((37,1),(30,1),105,(36,1)).
shortest_path((37,1),(27,1),150,(36,1)).
shortest_path((37,1),(23,1),210,(36,1)).
shortest_path((37,1),(35,1),30,(36,1)).
shortest_path((38,1),(31,1),105,(37,1)).
shortest_path((38,1),(17,1),345,(37,1)).
shortest_path((38,1),(39,1),15,(39,1)).
shortest_path((38,1),(19,1),315,(37,1)).
shortest_path((38,1),(18,1),330,(37,1)).
shortest_path((38,1),(20,1),330,(37,1)).
shortest_path((38,1),(39,4),60,(39,1)).
shortest_path((38,1),(28,4),195,(37,1)).
shortest_path((38,1),(29,4),180,(37,1)).
shortest_path((38,1),(30,1),120,(37,1)).
shortest_path((38,1),(27,1),165,(37,1)).
shortest_path((38,1),(23,1),225,(37,1)).
shortest_path((38,1),(35,1),45,(37,1)).
shortest_path((18,2),(31,1),240,(18,1)).
shortest_path((18,2),(17,1),30,(18,1)).
shortest_path((18,2),(39,1),360,(18,1)).
shortest_path((18,2),(19,1),30,(18,1)).
shortest_path((18,2),(18,1),15,(18,1)).
shortest_path((18,2),(20,1),45,(18,1)).
shortest_path((18,2),(39,4),405,(18,1)).
shortest_path((18,2),(28,4),270,(18,1)).
shortest_path((18,2),(29,4),255,(18,1)).
shortest_path((18,2),(30,1),225,(18,1)).
shortest_path((18,2),(27,1),180,(18,1)).
shortest_path((18,2),(23,1),120,(18,1)).
shortest_path((18,2),(35,1),300,(18,1)).
shortest_path((19,2),(31,1),195,(20,2)).
shortest_path((19,2),(17,1),45,(19,1)).
shortest_path((19,2),(39,1),315,(20,2)).
shortest_path((19,2),(19,1),15,(19,1)).
shortest_path((19,2),(18,1),30,(19,1)).
shortest_path((19,2),(20,1),30,(19,1)).
shortest_path((19,2),(39,4),360,(20,2)).
shortest_path((19,2),(28,4),225,(20,2)).
shortest_path((19,2),(29,4),210,(20,2)).
shortest_path((19,2),(30,1),180,(20,2)).
shortest_path((19,2),(27,1),135,(20,2)).
shortest_path((19,2),(23,1),75,(20,2)).
shortest_path((19,2),(35,1),255,(20,2)).
shortest_path((23,2),(31,1),135,(23,1)).
shortest_path((23,2),(17,1),105,(22,2)).
shortest_path((23,2),(39,1),255,(23,1)).
shortest_path((23,2),(19,1),75,(22,2)).
shortest_path((23,2),(18,1),90,(22,2)).
shortest_path((23,2),(20,1),90,(22,2)).
shortest_path((23,2),(39,4),300,(23,1)).
shortest_path((23,2),(28,4),165,(23,1)).
shortest_path((23,2),(29,4),150,(23,1)).
shortest_path((23,2),(30,1),120,(23,1)).
shortest_path((23,2),(27,1),75,(23,1)).
shortest_path((23,2),(23,1),15,(23,1)).
shortest_path((23,2),(35,1),195,(23,1)).
shortest_path((27,2),(31,1),75,(27,1)).
shortest_path((27,2),(17,1),195,(27,1)).
shortest_path((27,2),(39,1),195,(27,1)).
shortest_path((27,2),(19,1),165,(27,1)).
shortest_path((27,2),(18,1),180,(27,1)).
shortest_path((27,2),(20,1),180,(27,1)).
shortest_path((27,2),(39,4),240,(27,1)).
shortest_path((27,2),(28,4),105,(27,1)).
shortest_path((27,2),(29,4),90,(27,1)).
shortest_path((27,2),(30,1),60,(27,1)).
shortest_path((27,2),(27,1),15,(27,1)).
shortest_path((27,2),(23,1),75,(27,1)).
shortest_path((27,2),(35,1),135,(27,1)).
shortest_path((29,2),(31,1),45,(29,1)).
shortest_path((29,2),(17,1),225,(29,1)).
shortest_path((29,2),(39,1),165,(29,1)).
shortest_path((29,2),(19,1),195,(29,1)).
shortest_path((29,2),(18,1),210,(29,1)).
shortest_path((29,2),(20,1),210,(29,1)).
shortest_path((29,2),(39,4),210,(29,1)).
shortest_path((29,2),(28,4),45,(29,3)).
shortest_path((29,2),(29,4),30,(29,3)).
shortest_path((29,2),(30,1),30,(29,1)).
shortest_path((29,2),(27,1),45,(29,1)).
shortest_path((29,2),(23,1),105,(29,1)).
shortest_path((29,2),(35,1),105,(29,1)).
shortest_path((30,2),(31,1),30,(30,1)).
shortest_path((30,2),(17,1),240,(30,1)).
shortest_path((30,2),(39,1),150,(30,1)).
shortest_path((30,2),(19,1),210,(30,1)).
shortest_path((30,2),(18,1),225,(30,1)).
shortest_path((30,2),(20,1),225,(30,1)).
shortest_path((30,2),(39,4),195,(30,1)).
shortest_path((30,2),(28,4),90,(30,1)).
shortest_path((30,2),(29,4),75,(30,1)).
shortest_path((30,2),(30,1),15,(30,1)).
shortest_path((30,2),(27,1),60,(30,1)).
shortest_path((30,2),(23,1),120,(30,1)).
shortest_path((30,2),(35,1),90,(30,1)).
shortest_path((31,2),(31,1),15,(31,1)).
shortest_path((31,2),(17,1),255,(31,1)).
shortest_path((31,2),(39,1),135,(31,1)).
shortest_path((31,2),(19,1),225,(31,1)).
shortest_path((31,2),(18,1),240,(31,1)).
shortest_path((31,2),(20,1),240,(31,1)).
shortest_path((31,2),(39,4),180,(31,1)).
shortest_path((31,2),(28,4),105,(31,1)).
shortest_path((31,2),(29,4),90,(31,1)).
shortest_path((31,2),(30,1),30,(31,1)).
shortest_path((31,2),(27,1),75,(31,1)).
shortest_path((31,2),(23,1),135,(31,1)).
shortest_path((31,2),(35,1),75,(31,1)).
shortest_path((37,2),(31,1),105,(37,1)).
shortest_path((37,2),(17,1),345,(37,1)).
shortest_path((37,2),(39,1),45,(37,1)).
shortest_path((37,2),(19,1),315,(37,1)).
shortest_path((37,2),(18,1),330,(37,1)).
shortest_path((37,2),(20,1),330,(37,1)).
shortest_path((37,2),(39,4),90,(37,1)).
shortest_path((37,2),(28,4),195,(37,1)).
shortest_path((37,2),(29,4),180,(37,1)).
shortest_path((37,2),(30,1),120,(37,1)).
shortest_path((37,2),(27,1),165,(37,1)).
shortest_path((37,2),(23,1),225,(37,1)).
shortest_path((37,2),(35,1),45,(37,1)).
shortest_path((39,2),(31,1),135,(39,1)).
shortest_path((39,2),(17,1),375,(39,1)).
shortest_path((39,2),(39,1),15,(39,1)).
shortest_path((39,2),(19,1),345,(39,1)).
shortest_path((39,2),(18,1),360,(39,1)).
shortest_path((39,2),(20,1),360,(39,1)).
shortest_path((39,2),(39,4),30,(39,3)).
shortest_path((39,2),(28,4),225,(39,1)).
shortest_path((39,2),(29,4),210,(39,1)).
shortest_path((39,2),(30,1),150,(39,1)).
shortest_path((39,2),(27,1),195,(39,1)).
shortest_path((39,2),(23,1),255,(39,1)).
shortest_path((39,2),(35,1),75,(39,1)).
shortest_path((20,2),(31,1),180,(21,2)).
shortest_path((20,2),(17,1),60,(19,2)).
shortest_path((20,2),(39,1),300,(21,2)).
shortest_path((20,2),(19,1),30,(19,2)).
shortest_path((20,2),(18,1),45,(19,2)).
shortest_path((20,2),(20,1),45,(19,2)).
shortest_path((20,2),(39,4),345,(21,2)).
shortest_path((20,2),(28,4),210,(21,2)).
shortest_path((20,2),(29,4),195,(21,2)).
shortest_path((20,2),(30,1),165,(21,2)).
shortest_path((20,2),(27,1),120,(21,2)).
shortest_path((20,2),(23,1),60,(21,2)).
shortest_path((20,2),(35,1),240,(21,2)).
shortest_path((21,2),(31,1),165,(22,2)).
shortest_path((21,2),(17,1),75,(20,2)).
shortest_path((21,2),(39,1),285,(22,2)).
shortest_path((21,2),(19,1),45,(20,2)).
shortest_path((21,2),(18,1),60,(20,2)).
shortest_path((21,2),(20,1),60,(20,2)).
shortest_path((21,2),(39,4),330,(22,2)).
shortest_path((21,2),(28,4),195,(22,2)).
shortest_path((21,2),(29,4),180,(22,2)).
shortest_path((21,2),(30,1),150,(22,2)).
shortest_path((21,2),(27,1),105,(22,2)).
shortest_path((21,2),(23,1),45,(22,2)).
shortest_path((21,2),(35,1),225,(22,2)).
shortest_path((22,2),(31,1),150,(23,2)).
shortest_path((22,2),(17,1),90,(21,2)).
shortest_path((22,2),(39,1),270,(23,2)).
shortest_path((22,2),(19,1),60,(21,2)).
shortest_path((22,2),(18,1),75,(21,2)).
shortest_path((22,2),(20,1),75,(21,2)).
shortest_path((22,2),(39,4),315,(23,2)).
shortest_path((22,2),(28,4),180,(23,2)).
shortest_path((22,2),(29,4),165,(23,2)).
shortest_path((22,2),(30,1),135,(23,2)).
shortest_path((22,2),(27,1),90,(23,2)).
shortest_path((22,2),(23,1),30,(23,2)).
shortest_path((22,2),(35,1),210,(23,2)).
shortest_path((29,3),(31,1),60,(29,2)).
shortest_path((29,3),(17,1),240,(29,2)).
shortest_path((29,3),(39,1),180,(29,2)).
shortest_path((29,3),(19,1),210,(29,2)).
shortest_path((29,3),(18,1),225,(29,2)).
shortest_path((29,3),(20,1),225,(29,2)).
shortest_path((29,3),(39,4),225,(29,2)).
shortest_path((29,3),(28,4),30,(29,4)).
shortest_path((29,3),(29,4),15,(29,4)).
shortest_path((29,3),(30,1),45,(29,2)).
shortest_path((29,3),(27,1),60,(29,2)).
shortest_path((29,3),(23,1),120,(29,2)).
shortest_path((29,3),(35,1),120,(29,2)).
shortest_path((39,3),(31,1),150,(39,2)).
shortest_path((39,3),(17,1),390,(39,2)).
shortest_path((39,3),(39,1),30,(39,2)).
shortest_path((39,3),(19,1),360,(39,2)).
shortest_path((39,3),(18,1),375,(39,2)).
shortest_path((39,3),(20,1),375,(39,2)).
shortest_path((39,3),(39,4),15,(39,4)).
shortest_path((39,3),(28,4),240,(39,2)).
shortest_path((39,3),(29,4),225,(39,2)).
shortest_path((39,3),(30,1),165,(39,2)).
shortest_path((39,3),(27,1),210,(39,2)).
shortest_path((39,3),(23,1),270,(39,2)).
shortest_path((39,3),(35,1),90,(39,2)).
shortest_path((40,4),(31,1),180,(39,4)).
shortest_path((40,4),(17,1),420,(39,4)).
shortest_path((40,4),(39,1),60,(39,4)).
shortest_path((40,4),(19,1),390,(39,4)).
shortest_path((40,4),(18,1),405,(39,4)).
shortest_path((40,4),(20,1),405,(39,4)).
shortest_path((40,4),(39,4),15,(39,4)).
shortest_path((40,4),(28,4),270,(39,4)).
shortest_path((40,4),(29,4),255,(39,4)).
shortest_path((40,4),(30,1),195,(39,4)).
shortest_path((40,4),(27,1),240,(39,4)).
shortest_path((40,4),(23,1),300,(39,4)).
shortest_path((40,4),(35,1),120,(39,4)).
robot(1).
robot(2).
robot(3).
robot(4).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(deliver,(7,pickup),(7,putdown)).
depends(deliver,(8,pickup),(8,putdown)).
depends(wait,(3,pickup),(1,putdown)).
depends(wait,(8,pickup),(2,putdown)).
depends(wait,(7,pickup),(4,putdown)).
depends(wait,(6,pickup),(5,putdown)).
start(1,(30,1)).
start(2,(27,1)).
start(3,(23,1)).
start(4,(35,1)).

