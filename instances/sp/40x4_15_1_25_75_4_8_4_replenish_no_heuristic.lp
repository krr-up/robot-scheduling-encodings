edge((1,1),(2,1),15).
edge((2,1),(3,1),15).
edge((9,1),(10,1),15).
edge((10,1),(11,1),15).
edge((11,1),(12,1),15).
edge((14,1),(15,1),15).
edge((15,1),(16,1),15).
edge((21,1),(22,1),15).
edge((22,1),(23,1),15).
edge((25,1),(26,1),15).
edge((26,1),(27,1),15).
edge((27,1),(28,1),15).
edge((29,1),(30,1),15).
edge((30,1),(31,1),15).
edge((31,1),(32,1),15).
edge((32,1),(33,1),15).
edge((33,1),(34,1),15).
edge((35,1),(36,1),15).
edge((36,1),(37,1),15).
edge((37,1),(38,1),15).
edge((38,1),(39,1),15).
edge((39,1),(40,1),15).
edge((1,1),(1,2),15).
edge((3,1),(3,2),15).
edge((9,1),(9,2),15).
edge((10,1),(10,2),15).
edge((13,1),(13,2),15).
edge((14,1),(14,2),15).
edge((19,1),(19,2),15).
edge((23,1),(23,2),15).
edge((24,1),(24,2),15).
edge((25,1),(25,2),15).
edge((28,1),(28,2),15).
edge((29,1),(29,2),15).
edge((32,1),(32,2),15).
edge((34,1),(34,2),15).
edge((35,1),(35,2),15).
edge((38,1),(38,2),15).
edge((40,1),(40,2),15).
edge((6,2),(7,2),15).
edge((7,2),(8,2),15).
edge((8,2),(9,2),15).
edge((10,2),(11,2),15).
edge((14,2),(15,2),15).
edge((15,2),(16,2),15).
edge((16,2),(17,2),15).
edge((17,2),(18,2),15).
edge((18,2),(19,2),15).
edge((22,2),(23,2),15).
edge((23,2),(24,2),15).
edge((24,2),(25,2),15).
edge((30,2),(31,2),15).
edge((34,2),(35,2),15).
edge((37,2),(38,2),15).
edge((39,2),(40,2),15).
edge((1,2),(1,3),15).
edge((3,2),(3,3),15).
edge((6,2),(6,3),15).
edge((9,2),(9,3),15).
edge((11,2),(11,3),15).
edge((13,2),(13,3),15).
edge((15,2),(15,3),15).
edge((22,2),(22,3),15).
edge((28,2),(28,3),15).
edge((30,2),(30,3),15).
edge((31,2),(31,3),15).
edge((34,2),(34,3),15).
edge((39,2),(39,3),15).
edge((11,3),(12,3),15).
edge((13,3),(14,3),15).
edge((14,3),(15,3),15).
edge((17,3),(18,3),15).
edge((18,3),(19,3),15).
edge((19,3),(20,3),15).
edge((20,3),(21,3),15).
edge((21,3),(22,3),15).
edge((22,3),(23,3),15).
edge((29,3),(30,3),15).
edge((31,3),(32,3),15).
edge((33,3),(34,3),15).
edge((38,3),(39,3),15).
edge((1,3),(1,4),15).
edge((3,3),(3,4),15).
edge((6,3),(6,4),15).
edge((9,3),(9,4),15).
edge((10,3),(10,4),15).
edge((12,3),(12,4),15).
edge((13,3),(13,4),15).
edge((15,3),(15,4),15).
edge((18,3),(18,4),15).
edge((21,3),(21,4),15).
edge((28,3),(28,4),15).
edge((29,3),(29,4),15).
edge((32,3),(32,4),15).
edge((33,3),(33,4),15).
edge((39,3),(39,4),15).
edge((3,4),(4,4),15).
edge((4,4),(5,4),15).
edge((5,4),(6,4),15).
edge((9,4),(10,4),15).
edge((12,4),(13,4),15).
edge((13,4),(14,4),15).
edge((15,4),(16,4),15).
edge((16,4),(17,4),15).
edge((17,4),(18,4),15).
edge((20,4),(21,4),15).
edge((28,4),(29,4),15).
edge((32,4),(33,4),15).
edge((36,4),(37,4),15).
edge((37,4),(38,4),15).
edge((38,4),(39,4),15).
edge((39,4),(38,4),15).
edge((38,4),(37,4),15).
edge((37,4),(36,4),15).
edge((33,4),(32,4),15).
edge((29,4),(28,4),15).
edge((21,4),(20,4),15).
edge((18,4),(17,4),15).
edge((17,4),(16,4),15).
edge((16,4),(15,4),15).
edge((14,4),(13,4),15).
edge((13,4),(12,4),15).
edge((10,4),(9,4),15).
edge((6,4),(5,4),15).
edge((5,4),(4,4),15).
edge((4,4),(3,4),15).
edge((39,4),(39,3),15).
edge((33,4),(33,3),15).
edge((32,4),(32,3),15).
edge((29,4),(29,3),15).
edge((28,4),(28,3),15).
edge((21,4),(21,3),15).
edge((18,4),(18,3),15).
edge((15,4),(15,3),15).
edge((13,4),(13,3),15).
edge((12,4),(12,3),15).
edge((10,4),(10,3),15).
edge((9,4),(9,3),15).
edge((6,4),(6,3),15).
edge((3,4),(3,3),15).
edge((1,4),(1,3),15).
edge((39,3),(38,3),15).
edge((34,3),(33,3),15).
edge((32,3),(31,3),15).
edge((30,3),(29,3),15).
edge((23,3),(22,3),15).
edge((22,3),(21,3),15).
edge((21,3),(20,3),15).
edge((20,3),(19,3),15).
edge((19,3),(18,3),15).
edge((18,3),(17,3),15).
edge((15,3),(14,3),15).
edge((14,3),(13,3),15).
edge((12,3),(11,3),15).
edge((39,3),(39,2),15).
edge((34,3),(34,2),15).
edge((31,3),(31,2),15).
edge((30,3),(30,2),15).
edge((28,3),(28,2),15).
edge((22,3),(22,2),15).
edge((15,3),(15,2),15).
edge((13,3),(13,2),15).
edge((11,3),(11,2),15).
edge((9,3),(9,2),15).
edge((6,3),(6,2),15).
edge((3,3),(3,2),15).
edge((1,3),(1,2),15).
edge((40,2),(39,2),15).
edge((38,2),(37,2),15).
edge((35,2),(34,2),15).
edge((31,2),(30,2),15).
edge((25,2),(24,2),15).
edge((24,2),(23,2),15).
edge((23,2),(22,2),15).
edge((19,2),(18,2),15).
edge((18,2),(17,2),15).
edge((17,2),(16,2),15).
edge((16,2),(15,2),15).
edge((15,2),(14,2),15).
edge((11,2),(10,2),15).
edge((9,2),(8,2),15).
edge((8,2),(7,2),15).
edge((7,2),(6,2),15).
edge((40,2),(40,1),15).
edge((38,2),(38,1),15).
edge((35,2),(35,1),15).
edge((34,2),(34,1),15).
edge((32,2),(32,1),15).
edge((29,2),(29,1),15).
edge((28,2),(28,1),15).
edge((25,2),(25,1),15).
edge((24,2),(24,1),15).
edge((23,2),(23,1),15).
edge((19,2),(19,1),15).
edge((14,2),(14,1),15).
edge((13,2),(13,1),15).
edge((10,2),(10,1),15).
edge((9,2),(9,1),15).
edge((3,2),(3,1),15).
edge((1,2),(1,1),15).
edge((40,1),(39,1),15).
edge((39,1),(38,1),15).
edge((38,1),(37,1),15).
edge((37,1),(36,1),15).
edge((36,1),(35,1),15).
edge((34,1),(33,1),15).
edge((33,1),(32,1),15).
edge((32,1),(31,1),15).
edge((31,1),(30,1),15).
edge((30,1),(29,1),15).
edge((28,1),(27,1),15).
edge((27,1),(26,1),15).
edge((26,1),(25,1),15).
edge((23,1),(22,1),15).
edge((22,1),(21,1),15).
edge((16,1),(15,1),15).
edge((15,1),(14,1),15).
edge((12,1),(11,1),15).
edge((11,1),(10,1),15).
edge((10,1),(9,1),15).
edge((3,1),(2,1),15).
edge((2,1),(1,1),15).
conflict(v,(1,1),(1,1)).
conflict(v,(2,1),(2,1)).
conflict(v,(3,1),(3,1)).
conflict(v,(9,1),(9,1)).
conflict(v,(10,1),(10,1)).
conflict(v,(11,1),(11,1)).
conflict(v,(12,1),(12,1)).
conflict(v,(13,1),(13,1)).
conflict(v,(14,1),(14,1)).
conflict(v,(15,1),(15,1)).
conflict(v,(16,1),(16,1)).
conflict(v,(19,1),(19,1)).
conflict(v,(21,1),(21,1)).
conflict(v,(22,1),(22,1)).
conflict(v,(23,1),(23,1)).
conflict(v,(24,1),(24,1)).
conflict(v,(25,1),(25,1)).
conflict(v,(26,1),(26,1)).
conflict(v,(27,1),(27,1)).
conflict(v,(28,1),(28,1)).
conflict(v,(29,1),(29,1)).
conflict(v,(30,1),(30,1)).
conflict(v,(31,1),(31,1)).
conflict(v,(32,1),(32,1)).
conflict(v,(33,1),(33,1)).
conflict(v,(34,1),(34,1)).
conflict(v,(35,1),(35,1)).
conflict(v,(36,1),(36,1)).
conflict(v,(37,1),(37,1)).
conflict(v,(38,1),(38,1)).
conflict(v,(39,1),(39,1)).
conflict(v,(40,1),(40,1)).
conflict(v,(1,2),(1,2)).
conflict(v,(3,2),(3,2)).
conflict(v,(6,2),(6,2)).
conflict(v,(7,2),(7,2)).
conflict(v,(8,2),(8,2)).
conflict(v,(9,2),(9,2)).
conflict(v,(10,2),(10,2)).
conflict(v,(11,2),(11,2)).
conflict(v,(13,2),(13,2)).
conflict(v,(14,2),(14,2)).
conflict(v,(15,2),(15,2)).
conflict(v,(16,2),(16,2)).
conflict(v,(17,2),(17,2)).
conflict(v,(18,2),(18,2)).
conflict(v,(19,2),(19,2)).
conflict(v,(22,2),(22,2)).
conflict(v,(23,2),(23,2)).
conflict(v,(24,2),(24,2)).
conflict(v,(25,2),(25,2)).
conflict(v,(28,2),(28,2)).
conflict(v,(29,2),(29,2)).
conflict(v,(30,2),(30,2)).
conflict(v,(31,2),(31,2)).
conflict(v,(32,2),(32,2)).
conflict(v,(34,2),(34,2)).
conflict(v,(35,2),(35,2)).
conflict(v,(37,2),(37,2)).
conflict(v,(38,2),(38,2)).
conflict(v,(39,2),(39,2)).
conflict(v,(40,2),(40,2)).
conflict(v,(1,3),(1,3)).
conflict(v,(3,3),(3,3)).
conflict(v,(6,3),(6,3)).
conflict(v,(9,3),(9,3)).
conflict(v,(10,3),(10,3)).
conflict(v,(11,3),(11,3)).
conflict(v,(12,3),(12,3)).
conflict(v,(13,3),(13,3)).
conflict(v,(14,3),(14,3)).
conflict(v,(15,3),(15,3)).
conflict(v,(17,3),(17,3)).
conflict(v,(18,3),(18,3)).
conflict(v,(19,3),(19,3)).
conflict(v,(20,3),(20,3)).
conflict(v,(21,3),(21,3)).
conflict(v,(22,3),(22,3)).
conflict(v,(23,3),(23,3)).
conflict(v,(28,3),(28,3)).
conflict(v,(29,3),(29,3)).
conflict(v,(30,3),(30,3)).
conflict(v,(31,3),(31,3)).
conflict(v,(32,3),(32,3)).
conflict(v,(33,3),(33,3)).
conflict(v,(34,3),(34,3)).
conflict(v,(38,3),(38,3)).
conflict(v,(39,3),(39,3)).
conflict(v,(1,4),(1,4)).
conflict(v,(3,4),(3,4)).
conflict(v,(4,4),(4,4)).
conflict(v,(5,4),(5,4)).
conflict(v,(6,4),(6,4)).
conflict(v,(9,4),(9,4)).
conflict(v,(10,4),(10,4)).
conflict(v,(12,4),(12,4)).
conflict(v,(13,4),(13,4)).
conflict(v,(14,4),(14,4)).
conflict(v,(15,4),(15,4)).
conflict(v,(16,4),(16,4)).
conflict(v,(17,4),(17,4)).
conflict(v,(18,4),(18,4)).
conflict(v,(20,4),(20,4)).
conflict(v,(21,4),(21,4)).
conflict(v,(28,4),(28,4)).
conflict(v,(29,4),(29,4)).
conflict(v,(32,4),(32,4)).
conflict(v,(33,4),(33,4)).
conflict(v,(36,4),(36,4)).
conflict(v,(37,4),(37,4)).
conflict(v,(38,4),(38,4)).
conflict(v,(39,4),(39,4)).
conflict(e,((1,1),(1,2)),((1,2),(1,1))).
conflict(e,((1,1),(2,1)),((2,1),(1,1))).
conflict(e,((2,1),(1,1)),((1,1),(2,1))).
conflict(e,((2,1),(3,1)),((3,1),(2,1))).
conflict(e,((3,1),(2,1)),((2,1),(3,1))).
conflict(e,((3,1),(3,2)),((3,2),(3,1))).
conflict(e,((9,1),(9,2)),((9,2),(9,1))).
conflict(e,((9,1),(10,1)),((10,1),(9,1))).
conflict(e,((10,1),(9,1)),((9,1),(10,1))).
conflict(e,((10,1),(10,2)),((10,2),(10,1))).
conflict(e,((10,1),(11,1)),((11,1),(10,1))).
conflict(e,((11,1),(10,1)),((10,1),(11,1))).
conflict(e,((11,1),(12,1)),((12,1),(11,1))).
conflict(e,((12,1),(11,1)),((11,1),(12,1))).
conflict(e,((13,1),(13,2)),((13,2),(13,1))).
conflict(e,((14,1),(14,2)),((14,2),(14,1))).
conflict(e,((14,1),(15,1)),((15,1),(14,1))).
conflict(e,((15,1),(14,1)),((14,1),(15,1))).
conflict(e,((15,1),(16,1)),((16,1),(15,1))).
conflict(e,((16,1),(15,1)),((15,1),(16,1))).
conflict(e,((19,1),(19,2)),((19,2),(19,1))).
conflict(e,((21,1),(22,1)),((22,1),(21,1))).
conflict(e,((22,1),(21,1)),((21,1),(22,1))).
conflict(e,((22,1),(23,1)),((23,1),(22,1))).
conflict(e,((23,1),(22,1)),((22,1),(23,1))).
conflict(e,((23,1),(23,2)),((23,2),(23,1))).
conflict(e,((24,1),(24,2)),((24,2),(24,1))).
conflict(e,((25,1),(25,2)),((25,2),(25,1))).
conflict(e,((25,1),(26,1)),((26,1),(25,1))).
conflict(e,((26,1),(25,1)),((25,1),(26,1))).
conflict(e,((26,1),(27,1)),((27,1),(26,1))).
conflict(e,((27,1),(26,1)),((26,1),(27,1))).
conflict(e,((27,1),(28,1)),((28,1),(27,1))).
conflict(e,((28,1),(27,1)),((27,1),(28,1))).
conflict(e,((28,1),(28,2)),((28,2),(28,1))).
conflict(e,((29,1),(29,2)),((29,2),(29,1))).
conflict(e,((29,1),(30,1)),((30,1),(29,1))).
conflict(e,((30,1),(29,1)),((29,1),(30,1))).
conflict(e,((30,1),(31,1)),((31,1),(30,1))).
conflict(e,((31,1),(30,1)),((30,1),(31,1))).
conflict(e,((31,1),(32,1)),((32,1),(31,1))).
conflict(e,((32,1),(31,1)),((31,1),(32,1))).
conflict(e,((32,1),(32,2)),((32,2),(32,1))).
conflict(e,((32,1),(33,1)),((33,1),(32,1))).
conflict(e,((33,1),(32,1)),((32,1),(33,1))).
conflict(e,((33,1),(34,1)),((34,1),(33,1))).
conflict(e,((34,1),(33,1)),((33,1),(34,1))).
conflict(e,((34,1),(34,2)),((34,2),(34,1))).
conflict(e,((35,1),(35,2)),((35,2),(35,1))).
conflict(e,((35,1),(36,1)),((36,1),(35,1))).
conflict(e,((36,1),(35,1)),((35,1),(36,1))).
conflict(e,((36,1),(37,1)),((37,1),(36,1))).
conflict(e,((37,1),(36,1)),((36,1),(37,1))).
conflict(e,((37,1),(38,1)),((38,1),(37,1))).
conflict(e,((38,1),(37,1)),((37,1),(38,1))).
conflict(e,((38,1),(38,2)),((38,2),(38,1))).
conflict(e,((38,1),(39,1)),((39,1),(38,1))).
conflict(e,((39,1),(38,1)),((38,1),(39,1))).
conflict(e,((39,1),(40,1)),((40,1),(39,1))).
conflict(e,((40,1),(39,1)),((39,1),(40,1))).
conflict(e,((40,1),(40,2)),((40,2),(40,1))).
conflict(e,((1,2),(1,1)),((1,1),(1,2))).
conflict(e,((1,2),(1,3)),((1,3),(1,2))).
conflict(e,((3,2),(3,1)),((3,1),(3,2))).
conflict(e,((3,2),(3,3)),((3,3),(3,2))).
conflict(e,((6,2),(6,3)),((6,3),(6,2))).
conflict(e,((6,2),(7,2)),((7,2),(6,2))).
conflict(e,((7,2),(6,2)),((6,2),(7,2))).
conflict(e,((7,2),(8,2)),((8,2),(7,2))).
conflict(e,((8,2),(7,2)),((7,2),(8,2))).
conflict(e,((8,2),(9,2)),((9,2),(8,2))).
conflict(e,((9,2),(9,1)),((9,1),(9,2))).
conflict(e,((9,2),(8,2)),((8,2),(9,2))).
conflict(e,((9,2),(9,3)),((9,3),(9,2))).
conflict(e,((10,2),(10,1)),((10,1),(10,2))).
conflict(e,((10,2),(11,2)),((11,2),(10,2))).
conflict(e,((11,2),(10,2)),((10,2),(11,2))).
conflict(e,((11,2),(11,3)),((11,3),(11,2))).
conflict(e,((13,2),(13,1)),((13,1),(13,2))).
conflict(e,((13,2),(13,3)),((13,3),(13,2))).
conflict(e,((14,2),(14,1)),((14,1),(14,2))).
conflict(e,((14,2),(15,2)),((15,2),(14,2))).
conflict(e,((15,2),(14,2)),((14,2),(15,2))).
conflict(e,((15,2),(15,3)),((15,3),(15,2))).
conflict(e,((15,2),(16,2)),((16,2),(15,2))).
conflict(e,((16,2),(15,2)),((15,2),(16,2))).
conflict(e,((16,2),(17,2)),((17,2),(16,2))).
conflict(e,((17,2),(16,2)),((16,2),(17,2))).
conflict(e,((17,2),(18,2)),((18,2),(17,2))).
conflict(e,((18,2),(17,2)),((17,2),(18,2))).
conflict(e,((18,2),(19,2)),((19,2),(18,2))).
conflict(e,((19,2),(19,1)),((19,1),(19,2))).
conflict(e,((19,2),(18,2)),((18,2),(19,2))).
conflict(e,((22,2),(22,3)),((22,3),(22,2))).
conflict(e,((22,2),(23,2)),((23,2),(22,2))).
conflict(e,((23,2),(23,1)),((23,1),(23,2))).
conflict(e,((23,2),(22,2)),((22,2),(23,2))).
conflict(e,((23,2),(24,2)),((24,2),(23,2))).
conflict(e,((24,2),(24,1)),((24,1),(24,2))).
conflict(e,((24,2),(23,2)),((23,2),(24,2))).
conflict(e,((24,2),(25,2)),((25,2),(24,2))).
conflict(e,((25,2),(25,1)),((25,1),(25,2))).
conflict(e,((25,2),(24,2)),((24,2),(25,2))).
conflict(e,((28,2),(28,1)),((28,1),(28,2))).
conflict(e,((28,2),(28,3)),((28,3),(28,2))).
conflict(e,((29,2),(29,1)),((29,1),(29,2))).
conflict(e,((30,2),(30,3)),((30,3),(30,2))).
conflict(e,((30,2),(31,2)),((31,2),(30,2))).
conflict(e,((31,2),(30,2)),((30,2),(31,2))).
conflict(e,((31,2),(31,3)),((31,3),(31,2))).
conflict(e,((32,2),(32,1)),((32,1),(32,2))).
conflict(e,((34,2),(34,1)),((34,1),(34,2))).
conflict(e,((34,2),(34,3)),((34,3),(34,2))).
conflict(e,((34,2),(35,2)),((35,2),(34,2))).
conflict(e,((35,2),(35,1)),((35,1),(35,2))).
conflict(e,((35,2),(34,2)),((34,2),(35,2))).
conflict(e,((37,2),(38,2)),((38,2),(37,2))).
conflict(e,((38,2),(38,1)),((38,1),(38,2))).
conflict(e,((38,2),(37,2)),((37,2),(38,2))).
conflict(e,((39,2),(39,3)),((39,3),(39,2))).
conflict(e,((39,2),(40,2)),((40,2),(39,2))).
conflict(e,((40,2),(40,1)),((40,1),(40,2))).
conflict(e,((40,2),(39,2)),((39,2),(40,2))).
conflict(e,((1,3),(1,2)),((1,2),(1,3))).
conflict(e,((1,3),(1,4)),((1,4),(1,3))).
conflict(e,((3,3),(3,2)),((3,2),(3,3))).
conflict(e,((3,3),(3,4)),((3,4),(3,3))).
conflict(e,((6,3),(6,2)),((6,2),(6,3))).
conflict(e,((6,3),(6,4)),((6,4),(6,3))).
conflict(e,((9,3),(9,2)),((9,2),(9,3))).
conflict(e,((9,3),(9,4)),((9,4),(9,3))).
conflict(e,((10,3),(10,4)),((10,4),(10,3))).
conflict(e,((11,3),(11,2)),((11,2),(11,3))).
conflict(e,((11,3),(12,3)),((12,3),(11,3))).
conflict(e,((12,3),(11,3)),((11,3),(12,3))).
conflict(e,((12,3),(12,4)),((12,4),(12,3))).
conflict(e,((13,3),(13,2)),((13,2),(13,3))).
conflict(e,((13,3),(13,4)),((13,4),(13,3))).
conflict(e,((13,3),(14,3)),((14,3),(13,3))).
conflict(e,((14,3),(13,3)),((13,3),(14,3))).
conflict(e,((14,3),(15,3)),((15,3),(14,3))).
conflict(e,((15,3),(15,2)),((15,2),(15,3))).
conflict(e,((15,3),(14,3)),((14,3),(15,3))).
conflict(e,((15,3),(15,4)),((15,4),(15,3))).
conflict(e,((17,3),(18,3)),((18,3),(17,3))).
conflict(e,((18,3),(17,3)),((17,3),(18,3))).
conflict(e,((18,3),(18,4)),((18,4),(18,3))).
conflict(e,((18,3),(19,3)),((19,3),(18,3))).
conflict(e,((19,3),(18,3)),((18,3),(19,3))).
conflict(e,((19,3),(20,3)),((20,3),(19,3))).
conflict(e,((20,3),(19,3)),((19,3),(20,3))).
conflict(e,((20,3),(21,3)),((21,3),(20,3))).
conflict(e,((21,3),(20,3)),((20,3),(21,3))).
conflict(e,((21,3),(21,4)),((21,4),(21,3))).
conflict(e,((21,3),(22,3)),((22,3),(21,3))).
conflict(e,((22,3),(22,2)),((22,2),(22,3))).
conflict(e,((22,3),(21,3)),((21,3),(22,3))).
conflict(e,((22,3),(23,3)),((23,3),(22,3))).
conflict(e,((23,3),(22,3)),((22,3),(23,3))).
conflict(e,((28,3),(28,2)),((28,2),(28,3))).
conflict(e,((28,3),(28,4)),((28,4),(28,3))).
conflict(e,((29,3),(29,4)),((29,4),(29,3))).
conflict(e,((29,3),(30,3)),((30,3),(29,3))).
conflict(e,((30,3),(30,2)),((30,2),(30,3))).
conflict(e,((30,3),(29,3)),((29,3),(30,3))).
conflict(e,((31,3),(31,2)),((31,2),(31,3))).
conflict(e,((31,3),(32,3)),((32,3),(31,3))).
conflict(e,((32,3),(31,3)),((31,3),(32,3))).
conflict(e,((32,3),(32,4)),((32,4),(32,3))).
conflict(e,((33,3),(33,4)),((33,4),(33,3))).
conflict(e,((33,3),(34,3)),((34,3),(33,3))).
conflict(e,((34,3),(34,2)),((34,2),(34,3))).
conflict(e,((34,3),(33,3)),((33,3),(34,3))).
conflict(e,((38,3),(39,3)),((39,3),(38,3))).
conflict(e,((39,3),(39,2)),((39,2),(39,3))).
conflict(e,((39,3),(38,3)),((38,3),(39,3))).
conflict(e,((39,3),(39,4)),((39,4),(39,3))).
conflict(e,((1,4),(1,3)),((1,3),(1,4))).
conflict(e,((3,4),(3,3)),((3,3),(3,4))).
conflict(e,((3,4),(4,4)),((4,4),(3,4))).
conflict(e,((4,4),(3,4)),((3,4),(4,4))).
conflict(e,((4,4),(5,4)),((5,4),(4,4))).
conflict(e,((5,4),(4,4)),((4,4),(5,4))).
conflict(e,((5,4),(6,4)),((6,4),(5,4))).
conflict(e,((6,4),(6,3)),((6,3),(6,4))).
conflict(e,((6,4),(5,4)),((5,4),(6,4))).
conflict(e,((9,4),(9,3)),((9,3),(9,4))).
conflict(e,((9,4),(10,4)),((10,4),(9,4))).
conflict(e,((10,4),(10,3)),((10,3),(10,4))).
conflict(e,((10,4),(9,4)),((9,4),(10,4))).
conflict(e,((12,4),(12,3)),((12,3),(12,4))).
conflict(e,((12,4),(13,4)),((13,4),(12,4))).
conflict(e,((13,4),(13,3)),((13,3),(13,4))).
conflict(e,((13,4),(12,4)),((12,4),(13,4))).
conflict(e,((13,4),(14,4)),((14,4),(13,4))).
conflict(e,((14,4),(13,4)),((13,4),(14,4))).
conflict(e,((15,4),(15,3)),((15,3),(15,4))).
conflict(e,((15,4),(16,4)),((16,4),(15,4))).
conflict(e,((16,4),(15,4)),((15,4),(16,4))).
conflict(e,((16,4),(17,4)),((17,4),(16,4))).
conflict(e,((17,4),(16,4)),((16,4),(17,4))).
conflict(e,((17,4),(18,4)),((18,4),(17,4))).
conflict(e,((18,4),(18,3)),((18,3),(18,4))).
conflict(e,((18,4),(17,4)),((17,4),(18,4))).
conflict(e,((20,4),(21,4)),((21,4),(20,4))).
conflict(e,((21,4),(21,3)),((21,3),(21,4))).
conflict(e,((21,4),(20,4)),((20,4),(21,4))).
conflict(e,((28,4),(28,3)),((28,3),(28,4))).
conflict(e,((28,4),(29,4)),((29,4),(28,4))).
conflict(e,((29,4),(29,3)),((29,3),(29,4))).
conflict(e,((29,4),(28,4)),((28,4),(29,4))).
conflict(e,((32,4),(32,3)),((32,3),(32,4))).
conflict(e,((32,4),(33,4)),((33,4),(32,4))).
conflict(e,((33,4),(33,3)),((33,3),(33,4))).
conflict(e,((33,4),(32,4)),((32,4),(33,4))).
conflict(e,((36,4),(37,4)),((37,4),(36,4))).
conflict(e,((37,4),(36,4)),((36,4),(37,4))).
conflict(e,((37,4),(38,4)),((38,4),(37,4))).
conflict(e,((38,4),(37,4)),((37,4),(38,4))).
conflict(e,((38,4),(39,4)),((39,4),(38,4))).
conflict(e,((39,4),(39,3)),((39,3),(39,4))).
conflict(e,((39,4),(38,4)),((38,4),(39,4))).
conflict(e,((1,2),(1,1)),((1,2),(1,1))).
conflict(e,((2,1),(1,1)),((2,1),(1,1))).
conflict(e,((1,1),(2,1)),((1,1),(2,1))).
conflict(e,((3,1),(2,1)),((3,1),(2,1))).
conflict(e,((2,1),(3,1)),((2,1),(3,1))).
conflict(e,((3,2),(3,1)),((3,2),(3,1))).
conflict(e,((9,2),(9,1)),((9,2),(9,1))).
conflict(e,((10,1),(9,1)),((10,1),(9,1))).
conflict(e,((9,1),(10,1)),((9,1),(10,1))).
conflict(e,((10,2),(10,1)),((10,2),(10,1))).
conflict(e,((11,1),(10,1)),((11,1),(10,1))).
conflict(e,((10,1),(11,1)),((10,1),(11,1))).
conflict(e,((12,1),(11,1)),((12,1),(11,1))).
conflict(e,((11,1),(12,1)),((11,1),(12,1))).
conflict(e,((13,2),(13,1)),((13,2),(13,1))).
conflict(e,((14,2),(14,1)),((14,2),(14,1))).
conflict(e,((15,1),(14,1)),((15,1),(14,1))).
conflict(e,((14,1),(15,1)),((14,1),(15,1))).
conflict(e,((16,1),(15,1)),((16,1),(15,1))).
conflict(e,((15,1),(16,1)),((15,1),(16,1))).
conflict(e,((19,2),(19,1)),((19,2),(19,1))).
conflict(e,((22,1),(21,1)),((22,1),(21,1))).
conflict(e,((21,1),(22,1)),((21,1),(22,1))).
conflict(e,((23,1),(22,1)),((23,1),(22,1))).
conflict(e,((22,1),(23,1)),((22,1),(23,1))).
conflict(e,((23,2),(23,1)),((23,2),(23,1))).
conflict(e,((24,2),(24,1)),((24,2),(24,1))).
conflict(e,((25,2),(25,1)),((25,2),(25,1))).
conflict(e,((26,1),(25,1)),((26,1),(25,1))).
conflict(e,((25,1),(26,1)),((25,1),(26,1))).
conflict(e,((27,1),(26,1)),((27,1),(26,1))).
conflict(e,((26,1),(27,1)),((26,1),(27,1))).
conflict(e,((28,1),(27,1)),((28,1),(27,1))).
conflict(e,((27,1),(28,1)),((27,1),(28,1))).
conflict(e,((28,2),(28,1)),((28,2),(28,1))).
conflict(e,((29,2),(29,1)),((29,2),(29,1))).
conflict(e,((30,1),(29,1)),((30,1),(29,1))).
conflict(e,((29,1),(30,1)),((29,1),(30,1))).
conflict(e,((31,1),(30,1)),((31,1),(30,1))).
conflict(e,((30,1),(31,1)),((30,1),(31,1))).
conflict(e,((32,1),(31,1)),((32,1),(31,1))).
conflict(e,((31,1),(32,1)),((31,1),(32,1))).
conflict(e,((32,2),(32,1)),((32,2),(32,1))).
conflict(e,((33,1),(32,1)),((33,1),(32,1))).
conflict(e,((32,1),(33,1)),((32,1),(33,1))).
conflict(e,((34,1),(33,1)),((34,1),(33,1))).
conflict(e,((33,1),(34,1)),((33,1),(34,1))).
conflict(e,((34,2),(34,1)),((34,2),(34,1))).
conflict(e,((35,2),(35,1)),((35,2),(35,1))).
conflict(e,((36,1),(35,1)),((36,1),(35,1))).
conflict(e,((35,1),(36,1)),((35,1),(36,1))).
conflict(e,((37,1),(36,1)),((37,1),(36,1))).
conflict(e,((36,1),(37,1)),((36,1),(37,1))).
conflict(e,((38,1),(37,1)),((38,1),(37,1))).
conflict(e,((37,1),(38,1)),((37,1),(38,1))).
conflict(e,((38,2),(38,1)),((38,2),(38,1))).
conflict(e,((39,1),(38,1)),((39,1),(38,1))).
conflict(e,((38,1),(39,1)),((38,1),(39,1))).
conflict(e,((40,1),(39,1)),((40,1),(39,1))).
conflict(e,((39,1),(40,1)),((39,1),(40,1))).
conflict(e,((40,2),(40,1)),((40,2),(40,1))).
conflict(e,((1,1),(1,2)),((1,1),(1,2))).
conflict(e,((1,3),(1,2)),((1,3),(1,2))).
conflict(e,((3,1),(3,2)),((3,1),(3,2))).
conflict(e,((3,3),(3,2)),((3,3),(3,2))).
conflict(e,((6,3),(6,2)),((6,3),(6,2))).
conflict(e,((7,2),(6,2)),((7,2),(6,2))).
conflict(e,((6,2),(7,2)),((6,2),(7,2))).
conflict(e,((8,2),(7,2)),((8,2),(7,2))).
conflict(e,((7,2),(8,2)),((7,2),(8,2))).
conflict(e,((9,2),(8,2)),((9,2),(8,2))).
conflict(e,((9,1),(9,2)),((9,1),(9,2))).
conflict(e,((8,2),(9,2)),((8,2),(9,2))).
conflict(e,((9,3),(9,2)),((9,3),(9,2))).
conflict(e,((10,1),(10,2)),((10,1),(10,2))).
conflict(e,((11,2),(10,2)),((11,2),(10,2))).
conflict(e,((10,2),(11,2)),((10,2),(11,2))).
conflict(e,((11,3),(11,2)),((11,3),(11,2))).
conflict(e,((13,1),(13,2)),((13,1),(13,2))).
conflict(e,((13,3),(13,2)),((13,3),(13,2))).
conflict(e,((14,1),(14,2)),((14,1),(14,2))).
conflict(e,((15,2),(14,2)),((15,2),(14,2))).
conflict(e,((14,2),(15,2)),((14,2),(15,2))).
conflict(e,((15,3),(15,2)),((15,3),(15,2))).
conflict(e,((16,2),(15,2)),((16,2),(15,2))).
conflict(e,((15,2),(16,2)),((15,2),(16,2))).
conflict(e,((17,2),(16,2)),((17,2),(16,2))).
conflict(e,((16,2),(17,2)),((16,2),(17,2))).
conflict(e,((18,2),(17,2)),((18,2),(17,2))).
conflict(e,((17,2),(18,2)),((17,2),(18,2))).
conflict(e,((19,2),(18,2)),((19,2),(18,2))).
conflict(e,((19,1),(19,2)),((19,1),(19,2))).
conflict(e,((18,2),(19,2)),((18,2),(19,2))).
conflict(e,((22,3),(22,2)),((22,3),(22,2))).
conflict(e,((23,2),(22,2)),((23,2),(22,2))).
conflict(e,((23,1),(23,2)),((23,1),(23,2))).
conflict(e,((22,2),(23,2)),((22,2),(23,2))).
conflict(e,((24,2),(23,2)),((24,2),(23,2))).
conflict(e,((24,1),(24,2)),((24,1),(24,2))).
conflict(e,((23,2),(24,2)),((23,2),(24,2))).
conflict(e,((25,2),(24,2)),((25,2),(24,2))).
conflict(e,((25,1),(25,2)),((25,1),(25,2))).
conflict(e,((24,2),(25,2)),((24,2),(25,2))).
conflict(e,((28,1),(28,2)),((28,1),(28,2))).
conflict(e,((28,3),(28,2)),((28,3),(28,2))).
conflict(e,((29,1),(29,2)),((29,1),(29,2))).
conflict(e,((30,3),(30,2)),((30,3),(30,2))).
conflict(e,((31,2),(30,2)),((31,2),(30,2))).
conflict(e,((30,2),(31,2)),((30,2),(31,2))).
conflict(e,((31,3),(31,2)),((31,3),(31,2))).
conflict(e,((32,1),(32,2)),((32,1),(32,2))).
conflict(e,((34,1),(34,2)),((34,1),(34,2))).
conflict(e,((34,3),(34,2)),((34,3),(34,2))).
conflict(e,((35,2),(34,2)),((35,2),(34,2))).
conflict(e,((35,1),(35,2)),((35,1),(35,2))).
conflict(e,((34,2),(35,2)),((34,2),(35,2))).
conflict(e,((38,2),(37,2)),((38,2),(37,2))).
conflict(e,((38,1),(38,2)),((38,1),(38,2))).
conflict(e,((37,2),(38,2)),((37,2),(38,2))).
conflict(e,((39,3),(39,2)),((39,3),(39,2))).
conflict(e,((40,2),(39,2)),((40,2),(39,2))).
conflict(e,((40,1),(40,2)),((40,1),(40,2))).
conflict(e,((39,2),(40,2)),((39,2),(40,2))).
conflict(e,((1,2),(1,3)),((1,2),(1,3))).
conflict(e,((1,4),(1,3)),((1,4),(1,3))).
conflict(e,((3,2),(3,3)),((3,2),(3,3))).
conflict(e,((3,4),(3,3)),((3,4),(3,3))).
conflict(e,((6,2),(6,3)),((6,2),(6,3))).
conflict(e,((6,4),(6,3)),((6,4),(6,3))).
conflict(e,((9,2),(9,3)),((9,2),(9,3))).
conflict(e,((9,4),(9,3)),((9,4),(9,3))).
conflict(e,((10,4),(10,3)),((10,4),(10,3))).
conflict(e,((11,2),(11,3)),((11,2),(11,3))).
conflict(e,((12,3),(11,3)),((12,3),(11,3))).
conflict(e,((11,3),(12,3)),((11,3),(12,3))).
conflict(e,((12,4),(12,3)),((12,4),(12,3))).
conflict(e,((13,2),(13,3)),((13,2),(13,3))).
conflict(e,((13,4),(13,3)),((13,4),(13,3))).
conflict(e,((14,3),(13,3)),((14,3),(13,3))).
conflict(e,((13,3),(14,3)),((13,3),(14,3))).
conflict(e,((15,3),(14,3)),((15,3),(14,3))).
conflict(e,((15,2),(15,3)),((15,2),(15,3))).
conflict(e,((14,3),(15,3)),((14,3),(15,3))).
conflict(e,((15,4),(15,3)),((15,4),(15,3))).
conflict(e,((18,3),(17,3)),((18,3),(17,3))).
conflict(e,((17,3),(18,3)),((17,3),(18,3))).
conflict(e,((18,4),(18,3)),((18,4),(18,3))).
conflict(e,((19,3),(18,3)),((19,3),(18,3))).
conflict(e,((18,3),(19,3)),((18,3),(19,3))).
conflict(e,((20,3),(19,3)),((20,3),(19,3))).
conflict(e,((19,3),(20,3)),((19,3),(20,3))).
conflict(e,((21,3),(20,3)),((21,3),(20,3))).
conflict(e,((20,3),(21,3)),((20,3),(21,3))).
conflict(e,((21,4),(21,3)),((21,4),(21,3))).
conflict(e,((22,3),(21,3)),((22,3),(21,3))).
conflict(e,((22,2),(22,3)),((22,2),(22,3))).
conflict(e,((21,3),(22,3)),((21,3),(22,3))).
conflict(e,((23,3),(22,3)),((23,3),(22,3))).
conflict(e,((22,3),(23,3)),((22,3),(23,3))).
conflict(e,((28,2),(28,3)),((28,2),(28,3))).
conflict(e,((28,4),(28,3)),((28,4),(28,3))).
conflict(e,((29,4),(29,3)),((29,4),(29,3))).
conflict(e,((30,3),(29,3)),((30,3),(29,3))).
conflict(e,((30,2),(30,3)),((30,2),(30,3))).
conflict(e,((29,3),(30,3)),((29,3),(30,3))).
conflict(e,((31,2),(31,3)),((31,2),(31,3))).
conflict(e,((32,3),(31,3)),((32,3),(31,3))).
conflict(e,((31,3),(32,3)),((31,3),(32,3))).
conflict(e,((32,4),(32,3)),((32,4),(32,3))).
conflict(e,((33,4),(33,3)),((33,4),(33,3))).
conflict(e,((34,3),(33,3)),((34,3),(33,3))).
conflict(e,((34,2),(34,3)),((34,2),(34,3))).
conflict(e,((33,3),(34,3)),((33,3),(34,3))).
conflict(e,((39,3),(38,3)),((39,3),(38,3))).
conflict(e,((39,2),(39,3)),((39,2),(39,3))).
conflict(e,((38,3),(39,3)),((38,3),(39,3))).
conflict(e,((39,4),(39,3)),((39,4),(39,3))).
conflict(e,((1,3),(1,4)),((1,3),(1,4))).
conflict(e,((3,3),(3,4)),((3,3),(3,4))).
conflict(e,((4,4),(3,4)),((4,4),(3,4))).
conflict(e,((3,4),(4,4)),((3,4),(4,4))).
conflict(e,((5,4),(4,4)),((5,4),(4,4))).
conflict(e,((4,4),(5,4)),((4,4),(5,4))).
conflict(e,((6,4),(5,4)),((6,4),(5,4))).
conflict(e,((6,3),(6,4)),((6,3),(6,4))).
conflict(e,((5,4),(6,4)),((5,4),(6,4))).
conflict(e,((9,3),(9,4)),((9,3),(9,4))).
conflict(e,((10,4),(9,4)),((10,4),(9,4))).
conflict(e,((10,3),(10,4)),((10,3),(10,4))).
conflict(e,((9,4),(10,4)),((9,4),(10,4))).
conflict(e,((12,3),(12,4)),((12,3),(12,4))).
conflict(e,((13,4),(12,4)),((13,4),(12,4))).
conflict(e,((13,3),(13,4)),((13,3),(13,4))).
conflict(e,((12,4),(13,4)),((12,4),(13,4))).
conflict(e,((14,4),(13,4)),((14,4),(13,4))).
conflict(e,((13,4),(14,4)),((13,4),(14,4))).
conflict(e,((15,3),(15,4)),((15,3),(15,4))).
conflict(e,((16,4),(15,4)),((16,4),(15,4))).
conflict(e,((15,4),(16,4)),((15,4),(16,4))).
conflict(e,((17,4),(16,4)),((17,4),(16,4))).
conflict(e,((16,4),(17,4)),((16,4),(17,4))).
conflict(e,((18,4),(17,4)),((18,4),(17,4))).
conflict(e,((18,3),(18,4)),((18,3),(18,4))).
conflict(e,((17,4),(18,4)),((17,4),(18,4))).
conflict(e,((21,4),(20,4)),((21,4),(20,4))).
conflict(e,((21,3),(21,4)),((21,3),(21,4))).
conflict(e,((20,4),(21,4)),((20,4),(21,4))).
conflict(e,((28,3),(28,4)),((28,3),(28,4))).
conflict(e,((29,4),(28,4)),((29,4),(28,4))).
conflict(e,((29,3),(29,4)),((29,3),(29,4))).
conflict(e,((28,4),(29,4)),((28,4),(29,4))).
conflict(e,((32,3),(32,4)),((32,3),(32,4))).
conflict(e,((33,4),(32,4)),((33,4),(32,4))).
conflict(e,((33,3),(33,4)),((33,3),(33,4))).
conflict(e,((32,4),(33,4)),((32,4),(33,4))).
conflict(e,((37,4),(36,4)),((37,4),(36,4))).
conflict(e,((36,4),(37,4)),((36,4),(37,4))).
conflict(e,((38,4),(37,4)),((38,4),(37,4))).
conflict(e,((37,4),(38,4)),((37,4),(38,4))).
conflict(e,((39,4),(38,4)),((39,4),(38,4))).
conflict(e,((39,3),(39,4)),((39,3),(39,4))).
conflict(e,((38,4),(39,4)),((38,4),(39,4))).
task((1,pickup),(16,1)).
task((2,pickup),(19,1)).
task((3,pickup),(10,1)).
task((4,pickup),(22,1)).
task((5,pickup),(22,1)).
task((6,pickup),(13,1)).
task((7,pickup),(3,1)).
task((8,pickup),(16,1)).
task((1,putdown),(19,1)).
task((2,putdown),(14,4)).
task((3,putdown),(13,4)).
task((4,putdown),(10,1)).
task((5,putdown),(13,1)).
task((6,putdown),(5,4)).
task((7,putdown),(21,4)).
task((8,putdown),(3,1)).
home(1,(24,1)).
home(2,(21,1)).
home(3,(23,1)).
home(4,(25,1)).
nearest((1,1),(2,1),15).
nearest((2,1),(3,1),15).
nearest((9,1),(10,1),15).
nearest((10,1),(11,1),15).
nearest((11,1),(12,1),15).
nearest((14,1),(15,1),15).
nearest((15,1),(16,1),15).
nearest((21,1),(22,1),15).
nearest((22,1),(23,1),15).
nearest((25,1),(26,1),15).
nearest((26,1),(27,1),15).
nearest((27,1),(28,1),15).
nearest((29,1),(30,1),15).
nearest((30,1),(31,1),15).
nearest((31,1),(32,1),15).
nearest((32,1),(33,1),15).
nearest((33,1),(34,1),15).
nearest((35,1),(36,1),15).
nearest((36,1),(37,1),15).
nearest((37,1),(38,1),15).
nearest((38,1),(39,1),15).
nearest((39,1),(40,1),15).
nearest((1,1),(1,2),15).
nearest((3,1),(3,2),15).
nearest((9,1),(9,2),15).
nearest((10,1),(10,2),15).
nearest((13,1),(13,2),15).
nearest((14,1),(14,2),15).
nearest((19,1),(19,2),15).
nearest((23,1),(23,2),15).
nearest((24,1),(24,2),15).
nearest((25,1),(25,2),15).
nearest((28,1),(28,2),15).
nearest((29,1),(29,2),15).
nearest((32,1),(32,2),15).
nearest((34,1),(34,2),15).
nearest((35,1),(35,2),15).
nearest((38,1),(38,2),15).
nearest((40,1),(40,2),15).
nearest((6,2),(7,2),15).
nearest((7,2),(8,2),15).
nearest((8,2),(9,2),15).
nearest((10,2),(11,2),15).
nearest((14,2),(15,2),15).
nearest((15,2),(16,2),15).
nearest((16,2),(17,2),15).
nearest((17,2),(18,2),15).
nearest((18,2),(19,2),15).
nearest((22,2),(23,2),15).
nearest((23,2),(24,2),15).
nearest((24,2),(25,2),15).
nearest((30,2),(31,2),15).
nearest((34,2),(35,2),15).
nearest((37,2),(38,2),15).
nearest((39,2),(40,2),15).
nearest((1,2),(1,3),15).
nearest((3,2),(3,3),15).
nearest((6,2),(6,3),15).
nearest((9,2),(9,3),15).
nearest((11,2),(11,3),15).
nearest((13,2),(13,3),15).
nearest((15,2),(15,3),15).
nearest((22,2),(22,3),15).
nearest((28,2),(28,3),15).
nearest((30,2),(30,3),15).
nearest((31,2),(31,3),15).
nearest((34,2),(34,3),15).
nearest((39,2),(39,3),15).
nearest((11,3),(12,3),15).
nearest((13,3),(14,3),15).
nearest((14,3),(15,3),15).
nearest((17,3),(18,3),15).
nearest((18,3),(19,3),15).
nearest((19,3),(20,3),15).
nearest((20,3),(21,3),15).
nearest((21,3),(22,3),15).
nearest((22,3),(23,3),15).
nearest((29,3),(30,3),15).
nearest((31,3),(32,3),15).
nearest((33,3),(34,3),15).
nearest((38,3),(39,3),15).
nearest((1,3),(1,4),15).
nearest((3,3),(3,4),15).
nearest((6,3),(6,4),15).
nearest((9,3),(9,4),15).
nearest((10,3),(10,4),15).
nearest((12,3),(12,4),15).
nearest((13,3),(13,4),15).
nearest((15,3),(15,4),15).
nearest((18,3),(18,4),15).
nearest((21,3),(21,4),15).
nearest((28,3),(28,4),15).
nearest((29,3),(29,4),15).
nearest((32,3),(32,4),15).
nearest((33,3),(33,4),15).
nearest((39,3),(39,4),15).
nearest((3,4),(4,4),15).
nearest((4,4),(5,4),15).
nearest((5,4),(6,4),15).
nearest((9,4),(10,4),15).
nearest((12,4),(13,4),15).
nearest((13,4),(14,4),15).
nearest((15,4),(16,4),15).
nearest((16,4),(17,4),15).
nearest((17,4),(18,4),15).
nearest((20,4),(21,4),15).
nearest((28,4),(29,4),15).
nearest((32,4),(33,4),15).
nearest((36,4),(37,4),15).
nearest((37,4),(38,4),15).
nearest((38,4),(39,4),15).
nearest((39,4),(38,4),15).
nearest((38,4),(37,4),15).
nearest((37,4),(36,4),15).
nearest((33,4),(32,4),15).
nearest((29,4),(28,4),15).
nearest((21,4),(20,4),15).
nearest((18,4),(17,4),15).
nearest((17,4),(16,4),15).
nearest((16,4),(15,4),15).
nearest((14,4),(13,4),15).
nearest((13,4),(12,4),15).
nearest((10,4),(9,4),15).
nearest((6,4),(5,4),15).
nearest((5,4),(4,4),15).
nearest((4,4),(3,4),15).
nearest((39,4),(39,3),15).
nearest((33,4),(33,3),15).
nearest((32,4),(32,3),15).
nearest((29,4),(29,3),15).
nearest((28,4),(28,3),15).
nearest((21,4),(21,3),15).
nearest((18,4),(18,3),15).
nearest((15,4),(15,3),15).
nearest((13,4),(13,3),15).
nearest((12,4),(12,3),15).
nearest((10,4),(10,3),15).
nearest((9,4),(9,3),15).
nearest((6,4),(6,3),15).
nearest((3,4),(3,3),15).
nearest((1,4),(1,3),15).
nearest((39,3),(38,3),15).
nearest((34,3),(33,3),15).
nearest((32,3),(31,3),15).
nearest((30,3),(29,3),15).
nearest((23,3),(22,3),15).
nearest((22,3),(21,3),15).
nearest((21,3),(20,3),15).
nearest((20,3),(19,3),15).
nearest((19,3),(18,3),15).
nearest((18,3),(17,3),15).
nearest((15,3),(14,3),15).
nearest((14,3),(13,3),15).
nearest((12,3),(11,3),15).
nearest((39,3),(39,2),15).
nearest((34,3),(34,2),15).
nearest((31,3),(31,2),15).
nearest((30,3),(30,2),15).
nearest((28,3),(28,2),15).
nearest((22,3),(22,2),15).
nearest((15,3),(15,2),15).
nearest((13,3),(13,2),15).
nearest((11,3),(11,2),15).
nearest((9,3),(9,2),15).
nearest((6,3),(6,2),15).
nearest((3,3),(3,2),15).
nearest((1,3),(1,2),15).
nearest((40,2),(39,2),15).
nearest((38,2),(37,2),15).
nearest((35,2),(34,2),15).
nearest((31,2),(30,2),15).
nearest((25,2),(24,2),15).
nearest((24,2),(23,2),15).
nearest((23,2),(22,2),15).
nearest((19,2),(18,2),15).
nearest((18,2),(17,2),15).
nearest((17,2),(16,2),15).
nearest((16,2),(15,2),15).
nearest((15,2),(14,2),15).
nearest((11,2),(10,2),15).
nearest((9,2),(8,2),15).
nearest((8,2),(7,2),15).
nearest((7,2),(6,2),15).
nearest((40,2),(40,1),15).
nearest((38,2),(38,1),15).
nearest((35,2),(35,1),15).
nearest((34,2),(34,1),15).
nearest((32,2),(32,1),15).
nearest((29,2),(29,1),15).
nearest((28,2),(28,1),15).
nearest((25,2),(25,1),15).
nearest((24,2),(24,1),15).
nearest((23,2),(23,1),15).
nearest((19,2),(19,1),15).
nearest((14,2),(14,1),15).
nearest((13,2),(13,1),15).
nearest((10,2),(10,1),15).
nearest((9,2),(9,1),15).
nearest((3,2),(3,1),15).
nearest((1,2),(1,1),15).
nearest((40,1),(39,1),15).
nearest((39,1),(38,1),15).
nearest((38,1),(37,1),15).
nearest((37,1),(36,1),15).
nearest((36,1),(35,1),15).
nearest((34,1),(33,1),15).
nearest((33,1),(32,1),15).
nearest((32,1),(31,1),15).
nearest((31,1),(30,1),15).
nearest((30,1),(29,1),15).
nearest((28,1),(27,1),15).
nearest((27,1),(26,1),15).
nearest((26,1),(25,1),15).
nearest((23,1),(22,1),15).
nearest((22,1),(21,1),15).
nearest((16,1),(15,1),15).
nearest((15,1),(14,1),15).
nearest((12,1),(11,1),15).
nearest((11,1),(10,1),15).
nearest((10,1),(9,1),15).
nearest((3,1),(2,1),15).
nearest((2,1),(1,1),15).
entrypoint((21,1),(21,1),0).
entrypoint((14,4),(14,4),0).
entrypoint((10,1),(10,1),0).
entrypoint((22,1),(22,1),0).
entrypoint((3,1),(3,1),0).
entrypoint((13,4),(13,4),0).
entrypoint((5,4),(5,4),0).
entrypoint((21,4),(21,4),0).
entrypoint((23,1),(23,1),0).
entrypoint((25,1),(25,1),0).
entrypoint((13,2),(13,1),15).
entrypoint((19,2),(19,1),15).
entrypoint((24,2),(24,1),15).
entrypoint((15,1),(16,1),15).
on_deadend((21,1),(21,1)).
on_deadend((13,1),(13,1)).
on_deadend((19,1),(19,1)).
on_deadend((24,1),(24,1)).
on_deadend((14,4),(14,4)).
on_deadend((16,1),(16,1)).
on_deadend((15,1),(16,1)).
on_deadend((19,2),(19,1)).
on_deadend((13,2),(13,1)).
on_deadend((22,1),(21,1)).
on_deadend((23,1),(21,1)).
on_deadend((18,2),(19,1)).
on_deadend((14,1),(16,1)).
on_deadend((14,2),(16,1)).
on_deadend((17,2),(19,1)).
on_deadend((16,2),(19,1)).
endpoint_access((21,1),(21,1)).
endpoint_access((14,4),(14,4)).
endpoint_access((10,1),(10,1)).
endpoint_access((22,1),(22,1)).
endpoint_access((3,1),(3,1)).
endpoint_access((13,4),(13,4)).
endpoint_access((5,4),(5,4)).
endpoint_access((21,4),(21,4)).
endpoint_access((23,1),(23,1)).
endpoint_access((25,1),(25,1)).
endpoint_access((13,2),(13,1)).
endpoint_access((19,2),(19,1)).
endpoint_access((24,2),(24,1)).
endpoint_access((15,1),(16,1)).
endpoint_access((13,1),(13,1)).
endpoint_access((19,1),(19,1)).
endpoint_access((24,1),(24,1)).
endpoint_access((16,1),(16,1)).
endpoint_access((22,1),(21,1)).
endpoint_access((23,1),(21,1)).
endpoint_access((18,2),(19,1)).
endpoint_access((14,1),(16,1)).
endpoint_access((14,2),(16,1)).
endpoint_access((17,2),(19,1)).
endpoint_access((16,2),(19,1)).
shortest_path((16,1),(19,1),135,(15,1)).
shortest_path((16,1),(10,1),210,(15,1)).
shortest_path((16,1),(22,1),270,(15,1)).
shortest_path((16,1),(13,1),135,(15,1)).
shortest_path((16,1),(3,1),405,(15,1)).
shortest_path((16,1),(14,4),135,(15,1)).
shortest_path((16,1),(13,4),120,(15,1)).
shortest_path((16,1),(5,4),330,(15,1)).
shortest_path((16,1),(21,4),210,(15,1)).
shortest_path((16,1),(24,1),270,(15,1)).
shortest_path((16,1),(21,1),285,(15,1)).
shortest_path((16,1),(23,1),255,(15,1)).
shortest_path((16,1),(25,1),285,(15,1)).
shortest_path((19,1),(16,1),135,(19,2)).
shortest_path((19,1),(10,1),225,(19,2)).
shortest_path((19,1),(22,1),285,(19,2)).
shortest_path((19,1),(13,1),150,(19,2)).
shortest_path((19,1),(3,1),420,(19,2)).
shortest_path((19,1),(14,4),150,(19,2)).
shortest_path((19,1),(13,4),135,(19,2)).
shortest_path((19,1),(5,4),345,(19,2)).
shortest_path((19,1),(21,4),225,(19,2)).
shortest_path((19,1),(24,1),285,(19,2)).
shortest_path((19,1),(21,1),300,(19,2)).
shortest_path((19,1),(23,1),270,(19,2)).
shortest_path((19,1),(25,1),300,(19,2)).
shortest_path((10,1),(16,1),210,(10,2)).
shortest_path((10,1),(19,1),225,(10,2)).
shortest_path((10,1),(22,1),330,(10,2)).
shortest_path((10,1),(13,1),135,(10,2)).
shortest_path((10,1),(3,1),195,(9,1)).
shortest_path((10,1),(14,4),105,(10,2)).
shortest_path((10,1),(13,4),90,(10,2)).
shortest_path((10,1),(5,4),120,(9,1)).
shortest_path((10,1),(21,4),270,(10,2)).
shortest_path((10,1),(24,1),330,(10,2)).
shortest_path((10,1),(21,1),345,(10,2)).
shortest_path((10,1),(23,1),315,(10,2)).
shortest_path((10,1),(25,1),345,(10,2)).
shortest_path((22,1),(16,1),270,(23,1)).
shortest_path((22,1),(19,1),285,(23,1)).
shortest_path((22,1),(10,1),330,(23,1)).
shortest_path((22,1),(13,1),255,(23,1)).
shortest_path((22,1),(3,1),525,(23,1)).
shortest_path((22,1),(14,4),255,(23,1)).
shortest_path((22,1),(13,4),240,(23,1)).
shortest_path((22,1),(5,4),450,(23,1)).
shortest_path((22,1),(21,4),90,(23,1)).
shortest_path((22,1),(24,1),60,(23,1)).
shortest_path((22,1),(21,1),15,(21,1)).
shortest_path((22,1),(23,1),15,(23,1)).
shortest_path((22,1),(25,1),75,(23,1)).
shortest_path((13,1),(16,1),135,(13,2)).
shortest_path((13,1),(19,1),150,(13,2)).
shortest_path((13,1),(10,1),135,(13,2)).
shortest_path((13,1),(22,1),255,(13,2)).
shortest_path((13,1),(3,1),330,(13,2)).
shortest_path((13,1),(14,4),60,(13,2)).
shortest_path((13,1),(13,4),45,(13,2)).
shortest_path((13,1),(5,4),255,(13,2)).
shortest_path((13,1),(21,4),195,(13,2)).
shortest_path((13,1),(24,1),255,(13,2)).
shortest_path((13,1),(21,1),270,(13,2)).
shortest_path((13,1),(23,1),240,(13,2)).
shortest_path((13,1),(25,1),270,(13,2)).
shortest_path((3,1),(16,1),405,(3,2)).
shortest_path((3,1),(19,1),420,(3,2)).
shortest_path((3,1),(10,1),195,(3,2)).
shortest_path((3,1),(22,1),525,(3,2)).
shortest_path((3,1),(13,1),330,(3,2)).
shortest_path((3,1),(14,4),300,(3,2)).
shortest_path((3,1),(13,4),285,(3,2)).
shortest_path((3,1),(5,4),75,(3,2)).
shortest_path((3,1),(21,4),465,(3,2)).
shortest_path((3,1),(24,1),525,(3,2)).
shortest_path((3,1),(21,1),540,(3,2)).
shortest_path((3,1),(23,1),510,(3,2)).
shortest_path((3,1),(25,1),540,(3,2)).
shortest_path((14,4),(16,1),135,(13,4)).
shortest_path((14,4),(19,1),150,(13,4)).
shortest_path((14,4),(10,1),105,(13,4)).
shortest_path((14,4),(22,1),255,(13,4)).
shortest_path((14,4),(13,1),60,(13,4)).
shortest_path((14,4),(3,1),300,(13,4)).
shortest_path((14,4),(13,4),15,(13,4)).
shortest_path((14,4),(5,4),225,(13,4)).
shortest_path((14,4),(21,4),195,(13,4)).
shortest_path((14,4),(24,1),255,(13,4)).
shortest_path((14,4),(21,1),270,(13,4)).
shortest_path((14,4),(23,1),240,(13,4)).
shortest_path((14,4),(25,1),270,(13,4)).
shortest_path((13,4),(16,1),120,(13,3)).
shortest_path((13,4),(19,1),135,(13,3)).
shortest_path((13,4),(10,1),90,(12,4)).
shortest_path((13,4),(22,1),240,(13,3)).
shortest_path((13,4),(13,1),45,(13,3)).
shortest_path((13,4),(3,1),285,(12,4)).
shortest_path((13,4),(14,4),15,(14,4)).
shortest_path((13,4),(5,4),210,(12,4)).
shortest_path((13,4),(21,4),180,(13,3)).
shortest_path((13,4),(24,1),240,(13,3)).
shortest_path((13,4),(21,1),255,(13,3)).
shortest_path((13,4),(23,1),225,(13,3)).
shortest_path((13,4),(25,1),255,(13,3)).
shortest_path((5,4),(16,1),330,(6,4)).
shortest_path((5,4),(19,1),345,(6,4)).
shortest_path((5,4),(10,1),120,(6,4)).
shortest_path((5,4),(22,1),450,(6,4)).
shortest_path((5,4),(13,1),255,(6,4)).
shortest_path((5,4),(3,1),75,(4,4)).
shortest_path((5,4),(14,4),225,(6,4)).
shortest_path((5,4),(13,4),210,(6,4)).
shortest_path((5,4),(21,4),390,(6,4)).
shortest_path((5,4),(24,1),450,(6,4)).
shortest_path((5,4),(21,1),465,(6,4)).
shortest_path((5,4),(23,1),435,(6,4)).
shortest_path((5,4),(25,1),465,(6,4)).
shortest_path((21,4),(16,1),210,(21,3)).
shortest_path((21,4),(19,1),225,(21,3)).
shortest_path((21,4),(10,1),270,(21,3)).
shortest_path((21,4),(22,1),90,(21,3)).
shortest_path((21,4),(13,1),195,(21,3)).
shortest_path((21,4),(3,1),465,(21,3)).
shortest_path((21,4),(14,4),195,(21,3)).
shortest_path((21,4),(13,4),180,(21,3)).
shortest_path((21,4),(5,4),390,(21,3)).
shortest_path((21,4),(24,1),90,(21,3)).
shortest_path((21,4),(21,1),105,(21,3)).
shortest_path((21,4),(23,1),75,(21,3)).
shortest_path((21,4),(25,1),105,(21,3)).
shortest_path((24,1),(16,1),270,(24,2)).
shortest_path((24,1),(19,1),285,(24,2)).
shortest_path((24,1),(10,1),330,(24,2)).
shortest_path((24,1),(22,1),60,(24,2)).
shortest_path((24,1),(13,1),255,(24,2)).
shortest_path((24,1),(3,1),525,(24,2)).
shortest_path((24,1),(14,4),255,(24,2)).
shortest_path((24,1),(13,4),240,(24,2)).
shortest_path((24,1),(5,4),450,(24,2)).
shortest_path((24,1),(21,4),90,(24,2)).
shortest_path((24,1),(21,1),75,(24,2)).
shortest_path((24,1),(23,1),45,(24,2)).
shortest_path((24,1),(25,1),45,(24,2)).
shortest_path((21,1),(16,1),285,(22,1)).
shortest_path((21,1),(19,1),300,(22,1)).
shortest_path((21,1),(10,1),345,(22,1)).
shortest_path((21,1),(22,1),15,(22,1)).
shortest_path((21,1),(13,1),270,(22,1)).
shortest_path((21,1),(3,1),540,(22,1)).
shortest_path((21,1),(14,4),270,(22,1)).
shortest_path((21,1),(13,4),255,(22,1)).
shortest_path((21,1),(5,4),465,(22,1)).
shortest_path((21,1),(21,4),105,(22,1)).
shortest_path((21,1),(24,1),75,(22,1)).
shortest_path((21,1),(23,1),30,(22,1)).
shortest_path((21,1),(25,1),90,(22,1)).
shortest_path((23,1),(16,1),255,(23,2)).
shortest_path((23,1),(19,1),270,(23,2)).
shortest_path((23,1),(10,1),315,(23,2)).
shortest_path((23,1),(22,1),15,(22,1)).
shortest_path((23,1),(13,1),240,(23,2)).
shortest_path((23,1),(3,1),510,(23,2)).
shortest_path((23,1),(14,4),240,(23,2)).
shortest_path((23,1),(13,4),225,(23,2)).
shortest_path((23,1),(5,4),435,(23,2)).
shortest_path((23,1),(21,4),75,(23,2)).
shortest_path((23,1),(24,1),45,(23,2)).
shortest_path((23,1),(21,1),30,(22,1)).
shortest_path((23,1),(25,1),60,(23,2)).
shortest_path((25,1),(16,1),285,(25,2)).
shortest_path((25,1),(19,1),300,(25,2)).
shortest_path((25,1),(10,1),345,(25,2)).
shortest_path((25,1),(22,1),75,(25,2)).
shortest_path((25,1),(13,1),270,(25,2)).
shortest_path((25,1),(3,1),540,(25,2)).
shortest_path((25,1),(14,4),270,(25,2)).
shortest_path((25,1),(13,4),255,(25,2)).
shortest_path((25,1),(5,4),465,(25,2)).
shortest_path((25,1),(21,4),105,(25,2)).
shortest_path((25,1),(24,1),45,(25,2)).
shortest_path((25,1),(21,1),90,(25,2)).
shortest_path((25,1),(23,1),60,(25,2)).
shortest_path((1,1),(16,1),435,(2,1)).
shortest_path((1,1),(19,1),450,(2,1)).
shortest_path((1,1),(10,1),225,(2,1)).
shortest_path((1,1),(22,1),555,(2,1)).
shortest_path((1,1),(13,1),360,(2,1)).
shortest_path((1,1),(3,1),30,(2,1)).
shortest_path((1,1),(14,4),330,(2,1)).
shortest_path((1,1),(13,4),315,(2,1)).
shortest_path((1,1),(5,4),105,(2,1)).
shortest_path((1,1),(21,4),495,(2,1)).
shortest_path((1,1),(24,1),555,(2,1)).
shortest_path((1,1),(21,1),570,(2,1)).
shortest_path((1,1),(23,1),540,(2,1)).
shortest_path((1,1),(25,1),570,(2,1)).
shortest_path((2,1),(16,1),420,(3,1)).
shortest_path((2,1),(19,1),435,(3,1)).
shortest_path((2,1),(10,1),210,(3,1)).
shortest_path((2,1),(22,1),540,(3,1)).
shortest_path((2,1),(13,1),345,(3,1)).
shortest_path((2,1),(3,1),15,(3,1)).
shortest_path((2,1),(14,4),315,(3,1)).
shortest_path((2,1),(13,4),300,(3,1)).
shortest_path((2,1),(5,4),90,(3,1)).
shortest_path((2,1),(21,4),480,(3,1)).
shortest_path((2,1),(24,1),540,(3,1)).
shortest_path((2,1),(21,1),555,(3,1)).
shortest_path((2,1),(23,1),525,(3,1)).
shortest_path((2,1),(25,1),555,(3,1)).
shortest_path((9,1),(16,1),225,(10,1)).
shortest_path((9,1),(19,1),240,(10,1)).
shortest_path((9,1),(10,1),15,(10,1)).
shortest_path((9,1),(22,1),345,(10,1)).
shortest_path((9,1),(13,1),150,(10,1)).
shortest_path((9,1),(3,1),180,(9,2)).
shortest_path((9,1),(14,4),120,(10,1)).
shortest_path((9,1),(13,4),105,(10,1)).
shortest_path((9,1),(5,4),105,(9,2)).
shortest_path((9,1),(21,4),285,(10,1)).
shortest_path((9,1),(24,1),345,(10,1)).
shortest_path((9,1),(21,1),360,(10,1)).
shortest_path((9,1),(23,1),330,(10,1)).
shortest_path((9,1),(25,1),360,(10,1)).
shortest_path((11,1),(16,1),225,(10,1)).
shortest_path((11,1),(19,1),240,(10,1)).
shortest_path((11,1),(10,1),15,(10,1)).
shortest_path((11,1),(22,1),345,(10,1)).
shortest_path((11,1),(13,1),150,(10,1)).
shortest_path((11,1),(3,1),210,(10,1)).
shortest_path((11,1),(14,4),120,(10,1)).
shortest_path((11,1),(13,4),105,(10,1)).
shortest_path((11,1),(5,4),135,(10,1)).
shortest_path((11,1),(21,4),285,(10,1)).
shortest_path((11,1),(24,1),345,(10,1)).
shortest_path((11,1),(21,1),360,(10,1)).
shortest_path((11,1),(23,1),330,(10,1)).
shortest_path((11,1),(25,1),360,(10,1)).
shortest_path((12,1),(16,1),240,(11,1)).
shortest_path((12,1),(19,1),255,(11,1)).
shortest_path((12,1),(10,1),30,(11,1)).
shortest_path((12,1),(22,1),360,(11,1)).
shortest_path((12,1),(13,1),165,(11,1)).
shortest_path((12,1),(3,1),225,(11,1)).
shortest_path((12,1),(14,4),135,(11,1)).
shortest_path((12,1),(13,4),120,(11,1)).
shortest_path((12,1),(5,4),150,(11,1)).
shortest_path((12,1),(21,4),300,(11,1)).
shortest_path((12,1),(24,1),360,(11,1)).
shortest_path((12,1),(21,1),375,(11,1)).
shortest_path((12,1),(23,1),345,(11,1)).
shortest_path((12,1),(25,1),375,(11,1)).
shortest_path((14,1),(16,1),30,(15,1)).
shortest_path((14,1),(19,1),105,(14,2)).
shortest_path((14,1),(10,1),180,(14,2)).
shortest_path((14,1),(22,1),240,(14,2)).
shortest_path((14,1),(13,1),105,(14,2)).
shortest_path((14,1),(3,1),375,(14,2)).
shortest_path((14,1),(14,4),105,(14,2)).
shortest_path((14,1),(13,4),90,(14,2)).
shortest_path((14,1),(5,4),300,(14,2)).
shortest_path((14,1),(21,4),180,(14,2)).
shortest_path((14,1),(24,1),240,(14,2)).
shortest_path((14,1),(21,1),255,(14,2)).
shortest_path((14,1),(23,1),225,(14,2)).
shortest_path((14,1),(25,1),255,(14,2)).
shortest_path((15,1),(16,1),15,(16,1)).
shortest_path((15,1),(19,1),120,(14,1)).
shortest_path((15,1),(10,1),195,(14,1)).
shortest_path((15,1),(22,1),255,(14,1)).
shortest_path((15,1),(13,1),120,(14,1)).
shortest_path((15,1),(3,1),390,(14,1)).
shortest_path((15,1),(14,4),120,(14,1)).
shortest_path((15,1),(13,4),105,(14,1)).
shortest_path((15,1),(5,4),315,(14,1)).
shortest_path((15,1),(21,4),195,(14,1)).
shortest_path((15,1),(24,1),255,(14,1)).
shortest_path((15,1),(21,1),270,(14,1)).
shortest_path((15,1),(23,1),240,(14,1)).
shortest_path((15,1),(25,1),270,(14,1)).
shortest_path((26,1),(16,1),300,(25,1)).
shortest_path((26,1),(19,1),315,(25,1)).
shortest_path((26,1),(10,1),360,(25,1)).
shortest_path((26,1),(22,1),90,(25,1)).
shortest_path((26,1),(13,1),285,(25,1)).
shortest_path((26,1),(3,1),555,(25,1)).
shortest_path((26,1),(14,4),285,(25,1)).
shortest_path((26,1),(13,4),270,(25,1)).
shortest_path((26,1),(5,4),480,(25,1)).
shortest_path((26,1),(21,4),120,(25,1)).
shortest_path((26,1),(24,1),60,(25,1)).
shortest_path((26,1),(21,1),105,(25,1)).
shortest_path((26,1),(23,1),75,(25,1)).
shortest_path((26,1),(25,1),15,(25,1)).
shortest_path((27,1),(16,1),315,(26,1)).
shortest_path((27,1),(19,1),330,(26,1)).
shortest_path((27,1),(10,1),375,(26,1)).
shortest_path((27,1),(22,1),105,(26,1)).
shortest_path((27,1),(13,1),300,(26,1)).
shortest_path((27,1),(3,1),570,(26,1)).
shortest_path((27,1),(14,4),300,(26,1)).
shortest_path((27,1),(13,4),285,(26,1)).
shortest_path((27,1),(5,4),495,(26,1)).
shortest_path((27,1),(21,4),135,(26,1)).
shortest_path((27,1),(24,1),75,(26,1)).
shortest_path((27,1),(21,1),120,(26,1)).
shortest_path((27,1),(23,1),90,(26,1)).
shortest_path((27,1),(25,1),30,(26,1)).
shortest_path((28,1),(16,1),330,(27,1)).
shortest_path((28,1),(19,1),345,(27,1)).
shortest_path((28,1),(10,1),390,(27,1)).
shortest_path((28,1),(22,1),120,(27,1)).
shortest_path((28,1),(13,1),315,(27,1)).
shortest_path((28,1),(3,1),585,(27,1)).
shortest_path((28,1),(14,4),315,(27,1)).
shortest_path((28,1),(13,4),300,(27,1)).
shortest_path((28,1),(5,4),510,(27,1)).
shortest_path((28,1),(21,4),150,(27,1)).
shortest_path((28,1),(24,1),90,(27,1)).
shortest_path((28,1),(21,1),135,(27,1)).
shortest_path((28,1),(23,1),105,(27,1)).
shortest_path((28,1),(25,1),45,(27,1)).
shortest_path((29,1),(16,1),645,(30,1)).
shortest_path((29,1),(19,1),660,(30,1)).
shortest_path((29,1),(10,1),705,(30,1)).
shortest_path((29,1),(22,1),435,(30,1)).
shortest_path((29,1),(13,1),630,(30,1)).
shortest_path((29,1),(3,1),900,(30,1)).
shortest_path((29,1),(14,4),630,(30,1)).
shortest_path((29,1),(13,4),615,(30,1)).
shortest_path((29,1),(5,4),825,(30,1)).
shortest_path((29,1),(21,4),465,(30,1)).
shortest_path((29,1),(24,1),405,(30,1)).
shortest_path((29,1),(21,1),450,(30,1)).
shortest_path((29,1),(23,1),420,(30,1)).
shortest_path((29,1),(25,1),360,(30,1)).
shortest_path((30,1),(16,1),630,(31,1)).
shortest_path((30,1),(19,1),645,(31,1)).
shortest_path((30,1),(10,1),690,(31,1)).
shortest_path((30,1),(22,1),420,(31,1)).
shortest_path((30,1),(13,1),615,(31,1)).
shortest_path((30,1),(3,1),885,(31,1)).
shortest_path((30,1),(14,4),615,(31,1)).
shortest_path((30,1),(13,4),600,(31,1)).
shortest_path((30,1),(5,4),810,(31,1)).
shortest_path((30,1),(21,4),450,(31,1)).
shortest_path((30,1),(24,1),390,(31,1)).
shortest_path((30,1),(21,1),435,(31,1)).
shortest_path((30,1),(23,1),405,(31,1)).
shortest_path((30,1),(25,1),345,(31,1)).
shortest_path((31,1),(16,1),615,(32,1)).
shortest_path((31,1),(19,1),630,(32,1)).
shortest_path((31,1),(10,1),675,(32,1)).
shortest_path((31,1),(22,1),405,(32,1)).
shortest_path((31,1),(13,1),600,(32,1)).
shortest_path((31,1),(3,1),870,(32,1)).
shortest_path((31,1),(14,4),600,(32,1)).
shortest_path((31,1),(13,4),585,(32,1)).
shortest_path((31,1),(5,4),795,(32,1)).
shortest_path((31,1),(21,4),435,(32,1)).
shortest_path((31,1),(24,1),375,(32,1)).
shortest_path((31,1),(21,1),420,(32,1)).
shortest_path((31,1),(23,1),390,(32,1)).
shortest_path((31,1),(25,1),330,(32,1)).
shortest_path((32,1),(16,1),600,(33,1)).
shortest_path((32,1),(19,1),615,(33,1)).
shortest_path((32,1),(10,1),660,(33,1)).
shortest_path((32,1),(22,1),390,(33,1)).
shortest_path((32,1),(13,1),585,(33,1)).
shortest_path((32,1),(3,1),855,(33,1)).
shortest_path((32,1),(14,4),585,(33,1)).
shortest_path((32,1),(13,4),570,(33,1)).
shortest_path((32,1),(5,4),780,(33,1)).
shortest_path((32,1),(21,4),420,(33,1)).
shortest_path((32,1),(24,1),360,(33,1)).
shortest_path((32,1),(21,1),405,(33,1)).
shortest_path((32,1),(23,1),375,(33,1)).
shortest_path((32,1),(25,1),315,(33,1)).
shortest_path((33,1),(16,1),585,(34,1)).
shortest_path((33,1),(19,1),600,(34,1)).
shortest_path((33,1),(10,1),645,(34,1)).
shortest_path((33,1),(22,1),375,(34,1)).
shortest_path((33,1),(13,1),570,(34,1)).
shortest_path((33,1),(3,1),840,(34,1)).
shortest_path((33,1),(14,4),570,(34,1)).
shortest_path((33,1),(13,4),555,(34,1)).
shortest_path((33,1),(5,4),765,(34,1)).
shortest_path((33,1),(21,4),405,(34,1)).
shortest_path((33,1),(24,1),345,(34,1)).
shortest_path((33,1),(21,1),390,(34,1)).
shortest_path((33,1),(23,1),360,(34,1)).
shortest_path((33,1),(25,1),300,(34,1)).
shortest_path((34,1),(16,1),570,(34,2)).
shortest_path((34,1),(19,1),585,(34,2)).
shortest_path((34,1),(10,1),630,(34,2)).
shortest_path((34,1),(22,1),360,(34,2)).
shortest_path((34,1),(13,1),555,(34,2)).
shortest_path((34,1),(3,1),825,(34,2)).
shortest_path((34,1),(14,4),555,(34,2)).
shortest_path((34,1),(13,4),540,(34,2)).
shortest_path((34,1),(5,4),750,(34,2)).
shortest_path((34,1),(21,4),390,(34,2)).
shortest_path((34,1),(24,1),330,(34,2)).
shortest_path((34,1),(21,1),375,(34,2)).
shortest_path((34,1),(23,1),345,(34,2)).
shortest_path((34,1),(25,1),285,(34,2)).
shortest_path((35,1),(16,1),585,(35,2)).
shortest_path((35,1),(19,1),600,(35,2)).
shortest_path((35,1),(10,1),645,(35,2)).
shortest_path((35,1),(22,1),375,(35,2)).
shortest_path((35,1),(13,1),570,(35,2)).
shortest_path((35,1),(3,1),840,(35,2)).
shortest_path((35,1),(14,4),570,(35,2)).
shortest_path((35,1),(13,4),555,(35,2)).
shortest_path((35,1),(5,4),765,(35,2)).
shortest_path((35,1),(21,4),405,(35,2)).
shortest_path((35,1),(24,1),345,(35,2)).
shortest_path((35,1),(21,1),390,(35,2)).
shortest_path((35,1),(23,1),360,(35,2)).
shortest_path((35,1),(25,1),300,(35,2)).
shortest_path((36,1),(16,1),600,(35,1)).
shortest_path((36,1),(19,1),615,(35,1)).
shortest_path((36,1),(10,1),660,(35,1)).
shortest_path((36,1),(22,1),390,(35,1)).
shortest_path((36,1),(13,1),585,(35,1)).
shortest_path((36,1),(3,1),855,(35,1)).
shortest_path((36,1),(14,4),585,(35,1)).
shortest_path((36,1),(13,4),570,(35,1)).
shortest_path((36,1),(5,4),780,(35,1)).
shortest_path((36,1),(21,4),420,(35,1)).
shortest_path((36,1),(24,1),360,(35,1)).
shortest_path((36,1),(21,1),405,(35,1)).
shortest_path((36,1),(23,1),375,(35,1)).
shortest_path((36,1),(25,1),315,(35,1)).
shortest_path((37,1),(16,1),615,(36,1)).
shortest_path((37,1),(19,1),630,(36,1)).
shortest_path((37,1),(10,1),675,(36,1)).
shortest_path((37,1),(22,1),405,(36,1)).
shortest_path((37,1),(13,1),600,(36,1)).
shortest_path((37,1),(3,1),870,(36,1)).
shortest_path((37,1),(14,4),600,(36,1)).
shortest_path((37,1),(13,4),585,(36,1)).
shortest_path((37,1),(5,4),795,(36,1)).
shortest_path((37,1),(21,4),435,(36,1)).
shortest_path((37,1),(24,1),375,(36,1)).
shortest_path((37,1),(21,1),420,(36,1)).
shortest_path((37,1),(23,1),390,(36,1)).
shortest_path((37,1),(25,1),330,(36,1)).
shortest_path((38,1),(16,1),630,(37,1)).
shortest_path((38,1),(19,1),645,(37,1)).
shortest_path((38,1),(10,1),690,(37,1)).
shortest_path((38,1),(22,1),420,(37,1)).
shortest_path((38,1),(13,1),615,(37,1)).
shortest_path((38,1),(3,1),885,(37,1)).
shortest_path((38,1),(14,4),615,(37,1)).
shortest_path((38,1),(13,4),600,(37,1)).
shortest_path((38,1),(5,4),810,(37,1)).
shortest_path((38,1),(21,4),450,(37,1)).
shortest_path((38,1),(24,1),390,(37,1)).
shortest_path((38,1),(21,1),435,(37,1)).
shortest_path((38,1),(23,1),405,(37,1)).
shortest_path((38,1),(25,1),345,(37,1)).
shortest_path((39,1),(16,1),645,(38,1)).
shortest_path((39,1),(19,1),660,(38,1)).
shortest_path((39,1),(10,1),705,(38,1)).
shortest_path((39,1),(22,1),435,(38,1)).
shortest_path((39,1),(13,1),630,(38,1)).
shortest_path((39,1),(3,1),900,(38,1)).
shortest_path((39,1),(14,4),630,(38,1)).
shortest_path((39,1),(13,4),615,(38,1)).
shortest_path((39,1),(5,4),825,(38,1)).
shortest_path((39,1),(21,4),465,(38,1)).
shortest_path((39,1),(24,1),405,(38,1)).
shortest_path((39,1),(21,1),450,(38,1)).
shortest_path((39,1),(23,1),420,(38,1)).
shortest_path((39,1),(25,1),360,(38,1)).
shortest_path((40,1),(16,1),660,(39,1)).
shortest_path((40,1),(19,1),675,(39,1)).
shortest_path((40,1),(10,1),720,(39,1)).
shortest_path((40,1),(22,1),450,(39,1)).
shortest_path((40,1),(13,1),645,(39,1)).
shortest_path((40,1),(3,1),915,(39,1)).
shortest_path((40,1),(14,4),645,(39,1)).
shortest_path((40,1),(13,4),630,(39,1)).
shortest_path((40,1),(5,4),840,(39,1)).
shortest_path((40,1),(21,4),480,(39,1)).
shortest_path((40,1),(24,1),420,(39,1)).
shortest_path((40,1),(21,1),465,(39,1)).
shortest_path((40,1),(23,1),435,(39,1)).
shortest_path((40,1),(25,1),375,(39,1)).
shortest_path((1,2),(16,1),450,(1,1)).
shortest_path((1,2),(19,1),465,(1,1)).
shortest_path((1,2),(10,1),240,(1,1)).
shortest_path((1,2),(22,1),570,(1,1)).
shortest_path((1,2),(13,1),375,(1,1)).
shortest_path((1,2),(3,1),45,(1,1)).
shortest_path((1,2),(14,4),345,(1,1)).
shortest_path((1,2),(13,4),330,(1,1)).
shortest_path((1,2),(5,4),120,(1,1)).
shortest_path((1,2),(21,4),510,(1,1)).
shortest_path((1,2),(24,1),570,(1,1)).
shortest_path((1,2),(21,1),585,(1,1)).
shortest_path((1,2),(23,1),555,(1,1)).
shortest_path((1,2),(25,1),585,(1,1)).
shortest_path((3,2),(16,1),390,(3,3)).
shortest_path((3,2),(19,1),405,(3,3)).
shortest_path((3,2),(10,1),180,(3,3)).
shortest_path((3,2),(22,1),510,(3,3)).
shortest_path((3,2),(13,1),315,(3,3)).
shortest_path((3,2),(3,1),15,(3,1)).
shortest_path((3,2),(14,4),285,(3,3)).
shortest_path((3,2),(13,4),270,(3,3)).
shortest_path((3,2),(5,4),60,(3,3)).
shortest_path((3,2),(21,4),450,(3,3)).
shortest_path((3,2),(24,1),510,(3,3)).
shortest_path((3,2),(21,1),525,(3,3)).
shortest_path((3,2),(23,1),495,(3,3)).
shortest_path((3,2),(25,1),525,(3,3)).
shortest_path((9,2),(16,1),240,(9,1)).
shortest_path((9,2),(19,1),255,(9,1)).
shortest_path((9,2),(10,1),30,(9,1)).
shortest_path((9,2),(22,1),360,(9,1)).
shortest_path((9,2),(13,1),165,(9,1)).
shortest_path((9,2),(3,1),165,(8,2)).
shortest_path((9,2),(14,4),135,(9,1)).
shortest_path((9,2),(13,4),120,(9,1)).
shortest_path((9,2),(5,4),90,(8,2)).
shortest_path((9,2),(21,4),300,(9,1)).
shortest_path((9,2),(24,1),360,(9,1)).
shortest_path((9,2),(21,1),375,(9,1)).
shortest_path((9,2),(23,1),345,(9,1)).
shortest_path((9,2),(25,1),375,(9,1)).
shortest_path((10,2),(16,1),195,(11,2)).
shortest_path((10,2),(19,1),210,(11,2)).
shortest_path((10,2),(10,1),15,(10,1)).
shortest_path((10,2),(22,1),315,(11,2)).
shortest_path((10,2),(13,1),120,(11,2)).
shortest_path((10,2),(3,1),210,(10,1)).
shortest_path((10,2),(14,4),90,(11,2)).
shortest_path((10,2),(13,4),75,(11,2)).
shortest_path((10,2),(5,4),135,(10,1)).
shortest_path((10,2),(21,4),255,(11,2)).
shortest_path((10,2),(24,1),315,(11,2)).
shortest_path((10,2),(21,1),330,(11,2)).
shortest_path((10,2),(23,1),300,(11,2)).
shortest_path((10,2),(25,1),330,(11,2)).
shortest_path((13,2),(16,1),120,(13,3)).
shortest_path((13,2),(19,1),135,(13,3)).
shortest_path((13,2),(10,1),120,(13,3)).
shortest_path((13,2),(22,1),240,(13,3)).
shortest_path((13,2),(13,1),15,(13,1)).
shortest_path((13,2),(3,1),315,(13,3)).
shortest_path((13,2),(14,4),45,(13,3)).
shortest_path((13,2),(13,4),30,(13,3)).
shortest_path((13,2),(5,4),240,(13,3)).
shortest_path((13,2),(21,4),180,(13,3)).
shortest_path((13,2),(24,1),240,(13,3)).
shortest_path((13,2),(21,1),255,(13,3)).
shortest_path((13,2),(23,1),225,(13,3)).
shortest_path((13,2),(25,1),255,(13,3)).
shortest_path((14,2),(16,1),45,(14,1)).
shortest_path((14,2),(19,1),90,(15,2)).
shortest_path((14,2),(10,1),165,(15,2)).
shortest_path((14,2),(22,1),225,(15,2)).
shortest_path((14,2),(13,1),90,(15,2)).
shortest_path((14,2),(3,1),360,(15,2)).
shortest_path((14,2),(14,4),90,(15,2)).
shortest_path((14,2),(13,4),75,(15,2)).
shortest_path((14,2),(5,4),285,(15,2)).
shortest_path((14,2),(21,4),165,(15,2)).
shortest_path((14,2),(24,1),225,(15,2)).
shortest_path((14,2),(21,1),240,(15,2)).
shortest_path((14,2),(23,1),210,(15,2)).
shortest_path((14,2),(25,1),240,(15,2)).
shortest_path((19,2),(16,1),120,(18,2)).
shortest_path((19,2),(19,1),15,(19,1)).
shortest_path((19,2),(10,1),210,(18,2)).
shortest_path((19,2),(22,1),270,(18,2)).
shortest_path((19,2),(13,1),135,(18,2)).
shortest_path((19,2),(3,1),405,(18,2)).
shortest_path((19,2),(14,4),135,(18,2)).
shortest_path((19,2),(13,4),120,(18,2)).
shortest_path((19,2),(5,4),330,(18,2)).
shortest_path((19,2),(21,4),210,(18,2)).
shortest_path((19,2),(24,1),270,(18,2)).
shortest_path((19,2),(21,1),285,(18,2)).
shortest_path((19,2),(23,1),255,(18,2)).
shortest_path((19,2),(25,1),285,(18,2)).
shortest_path((23,2),(16,1),240,(22,2)).
shortest_path((23,2),(19,1),255,(22,2)).
shortest_path((23,2),(10,1),300,(22,2)).
shortest_path((23,2),(22,1),30,(23,1)).
shortest_path((23,2),(13,1),225,(22,2)).
shortest_path((23,2),(3,1),495,(22,2)).
shortest_path((23,2),(14,4),225,(22,2)).
shortest_path((23,2),(13,4),210,(22,2)).
shortest_path((23,2),(5,4),420,(22,2)).
shortest_path((23,2),(21,4),60,(22,2)).
shortest_path((23,2),(24,1),30,(24,2)).
shortest_path((23,2),(21,1),45,(23,1)).
shortest_path((23,2),(23,1),15,(23,1)).
shortest_path((23,2),(25,1),45,(24,2)).
shortest_path((24,2),(16,1),255,(23,2)).
shortest_path((24,2),(19,1),270,(23,2)).
shortest_path((24,2),(10,1),315,(23,2)).
shortest_path((24,2),(22,1),45,(23,2)).
shortest_path((24,2),(13,1),240,(23,2)).
shortest_path((24,2),(3,1),510,(23,2)).
shortest_path((24,2),(14,4),240,(23,2)).
shortest_path((24,2),(13,4),225,(23,2)).
shortest_path((24,2),(5,4),435,(23,2)).
shortest_path((24,2),(21,4),75,(23,2)).
shortest_path((24,2),(24,1),15,(24,1)).
shortest_path((24,2),(21,1),60,(23,2)).
shortest_path((24,2),(23,1),30,(23,2)).
shortest_path((24,2),(25,1),30,(25,2)).
shortest_path((25,2),(16,1),270,(24,2)).
shortest_path((25,2),(19,1),285,(24,2)).
shortest_path((25,2),(10,1),330,(24,2)).
shortest_path((25,2),(22,1),60,(24,2)).
shortest_path((25,2),(13,1),255,(24,2)).
shortest_path((25,2),(3,1),525,(24,2)).
shortest_path((25,2),(14,4),255,(24,2)).
shortest_path((25,2),(13,4),240,(24,2)).
shortest_path((25,2),(5,4),450,(24,2)).
shortest_path((25,2),(21,4),90,(24,2)).
shortest_path((25,2),(24,1),30,(24,2)).
shortest_path((25,2),(21,1),75,(24,2)).
shortest_path((25,2),(23,1),45,(24,2)).
shortest_path((25,2),(25,1),15,(25,1)).
shortest_path((28,2),(16,1),345,(28,1)).
shortest_path((28,2),(19,1),360,(28,1)).
shortest_path((28,2),(10,1),405,(28,1)).
shortest_path((28,2),(22,1),135,(28,1)).
shortest_path((28,2),(13,1),330,(28,1)).
shortest_path((28,2),(3,1),600,(28,1)).
shortest_path((28,2),(14,4),330,(28,1)).
shortest_path((28,2),(13,4),315,(28,1)).
shortest_path((28,2),(5,4),525,(28,1)).
shortest_path((28,2),(21,4),165,(28,1)).
shortest_path((28,2),(24,1),105,(28,1)).
shortest_path((28,2),(21,1),150,(28,1)).
shortest_path((28,2),(23,1),120,(28,1)).
shortest_path((28,2),(25,1),60,(28,1)).
shortest_path((29,2),(16,1),660,(29,1)).
shortest_path((29,2),(19,1),675,(29,1)).
shortest_path((29,2),(10,1),720,(29,1)).
shortest_path((29,2),(22,1),450,(29,1)).
shortest_path((29,2),(13,1),645,(29,1)).
shortest_path((29,2),(3,1),915,(29,1)).
shortest_path((29,2),(14,4),645,(29,1)).
shortest_path((29,2),(13,4),630,(29,1)).
shortest_path((29,2),(5,4),840,(29,1)).
shortest_path((29,2),(21,4),480,(29,1)).
shortest_path((29,2),(24,1),420,(29,1)).
shortest_path((29,2),(21,1),465,(29,1)).
shortest_path((29,2),(23,1),435,(29,1)).
shortest_path((29,2),(25,1),375,(29,1)).
shortest_path((32,2),(16,1),615,(32,1)).
shortest_path((32,2),(19,1),630,(32,1)).
shortest_path((32,2),(10,1),675,(32,1)).
shortest_path((32,2),(22,1),405,(32,1)).
shortest_path((32,2),(13,1),600,(32,1)).
shortest_path((32,2),(3,1),870,(32,1)).
shortest_path((32,2),(14,4),600,(32,1)).
shortest_path((32,2),(13,4),585,(32,1)).
shortest_path((32,2),(5,4),795,(32,1)).
shortest_path((32,2),(21,4),435,(32,1)).
shortest_path((32,2),(24,1),375,(32,1)).
shortest_path((32,2),(21,1),420,(32,1)).
shortest_path((32,2),(23,1),390,(32,1)).
shortest_path((32,2),(25,1),330,(32,1)).
shortest_path((34,2),(16,1),555,(34,3)).
shortest_path((34,2),(19,1),570,(34,3)).
shortest_path((34,2),(10,1),615,(34,3)).
shortest_path((34,2),(22,1),345,(34,3)).
shortest_path((34,2),(13,1),540,(34,3)).
shortest_path((34,2),(3,1),810,(34,3)).
shortest_path((34,2),(14,4),540,(34,3)).
shortest_path((34,2),(13,4),525,(34,3)).
shortest_path((34,2),(5,4),735,(34,3)).
shortest_path((34,2),(21,4),375,(34,3)).
shortest_path((34,2),(24,1),315,(34,3)).
shortest_path((34,2),(21,1),360,(34,3)).
shortest_path((34,2),(23,1),330,(34,3)).
shortest_path((34,2),(25,1),270,(34,3)).
shortest_path((35,2),(16,1),570,(34,2)).
shortest_path((35,2),(19,1),585,(34,2)).
shortest_path((35,2),(10,1),630,(34,2)).
shortest_path((35,2),(22,1),360,(34,2)).
shortest_path((35,2),(13,1),555,(34,2)).
shortest_path((35,2),(3,1),825,(34,2)).
shortest_path((35,2),(14,4),555,(34,2)).
shortest_path((35,2),(13,4),540,(34,2)).
shortest_path((35,2),(5,4),750,(34,2)).
shortest_path((35,2),(21,4),390,(34,2)).
shortest_path((35,2),(24,1),330,(34,2)).
shortest_path((35,2),(21,1),375,(34,2)).
shortest_path((35,2),(23,1),345,(34,2)).
shortest_path((35,2),(25,1),285,(34,2)).
shortest_path((38,2),(16,1),645,(38,1)).
shortest_path((38,2),(19,1),660,(38,1)).
shortest_path((38,2),(10,1),705,(38,1)).
shortest_path((38,2),(22,1),435,(38,1)).
shortest_path((38,2),(13,1),630,(38,1)).
shortest_path((38,2),(3,1),900,(38,1)).
shortest_path((38,2),(14,4),630,(38,1)).
shortest_path((38,2),(13,4),615,(38,1)).
shortest_path((38,2),(5,4),825,(38,1)).
shortest_path((38,2),(21,4),465,(38,1)).
shortest_path((38,2),(24,1),405,(38,1)).
shortest_path((38,2),(21,1),450,(38,1)).
shortest_path((38,2),(23,1),420,(38,1)).
shortest_path((38,2),(25,1),360,(38,1)).
shortest_path((40,2),(16,1),675,(40,1)).
shortest_path((40,2),(19,1),690,(40,1)).
shortest_path((40,2),(10,1),735,(40,1)).
shortest_path((40,2),(22,1),465,(40,1)).
shortest_path((40,2),(13,1),660,(40,1)).
shortest_path((40,2),(3,1),930,(40,1)).
shortest_path((40,2),(14,4),660,(40,1)).
shortest_path((40,2),(13,4),645,(40,1)).
shortest_path((40,2),(5,4),855,(40,1)).
shortest_path((40,2),(21,4),495,(40,1)).
shortest_path((40,2),(24,1),435,(40,1)).
shortest_path((40,2),(21,1),480,(40,1)).
shortest_path((40,2),(23,1),450,(40,1)).
shortest_path((40,2),(25,1),390,(40,1)).
shortest_path((6,2),(16,1),285,(7,2)).
shortest_path((6,2),(19,1),300,(7,2)).
shortest_path((6,2),(10,1),75,(7,2)).
shortest_path((6,2),(22,1),405,(7,2)).
shortest_path((6,2),(13,1),210,(7,2)).
shortest_path((6,2),(3,1),120,(6,3)).
shortest_path((6,2),(14,4),180,(7,2)).
shortest_path((6,2),(13,4),165,(7,2)).
shortest_path((6,2),(5,4),45,(6,3)).
shortest_path((6,2),(21,4),345,(7,2)).
shortest_path((6,2),(24,1),405,(7,2)).
shortest_path((6,2),(21,1),420,(7,2)).
shortest_path((6,2),(23,1),390,(7,2)).
shortest_path((6,2),(25,1),420,(7,2)).
shortest_path((7,2),(16,1),270,(8,2)).
shortest_path((7,2),(19,1),285,(8,2)).
shortest_path((7,2),(10,1),60,(8,2)).
shortest_path((7,2),(22,1),390,(8,2)).
shortest_path((7,2),(13,1),195,(8,2)).
shortest_path((7,2),(3,1),135,(6,2)).
shortest_path((7,2),(14,4),165,(8,2)).
shortest_path((7,2),(13,4),150,(8,2)).
shortest_path((7,2),(5,4),60,(6,2)).
shortest_path((7,2),(21,4),330,(8,2)).
shortest_path((7,2),(24,1),390,(8,2)).
shortest_path((7,2),(21,1),405,(8,2)).
shortest_path((7,2),(23,1),375,(8,2)).
shortest_path((7,2),(25,1),405,(8,2)).
shortest_path((8,2),(16,1),255,(9,2)).
shortest_path((8,2),(19,1),270,(9,2)).
shortest_path((8,2),(10,1),45,(9,2)).
shortest_path((8,2),(22,1),375,(9,2)).
shortest_path((8,2),(13,1),180,(9,2)).
shortest_path((8,2),(3,1),150,(7,2)).
shortest_path((8,2),(14,4),150,(9,2)).
shortest_path((8,2),(13,4),135,(9,2)).
shortest_path((8,2),(5,4),75,(7,2)).
shortest_path((8,2),(21,4),315,(9,2)).
shortest_path((8,2),(24,1),375,(9,2)).
shortest_path((8,2),(21,1),390,(9,2)).
shortest_path((8,2),(23,1),360,(9,2)).
shortest_path((8,2),(25,1),390,(9,2)).
shortest_path((11,2),(16,1),180,(11,3)).
shortest_path((11,2),(19,1),195,(11,3)).
shortest_path((11,2),(10,1),30,(10,2)).
shortest_path((11,2),(22,1),300,(11,3)).
shortest_path((11,2),(13,1),105,(11,3)).
shortest_path((11,2),(3,1),225,(10,2)).
shortest_path((11,2),(14,4),75,(11,3)).
shortest_path((11,2),(13,4),60,(11,3)).
shortest_path((11,2),(5,4),150,(10,2)).
shortest_path((11,2),(21,4),240,(11,3)).
shortest_path((11,2),(24,1),300,(11,3)).
shortest_path((11,2),(21,1),315,(11,3)).
shortest_path((11,2),(23,1),285,(11,3)).
shortest_path((11,2),(25,1),315,(11,3)).
shortest_path((15,2),(16,1),60,(14,2)).
shortest_path((15,2),(19,1),75,(16,2)).
shortest_path((15,2),(10,1),150,(15,3)).
shortest_path((15,2),(22,1),210,(15,3)).
shortest_path((15,2),(13,1),75,(15,3)).
shortest_path((15,2),(3,1),345,(15,3)).
shortest_path((15,2),(14,4),75,(15,3)).
shortest_path((15,2),(13,4),60,(15,3)).
shortest_path((15,2),(5,4),270,(15,3)).
shortest_path((15,2),(21,4),150,(15,3)).
shortest_path((15,2),(24,1),210,(15,3)).
shortest_path((15,2),(21,1),225,(15,3)).
shortest_path((15,2),(23,1),195,(15,3)).
shortest_path((15,2),(25,1),225,(15,3)).
shortest_path((16,2),(16,1),75,(15,2)).
shortest_path((16,2),(19,1),60,(17,2)).
shortest_path((16,2),(10,1),165,(15,2)).
shortest_path((16,2),(22,1),225,(15,2)).
shortest_path((16,2),(13,1),90,(15,2)).
shortest_path((16,2),(3,1),360,(15,2)).
shortest_path((16,2),(14,4),90,(15,2)).
shortest_path((16,2),(13,4),75,(15,2)).
shortest_path((16,2),(5,4),285,(15,2)).
shortest_path((16,2),(21,4),165,(15,2)).
shortest_path((16,2),(24,1),225,(15,2)).
shortest_path((16,2),(21,1),240,(15,2)).
shortest_path((16,2),(23,1),210,(15,2)).
shortest_path((16,2),(25,1),240,(15,2)).
shortest_path((17,2),(16,1),90,(16,2)).
shortest_path((17,2),(19,1),45,(18,2)).
shortest_path((17,2),(10,1),180,(16,2)).
shortest_path((17,2),(22,1),240,(16,2)).
shortest_path((17,2),(13,1),105,(16,2)).
shortest_path((17,2),(3,1),375,(16,2)).
shortest_path((17,2),(14,4),105,(16,2)).
shortest_path((17,2),(13,4),90,(16,2)).
shortest_path((17,2),(5,4),300,(16,2)).
shortest_path((17,2),(21,4),180,(16,2)).
shortest_path((17,2),(24,1),240,(16,2)).
shortest_path((17,2),(21,1),255,(16,2)).
shortest_path((17,2),(23,1),225,(16,2)).
shortest_path((17,2),(25,1),255,(16,2)).
shortest_path((18,2),(16,1),105,(17,2)).
shortest_path((18,2),(19,1),30,(19,2)).
shortest_path((18,2),(10,1),195,(17,2)).
shortest_path((18,2),(22,1),255,(17,2)).
shortest_path((18,2),(13,1),120,(17,2)).
shortest_path((18,2),(3,1),390,(17,2)).
shortest_path((18,2),(14,4),120,(17,2)).
shortest_path((18,2),(13,4),105,(17,2)).
shortest_path((18,2),(5,4),315,(17,2)).
shortest_path((18,2),(21,4),195,(17,2)).
shortest_path((18,2),(24,1),255,(17,2)).
shortest_path((18,2),(21,1),270,(17,2)).
shortest_path((18,2),(23,1),240,(17,2)).
shortest_path((18,2),(25,1),270,(17,2)).
shortest_path((22,2),(16,1),225,(22,3)).
shortest_path((22,2),(19,1),240,(22,3)).
shortest_path((22,2),(10,1),285,(22,3)).
shortest_path((22,2),(22,1),45,(23,2)).
shortest_path((22,2),(13,1),210,(22,3)).
shortest_path((22,2),(3,1),480,(22,3)).
shortest_path((22,2),(14,4),210,(22,3)).
shortest_path((22,2),(13,4),195,(22,3)).
shortest_path((22,2),(5,4),405,(22,3)).
shortest_path((22,2),(21,4),45,(22,3)).
shortest_path((22,2),(24,1),45,(23,2)).
shortest_path((22,2),(21,1),60,(23,2)).
shortest_path((22,2),(23,1),30,(23,2)).
shortest_path((22,2),(25,1),60,(23,2)).
shortest_path((30,2),(16,1),435,(30,3)).
shortest_path((30,2),(19,1),450,(30,3)).
shortest_path((30,2),(10,1),495,(30,3)).
shortest_path((30,2),(22,1),225,(30,3)).
shortest_path((30,2),(13,1),420,(30,3)).
shortest_path((30,2),(3,1),690,(30,3)).
shortest_path((30,2),(14,4),420,(30,3)).
shortest_path((30,2),(13,4),405,(30,3)).
shortest_path((30,2),(5,4),615,(30,3)).
shortest_path((30,2),(21,4),255,(30,3)).
shortest_path((30,2),(24,1),195,(30,3)).
shortest_path((30,2),(21,1),240,(30,3)).
shortest_path((30,2),(23,1),210,(30,3)).
shortest_path((30,2),(25,1),150,(30,3)).
shortest_path((31,2),(16,1),450,(30,2)).
shortest_path((31,2),(19,1),465,(30,2)).
shortest_path((31,2),(10,1),510,(30,2)).
shortest_path((31,2),(22,1),240,(30,2)).
shortest_path((31,2),(13,1),435,(30,2)).
shortest_path((31,2),(3,1),705,(30,2)).
shortest_path((31,2),(14,4),435,(30,2)).
shortest_path((31,2),(13,4),420,(30,2)).
shortest_path((31,2),(5,4),630,(30,2)).
shortest_path((31,2),(21,4),270,(30,2)).
shortest_path((31,2),(24,1),210,(30,2)).
shortest_path((31,2),(21,1),255,(30,2)).
shortest_path((31,2),(23,1),225,(30,2)).
shortest_path((31,2),(25,1),165,(30,2)).
shortest_path((37,2),(16,1),660,(38,2)).
shortest_path((37,2),(19,1),675,(38,2)).
shortest_path((37,2),(10,1),720,(38,2)).
shortest_path((37,2),(22,1),450,(38,2)).
shortest_path((37,2),(13,1),645,(38,2)).
shortest_path((37,2),(3,1),915,(38,2)).
shortest_path((37,2),(14,4),645,(38,2)).
shortest_path((37,2),(13,4),630,(38,2)).
shortest_path((37,2),(5,4),840,(38,2)).
shortest_path((37,2),(21,4),480,(38,2)).
shortest_path((37,2),(24,1),420,(38,2)).
shortest_path((37,2),(21,1),465,(38,2)).
shortest_path((37,2),(23,1),435,(38,2)).
shortest_path((37,2),(25,1),375,(38,2)).
shortest_path((39,2),(16,1),690,(40,2)).
shortest_path((39,2),(19,1),705,(40,2)).
shortest_path((39,2),(10,1),750,(40,2)).
shortest_path((39,2),(22,1),480,(40,2)).
shortest_path((39,2),(13,1),675,(40,2)).
shortest_path((39,2),(3,1),945,(40,2)).
shortest_path((39,2),(14,4),675,(40,2)).
shortest_path((39,2),(13,4),660,(40,2)).
shortest_path((39,2),(5,4),870,(40,2)).
shortest_path((39,2),(21,4),510,(40,2)).
shortest_path((39,2),(24,1),450,(40,2)).
shortest_path((39,2),(21,1),495,(40,2)).
shortest_path((39,2),(23,1),465,(40,2)).
shortest_path((39,2),(25,1),405,(40,2)).
shortest_path((1,3),(16,1),465,(1,2)).
shortest_path((1,3),(19,1),480,(1,2)).
shortest_path((1,3),(10,1),255,(1,2)).
shortest_path((1,3),(22,1),585,(1,2)).
shortest_path((1,3),(13,1),390,(1,2)).
shortest_path((1,3),(3,1),60,(1,2)).
shortest_path((1,3),(14,4),360,(1,2)).
shortest_path((1,3),(13,4),345,(1,2)).
shortest_path((1,3),(5,4),135,(1,2)).
shortest_path((1,3),(21,4),525,(1,2)).
shortest_path((1,3),(24,1),585,(1,2)).
shortest_path((1,3),(21,1),600,(1,2)).
shortest_path((1,3),(23,1),570,(1,2)).
shortest_path((1,3),(25,1),600,(1,2)).
shortest_path((3,3),(16,1),375,(3,4)).
shortest_path((3,3),(19,1),390,(3,4)).
shortest_path((3,3),(10,1),165,(3,4)).
shortest_path((3,3),(22,1),495,(3,4)).
shortest_path((3,3),(13,1),300,(3,4)).
shortest_path((3,3),(3,1),30,(3,2)).
shortest_path((3,3),(14,4),270,(3,4)).
shortest_path((3,3),(13,4),255,(3,4)).
shortest_path((3,3),(5,4),45,(3,4)).
shortest_path((3,3),(21,4),435,(3,4)).
shortest_path((3,3),(24,1),495,(3,4)).
shortest_path((3,3),(21,1),510,(3,4)).
shortest_path((3,3),(23,1),480,(3,4)).
shortest_path((3,3),(25,1),510,(3,4)).
shortest_path((6,3),(16,1),300,(6,2)).
shortest_path((6,3),(19,1),315,(6,2)).
shortest_path((6,3),(10,1),90,(6,2)).
shortest_path((6,3),(22,1),420,(6,2)).
shortest_path((6,3),(13,1),225,(6,2)).
shortest_path((6,3),(3,1),105,(6,4)).
shortest_path((6,3),(14,4),195,(6,2)).
shortest_path((6,3),(13,4),180,(6,2)).
shortest_path((6,3),(5,4),30,(6,4)).
shortest_path((6,3),(21,4),360,(6,2)).
shortest_path((6,3),(24,1),420,(6,2)).
shortest_path((6,3),(21,1),435,(6,2)).
shortest_path((6,3),(23,1),405,(6,2)).
shortest_path((6,3),(25,1),435,(6,2)).
shortest_path((9,3),(16,1),255,(9,2)).
shortest_path((9,3),(19,1),270,(9,2)).
shortest_path((9,3),(10,1),45,(9,2)).
shortest_path((9,3),(22,1),375,(9,2)).
shortest_path((9,3),(13,1),180,(9,2)).
shortest_path((9,3),(3,1),180,(9,2)).
shortest_path((9,3),(14,4),150,(9,2)).
shortest_path((9,3),(13,4),135,(9,2)).
shortest_path((9,3),(5,4),105,(9,2)).
shortest_path((9,3),(21,4),315,(9,2)).
shortest_path((9,3),(24,1),375,(9,2)).
shortest_path((9,3),(21,1),390,(9,2)).
shortest_path((9,3),(23,1),360,(9,2)).
shortest_path((9,3),(25,1),390,(9,2)).
shortest_path((11,3),(16,1),165,(12,3)).
shortest_path((11,3),(19,1),180,(12,3)).
shortest_path((11,3),(10,1),45,(11,2)).
shortest_path((11,3),(22,1),285,(12,3)).
shortest_path((11,3),(13,1),90,(12,3)).
shortest_path((11,3),(3,1),240,(11,2)).
shortest_path((11,3),(14,4),60,(12,3)).
shortest_path((11,3),(13,4),45,(12,3)).
shortest_path((11,3),(5,4),165,(11,2)).
shortest_path((11,3),(21,4),225,(12,3)).
shortest_path((11,3),(24,1),285,(12,3)).
shortest_path((11,3),(21,1),300,(12,3)).
shortest_path((11,3),(23,1),270,(12,3)).
shortest_path((11,3),(25,1),300,(12,3)).
shortest_path((13,3),(16,1),105,(14,3)).
shortest_path((13,3),(19,1),120,(14,3)).
shortest_path((13,3),(10,1),105,(13,4)).
shortest_path((13,3),(22,1),225,(14,3)).
shortest_path((13,3),(13,1),30,(13,2)).
shortest_path((13,3),(3,1),300,(13,4)).
shortest_path((13,3),(14,4),30,(13,4)).
shortest_path((13,3),(13,4),15,(13,4)).
shortest_path((13,3),(5,4),225,(13,4)).
shortest_path((13,3),(21,4),165,(14,3)).
shortest_path((13,3),(24,1),225,(14,3)).
shortest_path((13,3),(21,1),240,(14,3)).
shortest_path((13,3),(23,1),210,(14,3)).
shortest_path((13,3),(25,1),240,(14,3)).
shortest_path((15,3),(16,1),75,(15,2)).
shortest_path((15,3),(19,1),90,(15,2)).
shortest_path((15,3),(10,1),135,(14,3)).
shortest_path((15,3),(22,1),195,(15,4)).
shortest_path((15,3),(13,1),60,(14,3)).
shortest_path((15,3),(3,1),330,(14,3)).
shortest_path((15,3),(14,4),60,(14,3)).
shortest_path((15,3),(13,4),45,(14,3)).
shortest_path((15,3),(5,4),255,(14,3)).
shortest_path((15,3),(21,4),135,(15,4)).
shortest_path((15,3),(24,1),195,(15,4)).
shortest_path((15,3),(21,1),210,(15,4)).
shortest_path((15,3),(23,1),180,(15,4)).
shortest_path((15,3),(25,1),210,(15,4)).
shortest_path((22,3),(16,1),210,(21,3)).
shortest_path((22,3),(19,1),225,(21,3)).
shortest_path((22,3),(10,1),270,(21,3)).
shortest_path((22,3),(22,1),60,(22,2)).
shortest_path((22,3),(13,1),195,(21,3)).
shortest_path((22,3),(3,1),465,(21,3)).
shortest_path((22,3),(14,4),195,(21,3)).
shortest_path((22,3),(13,4),180,(21,3)).
shortest_path((22,3),(5,4),390,(21,3)).
shortest_path((22,3),(21,4),30,(21,3)).
shortest_path((22,3),(24,1),60,(22,2)).
shortest_path((22,3),(21,1),75,(22,2)).
shortest_path((22,3),(23,1),45,(22,2)).
shortest_path((22,3),(25,1),75,(22,2)).
shortest_path((28,3),(16,1),360,(28,2)).
shortest_path((28,3),(19,1),375,(28,2)).
shortest_path((28,3),(10,1),420,(28,2)).
shortest_path((28,3),(22,1),150,(28,2)).
shortest_path((28,3),(13,1),345,(28,2)).
shortest_path((28,3),(3,1),615,(28,2)).
shortest_path((28,3),(14,4),345,(28,2)).
shortest_path((28,3),(13,4),330,(28,2)).
shortest_path((28,3),(5,4),540,(28,2)).
shortest_path((28,3),(21,4),180,(28,2)).
shortest_path((28,3),(24,1),120,(28,2)).
shortest_path((28,3),(21,1),165,(28,2)).
shortest_path((28,3),(23,1),135,(28,2)).
shortest_path((28,3),(25,1),75,(28,2)).
shortest_path((30,3),(16,1),420,(29,3)).
shortest_path((30,3),(19,1),435,(29,3)).
shortest_path((30,3),(10,1),480,(29,3)).
shortest_path((30,3),(22,1),210,(29,3)).
shortest_path((30,3),(13,1),405,(29,3)).
shortest_path((30,3),(3,1),675,(29,3)).
shortest_path((30,3),(14,4),405,(29,3)).
shortest_path((30,3),(13,4),390,(29,3)).
shortest_path((30,3),(5,4),600,(29,3)).
shortest_path((30,3),(21,4),240,(29,3)).
shortest_path((30,3),(24,1),180,(29,3)).
shortest_path((30,3),(21,1),225,(29,3)).
shortest_path((30,3),(23,1),195,(29,3)).
shortest_path((30,3),(25,1),135,(29,3)).
shortest_path((31,3),(16,1),465,(31,2)).
shortest_path((31,3),(19,1),480,(31,2)).
shortest_path((31,3),(10,1),525,(31,2)).
shortest_path((31,3),(22,1),255,(31,2)).
shortest_path((31,3),(13,1),450,(31,2)).
shortest_path((31,3),(3,1),720,(31,2)).
shortest_path((31,3),(14,4),450,(31,2)).
shortest_path((31,3),(13,4),435,(31,2)).
shortest_path((31,3),(5,4),645,(31,2)).
shortest_path((31,3),(21,4),285,(31,2)).
shortest_path((31,3),(24,1),225,(31,2)).
shortest_path((31,3),(21,1),270,(31,2)).
shortest_path((31,3),(23,1),240,(31,2)).
shortest_path((31,3),(25,1),180,(31,2)).
shortest_path((34,3),(16,1),540,(33,3)).
shortest_path((34,3),(19,1),555,(33,3)).
shortest_path((34,3),(10,1),600,(33,3)).
shortest_path((34,3),(22,1),330,(33,3)).
shortest_path((34,3),(13,1),525,(33,3)).
shortest_path((34,3),(3,1),795,(33,3)).
shortest_path((34,3),(14,4),525,(33,3)).
shortest_path((34,3),(13,4),510,(33,3)).
shortest_path((34,3),(5,4),720,(33,3)).
shortest_path((34,3),(21,4),360,(33,3)).
shortest_path((34,3),(24,1),300,(33,3)).
shortest_path((34,3),(21,1),345,(33,3)).
shortest_path((34,3),(23,1),315,(33,3)).
shortest_path((34,3),(25,1),255,(33,3)).
shortest_path((39,3),(16,1),705,(39,2)).
shortest_path((39,3),(19,1),720,(39,2)).
shortest_path((39,3),(10,1),765,(39,2)).
shortest_path((39,3),(22,1),495,(39,2)).
shortest_path((39,3),(13,1),690,(39,2)).
shortest_path((39,3),(3,1),960,(39,2)).
shortest_path((39,3),(14,4),690,(39,2)).
shortest_path((39,3),(13,4),675,(39,2)).
shortest_path((39,3),(5,4),885,(39,2)).
shortest_path((39,3),(21,4),525,(39,2)).
shortest_path((39,3),(24,1),465,(39,2)).
shortest_path((39,3),(21,1),510,(39,2)).
shortest_path((39,3),(23,1),480,(39,2)).
shortest_path((39,3),(25,1),420,(39,2)).
shortest_path((12,3),(16,1),150,(12,4)).
shortest_path((12,3),(19,1),165,(12,4)).
shortest_path((12,3),(10,1),60,(11,3)).
shortest_path((12,3),(22,1),270,(12,4)).
shortest_path((12,3),(13,1),75,(12,4)).
shortest_path((12,3),(3,1),255,(11,3)).
shortest_path((12,3),(14,4),45,(12,4)).
shortest_path((12,3),(13,4),30,(12,4)).
shortest_path((12,3),(5,4),180,(11,3)).
shortest_path((12,3),(21,4),210,(12,4)).
shortest_path((12,3),(24,1),270,(12,4)).
shortest_path((12,3),(21,1),285,(12,4)).
shortest_path((12,3),(23,1),255,(12,4)).
shortest_path((12,3),(25,1),285,(12,4)).
shortest_path((14,3),(16,1),90,(15,3)).
shortest_path((14,3),(19,1),105,(15,3)).
shortest_path((14,3),(10,1),120,(13,3)).
shortest_path((14,3),(22,1),210,(15,3)).
shortest_path((14,3),(13,1),45,(13,3)).
shortest_path((14,3),(3,1),315,(13,3)).
shortest_path((14,3),(14,4),45,(13,3)).
shortest_path((14,3),(13,4),30,(13,3)).
shortest_path((14,3),(5,4),240,(13,3)).
shortest_path((14,3),(21,4),150,(15,3)).
shortest_path((14,3),(24,1),210,(15,3)).
shortest_path((14,3),(21,1),225,(15,3)).
shortest_path((14,3),(23,1),195,(15,3)).
shortest_path((14,3),(25,1),225,(15,3)).
shortest_path((17,3),(16,1),165,(18,3)).
shortest_path((17,3),(19,1),180,(18,3)).
shortest_path((17,3),(10,1),225,(18,3)).
shortest_path((17,3),(22,1),135,(18,3)).
shortest_path((17,3),(13,1),150,(18,3)).
shortest_path((17,3),(3,1),420,(18,3)).
shortest_path((17,3),(14,4),150,(18,3)).
shortest_path((17,3),(13,4),135,(18,3)).
shortest_path((17,3),(5,4),345,(18,3)).
shortest_path((17,3),(21,4),75,(18,3)).
shortest_path((17,3),(24,1),135,(18,3)).
shortest_path((17,3),(21,1),150,(18,3)).
shortest_path((17,3),(23,1),120,(18,3)).
shortest_path((17,3),(25,1),150,(18,3)).
shortest_path((18,3),(16,1),150,(18,4)).
shortest_path((18,3),(19,1),165,(18,4)).
shortest_path((18,3),(10,1),210,(18,4)).
shortest_path((18,3),(22,1),120,(19,3)).
shortest_path((18,3),(13,1),135,(18,4)).
shortest_path((18,3),(3,1),405,(18,4)).
shortest_path((18,3),(14,4),135,(18,4)).
shortest_path((18,3),(13,4),120,(18,4)).
shortest_path((18,3),(5,4),330,(18,4)).
shortest_path((18,3),(21,4),60,(19,3)).
shortest_path((18,3),(24,1),120,(19,3)).
shortest_path((18,3),(21,1),135,(19,3)).
shortest_path((18,3),(23,1),105,(19,3)).
shortest_path((18,3),(25,1),135,(19,3)).
shortest_path((19,3),(16,1),165,(18,3)).
shortest_path((19,3),(19,1),180,(18,3)).
shortest_path((19,3),(10,1),225,(18,3)).
shortest_path((19,3),(22,1),105,(20,3)).
shortest_path((19,3),(13,1),150,(18,3)).
shortest_path((19,3),(3,1),420,(18,3)).
shortest_path((19,3),(14,4),150,(18,3)).
shortest_path((19,3),(13,4),135,(18,3)).
shortest_path((19,3),(5,4),345,(18,3)).
shortest_path((19,3),(21,4),45,(20,3)).
shortest_path((19,3),(24,1),105,(20,3)).
shortest_path((19,3),(21,1),120,(20,3)).
shortest_path((19,3),(23,1),90,(20,3)).
shortest_path((19,3),(25,1),120,(20,3)).
shortest_path((20,3),(16,1),180,(19,3)).
shortest_path((20,3),(19,1),195,(19,3)).
shortest_path((20,3),(10,1),240,(19,3)).
shortest_path((20,3),(22,1),90,(21,3)).
shortest_path((20,3),(13,1),165,(19,3)).
shortest_path((20,3),(3,1),435,(19,3)).
shortest_path((20,3),(14,4),165,(19,3)).
shortest_path((20,3),(13,4),150,(19,3)).
shortest_path((20,3),(5,4),360,(19,3)).
shortest_path((20,3),(21,4),30,(21,3)).
shortest_path((20,3),(24,1),90,(21,3)).
shortest_path((20,3),(21,1),105,(21,3)).
shortest_path((20,3),(23,1),75,(21,3)).
shortest_path((20,3),(25,1),105,(21,3)).
shortest_path((21,3),(16,1),195,(20,3)).
shortest_path((21,3),(19,1),210,(20,3)).
shortest_path((21,3),(10,1),255,(20,3)).
shortest_path((21,3),(22,1),75,(22,3)).
shortest_path((21,3),(13,1),180,(20,3)).
shortest_path((21,3),(3,1),450,(20,3)).
shortest_path((21,3),(14,4),180,(20,3)).
shortest_path((21,3),(13,4),165,(20,3)).
shortest_path((21,3),(5,4),375,(20,3)).
shortest_path((21,3),(21,4),15,(21,4)).
shortest_path((21,3),(24,1),75,(22,3)).
shortest_path((21,3),(21,1),90,(22,3)).
shortest_path((21,3),(23,1),60,(22,3)).
shortest_path((21,3),(25,1),90,(22,3)).
shortest_path((23,3),(16,1),225,(22,3)).
shortest_path((23,3),(19,1),240,(22,3)).
shortest_path((23,3),(10,1),285,(22,3)).
shortest_path((23,3),(22,1),75,(22,3)).
shortest_path((23,3),(13,1),210,(22,3)).
shortest_path((23,3),(3,1),480,(22,3)).
shortest_path((23,3),(14,4),210,(22,3)).
shortest_path((23,3),(13,4),195,(22,3)).
shortest_path((23,3),(5,4),405,(22,3)).
shortest_path((23,3),(21,4),45,(22,3)).
shortest_path((23,3),(24,1),75,(22,3)).
shortest_path((23,3),(21,1),90,(22,3)).
shortest_path((23,3),(23,1),60,(22,3)).
shortest_path((23,3),(25,1),90,(22,3)).
shortest_path((29,3),(16,1),405,(29,4)).
shortest_path((29,3),(19,1),420,(29,4)).
shortest_path((29,3),(10,1),465,(29,4)).
shortest_path((29,3),(22,1),195,(29,4)).
shortest_path((29,3),(13,1),390,(29,4)).
shortest_path((29,3),(3,1),660,(29,4)).
shortest_path((29,3),(14,4),390,(29,4)).
shortest_path((29,3),(13,4),375,(29,4)).
shortest_path((29,3),(5,4),585,(29,4)).
shortest_path((29,3),(21,4),225,(29,4)).
shortest_path((29,3),(24,1),165,(29,4)).
shortest_path((29,3),(21,1),210,(29,4)).
shortest_path((29,3),(23,1),180,(29,4)).
shortest_path((29,3),(25,1),120,(29,4)).
shortest_path((32,3),(16,1),480,(31,3)).
shortest_path((32,3),(19,1),495,(31,3)).
shortest_path((32,3),(10,1),540,(31,3)).
shortest_path((32,3),(22,1),270,(31,3)).
shortest_path((32,3),(13,1),465,(31,3)).
shortest_path((32,3),(3,1),735,(31,3)).
shortest_path((32,3),(14,4),465,(31,3)).
shortest_path((32,3),(13,4),450,(31,3)).
shortest_path((32,3),(5,4),660,(31,3)).
shortest_path((32,3),(21,4),300,(31,3)).
shortest_path((32,3),(24,1),240,(31,3)).
shortest_path((32,3),(21,1),285,(31,3)).
shortest_path((32,3),(23,1),255,(31,3)).
shortest_path((32,3),(25,1),195,(31,3)).
shortest_path((33,3),(16,1),525,(33,4)).
shortest_path((33,3),(19,1),540,(33,4)).
shortest_path((33,3),(10,1),585,(33,4)).
shortest_path((33,3),(22,1),315,(33,4)).
shortest_path((33,3),(13,1),510,(33,4)).
shortest_path((33,3),(3,1),780,(33,4)).
shortest_path((33,3),(14,4),510,(33,4)).
shortest_path((33,3),(13,4),495,(33,4)).
shortest_path((33,3),(5,4),705,(33,4)).
shortest_path((33,3),(21,4),345,(33,4)).
shortest_path((33,3),(24,1),285,(33,4)).
shortest_path((33,3),(21,1),330,(33,4)).
shortest_path((33,3),(23,1),300,(33,4)).
shortest_path((33,3),(25,1),240,(33,4)).
shortest_path((38,3),(16,1),720,(39,3)).
shortest_path((38,3),(19,1),735,(39,3)).
shortest_path((38,3),(10,1),780,(39,3)).
shortest_path((38,3),(22,1),510,(39,3)).
shortest_path((38,3),(13,1),705,(39,3)).
shortest_path((38,3),(3,1),975,(39,3)).
shortest_path((38,3),(14,4),705,(39,3)).
shortest_path((38,3),(13,4),690,(39,3)).
shortest_path((38,3),(5,4),900,(39,3)).
shortest_path((38,3),(21,4),540,(39,3)).
shortest_path((38,3),(24,1),480,(39,3)).
shortest_path((38,3),(21,1),525,(39,3)).
shortest_path((38,3),(23,1),495,(39,3)).
shortest_path((38,3),(25,1),435,(39,3)).
shortest_path((1,4),(16,1),480,(1,3)).
shortest_path((1,4),(19,1),495,(1,3)).
shortest_path((1,4),(10,1),270,(1,3)).
shortest_path((1,4),(22,1),600,(1,3)).
shortest_path((1,4),(13,1),405,(1,3)).
shortest_path((1,4),(3,1),75,(1,3)).
shortest_path((1,4),(14,4),375,(1,3)).
shortest_path((1,4),(13,4),360,(1,3)).
shortest_path((1,4),(5,4),150,(1,3)).
shortest_path((1,4),(21,4),540,(1,3)).
shortest_path((1,4),(24,1),600,(1,3)).
shortest_path((1,4),(21,1),615,(1,3)).
shortest_path((1,4),(23,1),585,(1,3)).
shortest_path((1,4),(25,1),615,(1,3)).
shortest_path((3,4),(16,1),360,(4,4)).
shortest_path((3,4),(19,1),375,(4,4)).
shortest_path((3,4),(10,1),150,(4,4)).
shortest_path((3,4),(22,1),480,(4,4)).
shortest_path((3,4),(13,1),285,(4,4)).
shortest_path((3,4),(3,1),45,(3,3)).
shortest_path((3,4),(14,4),255,(4,4)).
shortest_path((3,4),(13,4),240,(4,4)).
shortest_path((3,4),(5,4),30,(4,4)).
shortest_path((3,4),(21,4),420,(4,4)).
shortest_path((3,4),(24,1),480,(4,4)).
shortest_path((3,4),(21,1),495,(4,4)).
shortest_path((3,4),(23,1),465,(4,4)).
shortest_path((3,4),(25,1),495,(4,4)).
shortest_path((6,4),(16,1),315,(6,3)).
shortest_path((6,4),(19,1),330,(6,3)).
shortest_path((6,4),(10,1),105,(6,3)).
shortest_path((6,4),(22,1),435,(6,3)).
shortest_path((6,4),(13,1),240,(6,3)).
shortest_path((6,4),(3,1),90,(5,4)).
shortest_path((6,4),(14,4),210,(6,3)).
shortest_path((6,4),(13,4),195,(6,3)).
shortest_path((6,4),(5,4),15,(5,4)).
shortest_path((6,4),(21,4),375,(6,3)).
shortest_path((6,4),(24,1),435,(6,3)).
shortest_path((6,4),(21,1),450,(6,3)).
shortest_path((6,4),(23,1),420,(6,3)).
shortest_path((6,4),(25,1),450,(6,3)).
shortest_path((9,4),(16,1),270,(9,3)).
shortest_path((9,4),(19,1),285,(9,3)).
shortest_path((9,4),(10,1),60,(9,3)).
shortest_path((9,4),(22,1),390,(9,3)).
shortest_path((9,4),(13,1),195,(9,3)).
shortest_path((9,4),(3,1),195,(9,3)).
shortest_path((9,4),(14,4),165,(9,3)).
shortest_path((9,4),(13,4),150,(9,3)).
shortest_path((9,4),(5,4),120,(9,3)).
shortest_path((9,4),(21,4),330,(9,3)).
shortest_path((9,4),(24,1),390,(9,3)).
shortest_path((9,4),(21,1),405,(9,3)).
shortest_path((9,4),(23,1),375,(9,3)).
shortest_path((9,4),(25,1),405,(9,3)).
shortest_path((10,3),(16,1),300,(10,4)).
shortest_path((10,3),(19,1),315,(10,4)).
shortest_path((10,3),(10,1),90,(10,4)).
shortest_path((10,3),(22,1),420,(10,4)).
shortest_path((10,3),(13,1),225,(10,4)).
shortest_path((10,3),(3,1),225,(10,4)).
shortest_path((10,3),(14,4),195,(10,4)).
shortest_path((10,3),(13,4),180,(10,4)).
shortest_path((10,3),(5,4),150,(10,4)).
shortest_path((10,3),(21,4),360,(10,4)).
shortest_path((10,3),(24,1),420,(10,4)).
shortest_path((10,3),(21,1),435,(10,4)).
shortest_path((10,3),(23,1),405,(10,4)).
shortest_path((10,3),(25,1),435,(10,4)).
shortest_path((10,4),(16,1),285,(9,4)).
shortest_path((10,4),(19,1),300,(9,4)).
shortest_path((10,4),(10,1),75,(9,4)).
shortest_path((10,4),(22,1),405,(9,4)).
shortest_path((10,4),(13,1),210,(9,4)).
shortest_path((10,4),(3,1),210,(9,4)).
shortest_path((10,4),(14,4),180,(9,4)).
shortest_path((10,4),(13,4),165,(9,4)).
shortest_path((10,4),(5,4),135,(9,4)).
shortest_path((10,4),(21,4),345,(9,4)).
shortest_path((10,4),(24,1),405,(9,4)).
shortest_path((10,4),(21,1),420,(9,4)).
shortest_path((10,4),(23,1),390,(9,4)).
shortest_path((10,4),(25,1),420,(9,4)).
shortest_path((12,4),(16,1),135,(13,4)).
shortest_path((12,4),(19,1),150,(13,4)).
shortest_path((12,4),(10,1),75,(12,3)).
shortest_path((12,4),(22,1),255,(13,4)).
shortest_path((12,4),(13,1),60,(13,4)).
shortest_path((12,4),(3,1),270,(12,3)).
shortest_path((12,4),(14,4),30,(13,4)).
shortest_path((12,4),(13,4),15,(13,4)).
shortest_path((12,4),(5,4),195,(12,3)).
shortest_path((12,4),(21,4),195,(13,4)).
shortest_path((12,4),(24,1),255,(13,4)).
shortest_path((12,4),(21,1),270,(13,4)).
shortest_path((12,4),(23,1),240,(13,4)).
shortest_path((12,4),(25,1),270,(13,4)).
shortest_path((15,4),(16,1),90,(15,3)).
shortest_path((15,4),(19,1),105,(15,3)).
shortest_path((15,4),(10,1),150,(15,3)).
shortest_path((15,4),(22,1),180,(16,4)).
shortest_path((15,4),(13,1),75,(15,3)).
shortest_path((15,4),(3,1),345,(15,3)).
shortest_path((15,4),(14,4),75,(15,3)).
shortest_path((15,4),(13,4),60,(15,3)).
shortest_path((15,4),(5,4),270,(15,3)).
shortest_path((15,4),(21,4),120,(16,4)).
shortest_path((15,4),(24,1),180,(16,4)).
shortest_path((15,4),(21,1),195,(16,4)).
shortest_path((15,4),(23,1),165,(16,4)).
shortest_path((15,4),(25,1),195,(16,4)).
shortest_path((18,4),(16,1),135,(17,4)).
shortest_path((18,4),(19,1),150,(17,4)).
shortest_path((18,4),(10,1),195,(17,4)).
shortest_path((18,4),(22,1),135,(18,3)).
shortest_path((18,4),(13,1),120,(17,4)).
shortest_path((18,4),(3,1),390,(17,4)).
shortest_path((18,4),(14,4),120,(17,4)).
shortest_path((18,4),(13,4),105,(17,4)).
shortest_path((18,4),(5,4),315,(17,4)).
shortest_path((18,4),(21,4),75,(18,3)).
shortest_path((18,4),(24,1),135,(18,3)).
shortest_path((18,4),(21,1),150,(18,3)).
shortest_path((18,4),(23,1),120,(18,3)).
shortest_path((18,4),(25,1),150,(18,3)).
shortest_path((28,4),(16,1),375,(28,3)).
shortest_path((28,4),(19,1),390,(28,3)).
shortest_path((28,4),(10,1),435,(28,3)).
shortest_path((28,4),(22,1),165,(28,3)).
shortest_path((28,4),(13,1),360,(28,3)).
shortest_path((28,4),(3,1),630,(28,3)).
shortest_path((28,4),(14,4),360,(28,3)).
shortest_path((28,4),(13,4),345,(28,3)).
shortest_path((28,4),(5,4),555,(28,3)).
shortest_path((28,4),(21,4),195,(28,3)).
shortest_path((28,4),(24,1),135,(28,3)).
shortest_path((28,4),(21,1),180,(28,3)).
shortest_path((28,4),(23,1),150,(28,3)).
shortest_path((28,4),(25,1),90,(28,3)).
shortest_path((29,4),(16,1),390,(28,4)).
shortest_path((29,4),(19,1),405,(28,4)).
shortest_path((29,4),(10,1),450,(28,4)).
shortest_path((29,4),(22,1),180,(28,4)).
shortest_path((29,4),(13,1),375,(28,4)).
shortest_path((29,4),(3,1),645,(28,4)).
shortest_path((29,4),(14,4),375,(28,4)).
shortest_path((29,4),(13,4),360,(28,4)).
shortest_path((29,4),(5,4),570,(28,4)).
shortest_path((29,4),(21,4),210,(28,4)).
shortest_path((29,4),(24,1),150,(28,4)).
shortest_path((29,4),(21,1),195,(28,4)).
shortest_path((29,4),(23,1),165,(28,4)).
shortest_path((29,4),(25,1),105,(28,4)).
shortest_path((32,4),(16,1),495,(32,3)).
shortest_path((32,4),(19,1),510,(32,3)).
shortest_path((32,4),(10,1),555,(32,3)).
shortest_path((32,4),(22,1),285,(32,3)).
shortest_path((32,4),(13,1),480,(32,3)).
shortest_path((32,4),(3,1),750,(32,3)).
shortest_path((32,4),(14,4),480,(32,3)).
shortest_path((32,4),(13,4),465,(32,3)).
shortest_path((32,4),(5,4),675,(32,3)).
shortest_path((32,4),(21,4),315,(32,3)).
shortest_path((32,4),(24,1),255,(32,3)).
shortest_path((32,4),(21,1),300,(32,3)).
shortest_path((32,4),(23,1),270,(32,3)).
shortest_path((32,4),(25,1),210,(32,3)).
shortest_path((33,4),(16,1),510,(32,4)).
shortest_path((33,4),(19,1),525,(32,4)).
shortest_path((33,4),(10,1),570,(32,4)).
shortest_path((33,4),(22,1),300,(32,4)).
shortest_path((33,4),(13,1),495,(32,4)).
shortest_path((33,4),(3,1),765,(32,4)).
shortest_path((33,4),(14,4),495,(32,4)).
shortest_path((33,4),(13,4),480,(32,4)).
shortest_path((33,4),(5,4),690,(32,4)).
shortest_path((33,4),(21,4),330,(32,4)).
shortest_path((33,4),(24,1),270,(32,4)).
shortest_path((33,4),(21,1),315,(32,4)).
shortest_path((33,4),(23,1),285,(32,4)).
shortest_path((33,4),(25,1),225,(32,4)).
shortest_path((39,4),(16,1),720,(39,3)).
shortest_path((39,4),(19,1),735,(39,3)).
shortest_path((39,4),(10,1),780,(39,3)).
shortest_path((39,4),(22,1),510,(39,3)).
shortest_path((39,4),(13,1),705,(39,3)).
shortest_path((39,4),(3,1),975,(39,3)).
shortest_path((39,4),(14,4),705,(39,3)).
shortest_path((39,4),(13,4),690,(39,3)).
shortest_path((39,4),(5,4),900,(39,3)).
shortest_path((39,4),(21,4),540,(39,3)).
shortest_path((39,4),(24,1),480,(39,3)).
shortest_path((39,4),(21,1),525,(39,3)).
shortest_path((39,4),(23,1),495,(39,3)).
shortest_path((39,4),(25,1),435,(39,3)).
shortest_path((4,4),(16,1),345,(5,4)).
shortest_path((4,4),(19,1),360,(5,4)).
shortest_path((4,4),(10,1),135,(5,4)).
shortest_path((4,4),(22,1),465,(5,4)).
shortest_path((4,4),(13,1),270,(5,4)).
shortest_path((4,4),(3,1),60,(3,4)).
shortest_path((4,4),(14,4),240,(5,4)).
shortest_path((4,4),(13,4),225,(5,4)).
shortest_path((4,4),(5,4),15,(5,4)).
shortest_path((4,4),(21,4),405,(5,4)).
shortest_path((4,4),(24,1),465,(5,4)).
shortest_path((4,4),(21,1),480,(5,4)).
shortest_path((4,4),(23,1),450,(5,4)).
shortest_path((4,4),(25,1),480,(5,4)).
shortest_path((16,4),(16,1),105,(15,4)).
shortest_path((16,4),(19,1),120,(15,4)).
shortest_path((16,4),(10,1),165,(15,4)).
shortest_path((16,4),(22,1),165,(17,4)).
shortest_path((16,4),(13,1),90,(15,4)).
shortest_path((16,4),(3,1),360,(15,4)).
shortest_path((16,4),(14,4),90,(15,4)).
shortest_path((16,4),(13,4),75,(15,4)).
shortest_path((16,4),(5,4),285,(15,4)).
shortest_path((16,4),(21,4),105,(17,4)).
shortest_path((16,4),(24,1),165,(17,4)).
shortest_path((16,4),(21,1),180,(17,4)).
shortest_path((16,4),(23,1),150,(17,4)).
shortest_path((16,4),(25,1),180,(17,4)).
shortest_path((17,4),(16,1),120,(16,4)).
shortest_path((17,4),(19,1),135,(16,4)).
shortest_path((17,4),(10,1),180,(16,4)).
shortest_path((17,4),(22,1),150,(18,4)).
shortest_path((17,4),(13,1),105,(16,4)).
shortest_path((17,4),(3,1),375,(16,4)).
shortest_path((17,4),(14,4),105,(16,4)).
shortest_path((17,4),(13,4),90,(16,4)).
shortest_path((17,4),(5,4),300,(16,4)).
shortest_path((17,4),(21,4),90,(18,4)).
shortest_path((17,4),(24,1),150,(18,4)).
shortest_path((17,4),(21,1),165,(18,4)).
shortest_path((17,4),(23,1),135,(18,4)).
shortest_path((17,4),(25,1),165,(18,4)).
shortest_path((20,4),(16,1),225,(21,4)).
shortest_path((20,4),(19,1),240,(21,4)).
shortest_path((20,4),(10,1),285,(21,4)).
shortest_path((20,4),(22,1),105,(21,4)).
shortest_path((20,4),(13,1),210,(21,4)).
shortest_path((20,4),(3,1),480,(21,4)).
shortest_path((20,4),(14,4),210,(21,4)).
shortest_path((20,4),(13,4),195,(21,4)).
shortest_path((20,4),(5,4),405,(21,4)).
shortest_path((20,4),(21,4),15,(21,4)).
shortest_path((20,4),(24,1),105,(21,4)).
shortest_path((20,4),(21,1),120,(21,4)).
shortest_path((20,4),(23,1),90,(21,4)).
shortest_path((20,4),(25,1),120,(21,4)).
shortest_path((36,4),(16,1),765,(37,4)).
shortest_path((36,4),(19,1),780,(37,4)).
shortest_path((36,4),(10,1),825,(37,4)).
shortest_path((36,4),(22,1),555,(37,4)).
shortest_path((36,4),(13,1),750,(37,4)).
shortest_path((36,4),(3,1),1020,(37,4)).
shortest_path((36,4),(14,4),750,(37,4)).
shortest_path((36,4),(13,4),735,(37,4)).
shortest_path((36,4),(5,4),945,(37,4)).
shortest_path((36,4),(21,4),585,(37,4)).
shortest_path((36,4),(24,1),525,(37,4)).
shortest_path((36,4),(21,1),570,(37,4)).
shortest_path((36,4),(23,1),540,(37,4)).
shortest_path((36,4),(25,1),480,(37,4)).
shortest_path((37,4),(16,1),750,(38,4)).
shortest_path((37,4),(19,1),765,(38,4)).
shortest_path((37,4),(10,1),810,(38,4)).
shortest_path((37,4),(22,1),540,(38,4)).
shortest_path((37,4),(13,1),735,(38,4)).
shortest_path((37,4),(3,1),1005,(38,4)).
shortest_path((37,4),(14,4),735,(38,4)).
shortest_path((37,4),(13,4),720,(38,4)).
shortest_path((37,4),(5,4),930,(38,4)).
shortest_path((37,4),(21,4),570,(38,4)).
shortest_path((37,4),(24,1),510,(38,4)).
shortest_path((37,4),(21,1),555,(38,4)).
shortest_path((37,4),(23,1),525,(38,4)).
shortest_path((37,4),(25,1),465,(38,4)).
shortest_path((38,4),(16,1),735,(39,4)).
shortest_path((38,4),(19,1),750,(39,4)).
shortest_path((38,4),(10,1),795,(39,4)).
shortest_path((38,4),(22,1),525,(39,4)).
shortest_path((38,4),(13,1),720,(39,4)).
shortest_path((38,4),(3,1),990,(39,4)).
shortest_path((38,4),(14,4),720,(39,4)).
shortest_path((38,4),(13,4),705,(39,4)).
shortest_path((38,4),(5,4),915,(39,4)).
shortest_path((38,4),(21,4),555,(39,4)).
shortest_path((38,4),(24,1),495,(39,4)).
shortest_path((38,4),(21,1),540,(39,4)).
shortest_path((38,4),(23,1),510,(39,4)).
shortest_path((38,4),(25,1),450,(39,4)).
robot(1).
robot(2).
robot(3).
robot(4).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(deliver,(7,pickup),(7,putdown)).
depends(deliver,(8,pickup),(8,putdown)).
depends(wait,(2,pickup),(1,putdown)).
depends(wait,(3,pickup),(4,putdown)).
depends(wait,(6,pickup),(5,putdown)).
depends(wait,(7,pickup),(8,putdown)).
start(1,(24,1)).
start(2,(21,1)).
start(3,(23,1)).
start(4,(25,1)).

