edge((18,1),(19,1),15).
edge((19,1),(20,1),15).
edge((21,1),(22,1),15).
edge((24,1),(25,1),15).
edge((25,1),(26,1),15).
edge((17,1),(17,2),15).
edge((19,1),(19,2),15).
edge((22,1),(22,2),15).
edge((24,1),(24,2),15).
edge((26,1),(26,2),15).
edge((28,1),(28,2),15).
edge((18,2),(19,2),15).
edge((22,2),(23,2),15).
edge((23,2),(24,2),15).
edge((17,2),(17,3),15).
edge((18,2),(18,3),15).
edge((22,2),(22,3),15).
edge((26,2),(26,3),15).
edge((28,2),(28,3),15).
edge((17,3),(18,3),15).
edge((18,3),(19,3),15).
edge((21,3),(22,3),15).
edge((24,3),(25,3),15).
edge((25,3),(26,3),15).
edge((19,3),(19,4),15).
edge((21,3),(21,4),15).
edge((24,3),(24,4),15).
edge((28,3),(28,4),15).
edge((19,4),(20,4),15).
edge((20,4),(21,4),15).
edge((24,4),(25,4),15).
edge((25,4),(26,4),15).
edge((26,4),(27,4),15).
edge((27,4),(28,4),15).
edge((28,4),(27,4),15).
edge((27,4),(26,4),15).
edge((26,4),(25,4),15).
edge((25,4),(24,4),15).
edge((21,4),(20,4),15).
edge((20,4),(19,4),15).
edge((28,4),(28,3),15).
edge((24,4),(24,3),15).
edge((21,4),(21,3),15).
edge((19,4),(19,3),15).
edge((26,3),(25,3),15).
edge((25,3),(24,3),15).
edge((22,3),(21,3),15).
edge((19,3),(18,3),15).
edge((18,3),(17,3),15).
edge((28,3),(28,2),15).
edge((26,3),(26,2),15).
edge((22,3),(22,2),15).
edge((18,3),(18,2),15).
edge((17,3),(17,2),15).
edge((24,2),(23,2),15).
edge((23,2),(22,2),15).
edge((19,2),(18,2),15).
edge((28,2),(28,1),15).
edge((26,2),(26,1),15).
edge((24,2),(24,1),15).
edge((22,2),(22,1),15).
edge((19,2),(19,1),15).
edge((17,2),(17,1),15).
edge((26,1),(25,1),15).
edge((25,1),(24,1),15).
edge((22,1),(21,1),15).
edge((20,1),(19,1),15).
edge((19,1),(18,1),15).
conflict(v,(17,1),(17,1)).
conflict(v,(18,1),(18,1)).
conflict(v,(19,1),(19,1)).
conflict(v,(20,1),(20,1)).
conflict(v,(21,1),(21,1)).
conflict(v,(22,1),(22,1)).
conflict(v,(24,1),(24,1)).
conflict(v,(25,1),(25,1)).
conflict(v,(26,1),(26,1)).
conflict(v,(28,1),(28,1)).
conflict(v,(17,2),(17,2)).
conflict(v,(18,2),(18,2)).
conflict(v,(19,2),(19,2)).
conflict(v,(22,2),(22,2)).
conflict(v,(23,2),(23,2)).
conflict(v,(24,2),(24,2)).
conflict(v,(26,2),(26,2)).
conflict(v,(28,2),(28,2)).
conflict(v,(17,3),(17,3)).
conflict(v,(18,3),(18,3)).
conflict(v,(19,3),(19,3)).
conflict(v,(21,3),(21,3)).
conflict(v,(22,3),(22,3)).
conflict(v,(24,3),(24,3)).
conflict(v,(25,3),(25,3)).
conflict(v,(26,3),(26,3)).
conflict(v,(28,3),(28,3)).
conflict(v,(19,4),(19,4)).
conflict(v,(20,4),(20,4)).
conflict(v,(21,4),(21,4)).
conflict(v,(24,4),(24,4)).
conflict(v,(25,4),(25,4)).
conflict(v,(26,4),(26,4)).
conflict(v,(27,4),(27,4)).
conflict(v,(28,4),(28,4)).
conflict(e,((17,1),(17,2)),((17,2),(17,1))).
conflict(e,((18,1),(19,1)),((19,1),(18,1))).
conflict(e,((19,1),(18,1)),((18,1),(19,1))).
conflict(e,((19,1),(19,2)),((19,2),(19,1))).
conflict(e,((19,1),(20,1)),((20,1),(19,1))).
conflict(e,((20,1),(19,1)),((19,1),(20,1))).
conflict(e,((21,1),(22,1)),((22,1),(21,1))).
conflict(e,((22,1),(21,1)),((21,1),(22,1))).
conflict(e,((22,1),(22,2)),((22,2),(22,1))).
conflict(e,((24,1),(24,2)),((24,2),(24,1))).
conflict(e,((24,1),(25,1)),((25,1),(24,1))).
conflict(e,((25,1),(24,1)),((24,1),(25,1))).
conflict(e,((25,1),(26,1)),((26,1),(25,1))).
conflict(e,((26,1),(25,1)),((25,1),(26,1))).
conflict(e,((26,1),(26,2)),((26,2),(26,1))).
conflict(e,((28,1),(28,2)),((28,2),(28,1))).
conflict(e,((17,2),(17,1)),((17,1),(17,2))).
conflict(e,((17,2),(17,3)),((17,3),(17,2))).
conflict(e,((18,2),(18,3)),((18,3),(18,2))).
conflict(e,((18,2),(19,2)),((19,2),(18,2))).
conflict(e,((19,2),(19,1)),((19,1),(19,2))).
conflict(e,((19,2),(18,2)),((18,2),(19,2))).
conflict(e,((22,2),(22,1)),((22,1),(22,2))).
conflict(e,((22,2),(22,3)),((22,3),(22,2))).
conflict(e,((22,2),(23,2)),((23,2),(22,2))).
conflict(e,((23,2),(22,2)),((22,2),(23,2))).
conflict(e,((23,2),(24,2)),((24,2),(23,2))).
conflict(e,((24,2),(24,1)),((24,1),(24,2))).
conflict(e,((24,2),(23,2)),((23,2),(24,2))).
conflict(e,((26,2),(26,1)),((26,1),(26,2))).
conflict(e,((26,2),(26,3)),((26,3),(26,2))).
conflict(e,((28,2),(28,1)),((28,1),(28,2))).
conflict(e,((28,2),(28,3)),((28,3),(28,2))).
conflict(e,((17,3),(17,2)),((17,2),(17,3))).
conflict(e,((17,3),(18,3)),((18,3),(17,3))).
conflict(e,((18,3),(18,2)),((18,2),(18,3))).
conflict(e,((18,3),(17,3)),((17,3),(18,3))).
conflict(e,((18,3),(19,3)),((19,3),(18,3))).
conflict(e,((19,3),(18,3)),((18,3),(19,3))).
conflict(e,((19,3),(19,4)),((19,4),(19,3))).
conflict(e,((21,3),(21,4)),((21,4),(21,3))).
conflict(e,((21,3),(22,3)),((22,3),(21,3))).
conflict(e,((22,3),(22,2)),((22,2),(22,3))).
conflict(e,((22,3),(21,3)),((21,3),(22,3))).
conflict(e,((24,3),(24,4)),((24,4),(24,3))).
conflict(e,((24,3),(25,3)),((25,3),(24,3))).
conflict(e,((25,3),(24,3)),((24,3),(25,3))).
conflict(e,((25,3),(26,3)),((26,3),(25,3))).
conflict(e,((26,3),(26,2)),((26,2),(26,3))).
conflict(e,((26,3),(25,3)),((25,3),(26,3))).
conflict(e,((28,3),(28,2)),((28,2),(28,3))).
conflict(e,((28,3),(28,4)),((28,4),(28,3))).
conflict(e,((19,4),(19,3)),((19,3),(19,4))).
conflict(e,((19,4),(20,4)),((20,4),(19,4))).
conflict(e,((20,4),(19,4)),((19,4),(20,4))).
conflict(e,((20,4),(21,4)),((21,4),(20,4))).
conflict(e,((21,4),(21,3)),((21,3),(21,4))).
conflict(e,((21,4),(20,4)),((20,4),(21,4))).
conflict(e,((24,4),(24,3)),((24,3),(24,4))).
conflict(e,((24,4),(25,4)),((25,4),(24,4))).
conflict(e,((25,4),(24,4)),((24,4),(25,4))).
conflict(e,((25,4),(26,4)),((26,4),(25,4))).
conflict(e,((26,4),(25,4)),((25,4),(26,4))).
conflict(e,((26,4),(27,4)),((27,4),(26,4))).
conflict(e,((27,4),(26,4)),((26,4),(27,4))).
conflict(e,((27,4),(28,4)),((28,4),(27,4))).
conflict(e,((28,4),(28,3)),((28,3),(28,4))).
conflict(e,((28,4),(27,4)),((27,4),(28,4))).
conflict(e,((17,2),(17,1)),((17,2),(17,1))).
conflict(e,((19,1),(18,1)),((19,1),(18,1))).
conflict(e,((18,1),(19,1)),((18,1),(19,1))).
conflict(e,((19,2),(19,1)),((19,2),(19,1))).
conflict(e,((20,1),(19,1)),((20,1),(19,1))).
conflict(e,((19,1),(20,1)),((19,1),(20,1))).
conflict(e,((22,1),(21,1)),((22,1),(21,1))).
conflict(e,((21,1),(22,1)),((21,1),(22,1))).
conflict(e,((22,2),(22,1)),((22,2),(22,1))).
conflict(e,((24,2),(24,1)),((24,2),(24,1))).
conflict(e,((25,1),(24,1)),((25,1),(24,1))).
conflict(e,((24,1),(25,1)),((24,1),(25,1))).
conflict(e,((26,1),(25,1)),((26,1),(25,1))).
conflict(e,((25,1),(26,1)),((25,1),(26,1))).
conflict(e,((26,2),(26,1)),((26,2),(26,1))).
conflict(e,((28,2),(28,1)),((28,2),(28,1))).
conflict(e,((17,1),(17,2)),((17,1),(17,2))).
conflict(e,((17,3),(17,2)),((17,3),(17,2))).
conflict(e,((18,3),(18,2)),((18,3),(18,2))).
conflict(e,((19,2),(18,2)),((19,2),(18,2))).
conflict(e,((19,1),(19,2)),((19,1),(19,2))).
conflict(e,((18,2),(19,2)),((18,2),(19,2))).
conflict(e,((22,1),(22,2)),((22,1),(22,2))).
conflict(e,((22,3),(22,2)),((22,3),(22,2))).
conflict(e,((23,2),(22,2)),((23,2),(22,2))).
conflict(e,((22,2),(23,2)),((22,2),(23,2))).
conflict(e,((24,2),(23,2)),((24,2),(23,2))).
conflict(e,((24,1),(24,2)),((24,1),(24,2))).
conflict(e,((23,2),(24,2)),((23,2),(24,2))).
conflict(e,((26,1),(26,2)),((26,1),(26,2))).
conflict(e,((26,3),(26,2)),((26,3),(26,2))).
conflict(e,((28,1),(28,2)),((28,1),(28,2))).
conflict(e,((28,3),(28,2)),((28,3),(28,2))).
conflict(e,((17,2),(17,3)),((17,2),(17,3))).
conflict(e,((18,3),(17,3)),((18,3),(17,3))).
conflict(e,((18,2),(18,3)),((18,2),(18,3))).
conflict(e,((17,3),(18,3)),((17,3),(18,3))).
conflict(e,((19,3),(18,3)),((19,3),(18,3))).
conflict(e,((18,3),(19,3)),((18,3),(19,3))).
conflict(e,((19,4),(19,3)),((19,4),(19,3))).
conflict(e,((21,4),(21,3)),((21,4),(21,3))).
conflict(e,((22,3),(21,3)),((22,3),(21,3))).
conflict(e,((22,2),(22,3)),((22,2),(22,3))).
conflict(e,((21,3),(22,3)),((21,3),(22,3))).
conflict(e,((24,4),(24,3)),((24,4),(24,3))).
conflict(e,((25,3),(24,3)),((25,3),(24,3))).
conflict(e,((24,3),(25,3)),((24,3),(25,3))).
conflict(e,((26,3),(25,3)),((26,3),(25,3))).
conflict(e,((26,2),(26,3)),((26,2),(26,3))).
conflict(e,((25,3),(26,3)),((25,3),(26,3))).
conflict(e,((28,2),(28,3)),((28,2),(28,3))).
conflict(e,((28,4),(28,3)),((28,4),(28,3))).
conflict(e,((19,3),(19,4)),((19,3),(19,4))).
conflict(e,((20,4),(19,4)),((20,4),(19,4))).
conflict(e,((19,4),(20,4)),((19,4),(20,4))).
conflict(e,((21,4),(20,4)),((21,4),(20,4))).
conflict(e,((21,3),(21,4)),((21,3),(21,4))).
conflict(e,((20,4),(21,4)),((20,4),(21,4))).
conflict(e,((24,3),(24,4)),((24,3),(24,4))).
conflict(e,((25,4),(24,4)),((25,4),(24,4))).
conflict(e,((24,4),(25,4)),((24,4),(25,4))).
conflict(e,((26,4),(25,4)),((26,4),(25,4))).
conflict(e,((25,4),(26,4)),((25,4),(26,4))).
conflict(e,((27,4),(26,4)),((27,4),(26,4))).
conflict(e,((26,4),(27,4)),((26,4),(27,4))).
conflict(e,((28,4),(27,4)),((28,4),(27,4))).
conflict(e,((28,3),(28,4)),((28,3),(28,4))).
conflict(e,((27,4),(28,4)),((27,4),(28,4))).
task((1,pickup),(24,1)).
task((2,pickup),(24,1)).
task((3,pickup),(19,1)).
task((4,pickup),(17,1)).
task((5,pickup),(18,1)).
task((6,pickup),(24,1)).
task((7,pickup),(20,1)).
task((8,pickup),(25,1)).
task((1,putdown),(19,1)).
task((2,putdown),(17,1)).
task((3,putdown),(25,4)).
task((4,putdown),(21,4)).
task((5,putdown),(21,4)).
task((6,putdown),(18,1)).
task((7,putdown),(25,4)).
task((8,putdown),(20,1)).
home(1,(22,1)).
home(2,(21,1)).
home(3,(26,1)).
home(4,(28,1)).
nearest((18,1),(19,1),15).
nearest((19,1),(20,1),15).
nearest((21,1),(22,1),15).
nearest((24,1),(25,1),15).
nearest((25,1),(26,1),15).
nearest((17,1),(17,2),15).
nearest((19,1),(19,2),15).
nearest((22,1),(22,2),15).
nearest((24,1),(24,2),15).
nearest((26,1),(26,2),15).
nearest((28,1),(28,2),15).
nearest((18,2),(19,2),15).
nearest((22,2),(23,2),15).
nearest((23,2),(24,2),15).
nearest((17,2),(17,3),15).
nearest((18,2),(18,3),15).
nearest((22,2),(22,3),15).
nearest((26,2),(26,3),15).
nearest((28,2),(28,3),15).
nearest((17,3),(18,3),15).
nearest((18,3),(19,3),15).
nearest((21,3),(22,3),15).
nearest((24,3),(25,3),15).
nearest((25,3),(26,3),15).
nearest((19,3),(19,4),15).
nearest((21,3),(21,4),15).
nearest((24,3),(24,4),15).
nearest((28,3),(28,4),15).
nearest((19,4),(20,4),15).
nearest((20,4),(21,4),15).
nearest((24,4),(25,4),15).
nearest((25,4),(26,4),15).
nearest((26,4),(27,4),15).
nearest((27,4),(28,4),15).
nearest((28,4),(27,4),15).
nearest((27,4),(26,4),15).
nearest((26,4),(25,4),15).
nearest((25,4),(24,4),15).
nearest((21,4),(20,4),15).
nearest((20,4),(19,4),15).
nearest((28,4),(28,3),15).
nearest((24,4),(24,3),15).
nearest((21,4),(21,3),15).
nearest((19,4),(19,3),15).
nearest((26,3),(25,3),15).
nearest((25,3),(24,3),15).
nearest((22,3),(21,3),15).
nearest((19,3),(18,3),15).
nearest((18,3),(17,3),15).
nearest((28,3),(28,2),15).
nearest((26,3),(26,2),15).
nearest((22,3),(22,2),15).
nearest((18,3),(18,2),15).
nearest((17,3),(17,2),15).
nearest((24,2),(23,2),15).
nearest((23,2),(22,2),15).
nearest((19,2),(18,2),15).
nearest((28,2),(28,1),15).
nearest((26,2),(26,1),15).
nearest((24,2),(24,1),15).
nearest((22,2),(22,1),15).
nearest((19,2),(19,1),15).
nearest((17,2),(17,1),15).
nearest((26,1),(25,1),15).
nearest((25,1),(24,1),15).
nearest((22,1),(21,1),15).
nearest((20,1),(19,1),15).
nearest((19,1),(18,1),15).
entrypoint((18,1),(18,1),0).
entrypoint((21,1),(21,1),0).
entrypoint((20,1),(20,1),0).
entrypoint((24,1),(24,1),0).
entrypoint((19,1),(19,1),0).
entrypoint((25,1),(25,1),0).
entrypoint((25,4),(25,4),0).
entrypoint((21,4),(21,4),0).
entrypoint((22,1),(22,1),0).
entrypoint((26,1),(26,1),0).
entrypoint((17,2),(17,1),15).
entrypoint((28,2),(28,1),15).
on_deadend((18,1),(18,1)).
on_deadend((21,1),(21,1)).
on_deadend((17,1),(17,1)).
on_deadend((28,1),(28,1)).
on_deadend((20,1),(20,1)).
on_deadend((28,2),(28,1)).
on_deadend((17,2),(17,1)).
on_deadend((22,1),(21,1)).
on_deadend((17,3),(17,1)).
on_deadend((28,3),(28,1)).
on_deadend((28,4),(28,1)).
on_deadend((27,4),(28,1)).
on_deadend((26,4),(28,1)).
on_deadend((25,4),(28,1)).
on_deadend((24,4),(28,1)).
on_deadend((24,3),(28,1)).
on_deadend((25,3),(28,1)).
on_deadend((26,3),(28,1)).
on_deadend((26,2),(28,1)).
on_deadend((26,1),(28,1)).
on_deadend((25,1),(28,1)).
on_deadend((24,1),(28,1)).
on_deadend((24,2),(28,1)).
on_deadend((23,2),(28,1)).
endpoint_access((18,1),(18,1)).
endpoint_access((21,1),(21,1)).
endpoint_access((20,1),(20,1)).
endpoint_access((24,1),(24,1)).
endpoint_access((19,1),(19,1)).
endpoint_access((25,1),(25,1)).
endpoint_access((25,4),(25,4)).
endpoint_access((21,4),(21,4)).
endpoint_access((22,1),(22,1)).
endpoint_access((26,1),(26,1)).
endpoint_access((17,2),(17,1)).
endpoint_access((28,2),(28,1)).
endpoint_access((17,1),(17,1)).
endpoint_access((28,1),(28,1)).
endpoint_access((22,1),(21,1)).
endpoint_access((17,3),(17,1)).
endpoint_access((28,3),(28,1)).
endpoint_access((28,4),(28,1)).
endpoint_access((27,4),(28,1)).
endpoint_access((26,4),(28,1)).
endpoint_access((25,4),(28,1)).
endpoint_access((24,4),(28,1)).
endpoint_access((24,3),(28,1)).
endpoint_access((25,3),(28,1)).
endpoint_access((26,3),(28,1)).
endpoint_access((26,2),(28,1)).
endpoint_access((26,1),(28,1)).
endpoint_access((25,1),(28,1)).
endpoint_access((24,1),(28,1)).
endpoint_access((24,2),(28,1)).
endpoint_access((23,2),(28,1)).
shortest_path((24,1),(19,1),195,(24,2)).
shortest_path((24,1),(17,1),195,(24,2)).
shortest_path((24,1),(18,1),210,(24,2)).
shortest_path((24,1),(20,1),210,(24,2)).
shortest_path((24,1),(25,1),15,(25,1)).
shortest_path((24,1),(25,4),120,(25,1)).
shortest_path((24,1),(21,4),90,(24,2)).
shortest_path((24,1),(22,1),60,(24,2)).
shortest_path((24,1),(21,1),75,(24,2)).
shortest_path((24,1),(26,1),30,(25,1)).
shortest_path((24,1),(28,1),210,(25,1)).
shortest_path((19,1),(24,1),195,(19,2)).
shortest_path((19,1),(17,1),90,(19,2)).
shortest_path((19,1),(18,1),15,(18,1)).
shortest_path((19,1),(20,1),15,(20,1)).
shortest_path((19,1),(25,1),210,(19,2)).
shortest_path((19,1),(25,4),315,(19,2)).
shortest_path((19,1),(21,4),105,(19,2)).
shortest_path((19,1),(22,1),165,(19,2)).
shortest_path((19,1),(21,1),180,(19,2)).
shortest_path((19,1),(26,1),225,(19,2)).
shortest_path((19,1),(28,1),405,(19,2)).
shortest_path((17,1),(24,1),195,(17,2)).
shortest_path((17,1),(19,1),90,(17,2)).
shortest_path((17,1),(18,1),105,(17,2)).
shortest_path((17,1),(20,1),105,(17,2)).
shortest_path((17,1),(25,1),210,(17,2)).
shortest_path((17,1),(25,4),315,(17,2)).
shortest_path((17,1),(21,4),105,(17,2)).
shortest_path((17,1),(22,1),165,(17,2)).
shortest_path((17,1),(21,1),180,(17,2)).
shortest_path((17,1),(26,1),225,(17,2)).
shortest_path((17,1),(28,1),405,(17,2)).
shortest_path((18,1),(24,1),210,(19,1)).
shortest_path((18,1),(19,1),15,(19,1)).
shortest_path((18,1),(17,1),105,(19,1)).
shortest_path((18,1),(20,1),30,(19,1)).
shortest_path((18,1),(25,1),225,(19,1)).
shortest_path((18,1),(25,4),330,(19,1)).
shortest_path((18,1),(21,4),120,(19,1)).
shortest_path((18,1),(22,1),180,(19,1)).
shortest_path((18,1),(21,1),195,(19,1)).
shortest_path((18,1),(26,1),240,(19,1)).
shortest_path((18,1),(28,1),420,(19,1)).
shortest_path((20,1),(24,1),210,(19,1)).
shortest_path((20,1),(19,1),15,(19,1)).
shortest_path((20,1),(17,1),105,(19,1)).
shortest_path((20,1),(18,1),30,(19,1)).
shortest_path((20,1),(25,1),225,(19,1)).
shortest_path((20,1),(25,4),330,(19,1)).
shortest_path((20,1),(21,4),120,(19,1)).
shortest_path((20,1),(22,1),180,(19,1)).
shortest_path((20,1),(21,1),195,(19,1)).
shortest_path((20,1),(26,1),240,(19,1)).
shortest_path((20,1),(28,1),420,(19,1)).
shortest_path((25,1),(24,1),15,(24,1)).
shortest_path((25,1),(19,1),210,(24,1)).
shortest_path((25,1),(17,1),210,(24,1)).
shortest_path((25,1),(18,1),225,(24,1)).
shortest_path((25,1),(20,1),225,(24,1)).
shortest_path((25,1),(25,4),105,(26,1)).
shortest_path((25,1),(21,4),105,(24,1)).
shortest_path((25,1),(22,1),75,(24,1)).
shortest_path((25,1),(21,1),90,(24,1)).
shortest_path((25,1),(26,1),15,(26,1)).
shortest_path((25,1),(28,1),195,(26,1)).
shortest_path((25,4),(24,1),120,(24,4)).
shortest_path((25,4),(19,1),315,(24,4)).
shortest_path((25,4),(17,1),315,(24,4)).
shortest_path((25,4),(18,1),330,(24,4)).
shortest_path((25,4),(20,1),330,(24,4)).
shortest_path((25,4),(25,1),105,(24,4)).
shortest_path((25,4),(21,4),210,(24,4)).
shortest_path((25,4),(22,1),180,(24,4)).
shortest_path((25,4),(21,1),195,(24,4)).
shortest_path((25,4),(26,1),90,(24,4)).
shortest_path((25,4),(28,1),90,(26,4)).
shortest_path((21,4),(24,1),90,(21,3)).
shortest_path((21,4),(19,1),105,(20,4)).
shortest_path((21,4),(17,1),105,(20,4)).
shortest_path((21,4),(18,1),120,(20,4)).
shortest_path((21,4),(20,1),120,(20,4)).
shortest_path((21,4),(25,1),105,(21,3)).
shortest_path((21,4),(25,4),210,(21,3)).
shortest_path((21,4),(22,1),60,(21,3)).
shortest_path((21,4),(21,1),75,(21,3)).
shortest_path((21,4),(26,1),120,(21,3)).
shortest_path((21,4),(28,1),300,(21,3)).
shortest_path((22,1),(24,1),60,(22,2)).
shortest_path((22,1),(19,1),165,(22,2)).
shortest_path((22,1),(17,1),165,(22,2)).
shortest_path((22,1),(18,1),180,(22,2)).
shortest_path((22,1),(20,1),180,(22,2)).
shortest_path((22,1),(25,1),75,(22,2)).
shortest_path((22,1),(25,4),180,(22,2)).
shortest_path((22,1),(21,4),60,(22,2)).
shortest_path((22,1),(21,1),15,(21,1)).
shortest_path((22,1),(26,1),90,(22,2)).
shortest_path((22,1),(28,1),270,(22,2)).
shortest_path((21,1),(24,1),75,(22,1)).
shortest_path((21,1),(19,1),180,(22,1)).
shortest_path((21,1),(17,1),180,(22,1)).
shortest_path((21,1),(18,1),195,(22,1)).
shortest_path((21,1),(20,1),195,(22,1)).
shortest_path((21,1),(25,1),90,(22,1)).
shortest_path((21,1),(25,4),195,(22,1)).
shortest_path((21,1),(21,4),75,(22,1)).
shortest_path((21,1),(22,1),15,(22,1)).
shortest_path((21,1),(26,1),105,(22,1)).
shortest_path((21,1),(28,1),285,(22,1)).
shortest_path((26,1),(24,1),30,(25,1)).
shortest_path((26,1),(19,1),225,(25,1)).
shortest_path((26,1),(17,1),225,(25,1)).
shortest_path((26,1),(18,1),240,(25,1)).
shortest_path((26,1),(20,1),240,(25,1)).
shortest_path((26,1),(25,1),15,(25,1)).
shortest_path((26,1),(25,4),90,(26,2)).
shortest_path((26,1),(21,4),120,(25,1)).
shortest_path((26,1),(22,1),90,(25,1)).
shortest_path((26,1),(21,1),105,(25,1)).
shortest_path((26,1),(28,1),180,(26,2)).
shortest_path((28,1),(24,1),210,(28,2)).
shortest_path((28,1),(19,1),405,(28,2)).
shortest_path((28,1),(17,1),405,(28,2)).
shortest_path((28,1),(18,1),420,(28,2)).
shortest_path((28,1),(20,1),420,(28,2)).
shortest_path((28,1),(25,1),195,(28,2)).
shortest_path((28,1),(25,4),90,(28,2)).
shortest_path((28,1),(21,4),300,(28,2)).
shortest_path((28,1),(22,1),270,(28,2)).
shortest_path((28,1),(21,1),285,(28,2)).
shortest_path((28,1),(26,1),180,(28,2)).
shortest_path((17,2),(24,1),180,(17,3)).
shortest_path((17,2),(19,1),75,(17,3)).
shortest_path((17,2),(17,1),15,(17,1)).
shortest_path((17,2),(18,1),90,(17,3)).
shortest_path((17,2),(20,1),90,(17,3)).
shortest_path((17,2),(25,1),195,(17,3)).
shortest_path((17,2),(25,4),300,(17,3)).
shortest_path((17,2),(21,4),90,(17,3)).
shortest_path((17,2),(22,1),150,(17,3)).
shortest_path((17,2),(21,1),165,(17,3)).
shortest_path((17,2),(26,1),210,(17,3)).
shortest_path((17,2),(28,1),390,(17,3)).
shortest_path((19,2),(24,1),180,(18,2)).
shortest_path((19,2),(19,1),15,(19,1)).
shortest_path((19,2),(17,1),75,(18,2)).
shortest_path((19,2),(18,1),30,(19,1)).
shortest_path((19,2),(20,1),30,(19,1)).
shortest_path((19,2),(25,1),195,(18,2)).
shortest_path((19,2),(25,4),300,(18,2)).
shortest_path((19,2),(21,4),90,(18,2)).
shortest_path((19,2),(22,1),150,(18,2)).
shortest_path((19,2),(21,1),165,(18,2)).
shortest_path((19,2),(26,1),210,(18,2)).
shortest_path((19,2),(28,1),390,(18,2)).
shortest_path((22,2),(24,1),45,(23,2)).
shortest_path((22,2),(19,1),150,(22,3)).
shortest_path((22,2),(17,1),150,(22,3)).
shortest_path((22,2),(18,1),165,(22,3)).
shortest_path((22,2),(20,1),165,(22,3)).
shortest_path((22,2),(25,1),60,(23,2)).
shortest_path((22,2),(25,4),165,(23,2)).
shortest_path((22,2),(21,4),45,(22,3)).
shortest_path((22,2),(22,1),15,(22,1)).
shortest_path((22,2),(21,1),30,(22,1)).
shortest_path((22,2),(26,1),75,(23,2)).
shortest_path((22,2),(28,1),255,(23,2)).
shortest_path((24,2),(24,1),15,(24,1)).
shortest_path((24,2),(19,1),180,(23,2)).
shortest_path((24,2),(17,1),180,(23,2)).
shortest_path((24,2),(18,1),195,(23,2)).
shortest_path((24,2),(20,1),195,(23,2)).
shortest_path((24,2),(25,1),30,(24,1)).
shortest_path((24,2),(25,4),135,(24,1)).
shortest_path((24,2),(21,4),75,(23,2)).
shortest_path((24,2),(22,1),45,(23,2)).
shortest_path((24,2),(21,1),60,(23,2)).
shortest_path((24,2),(26,1),45,(24,1)).
shortest_path((24,2),(28,1),225,(24,1)).
shortest_path((26,2),(24,1),45,(26,1)).
shortest_path((26,2),(19,1),240,(26,1)).
shortest_path((26,2),(17,1),240,(26,1)).
shortest_path((26,2),(18,1),255,(26,1)).
shortest_path((26,2),(20,1),255,(26,1)).
shortest_path((26,2),(25,1),30,(26,1)).
shortest_path((26,2),(25,4),75,(26,3)).
shortest_path((26,2),(21,4),135,(26,1)).
shortest_path((26,2),(22,1),105,(26,1)).
shortest_path((26,2),(21,1),120,(26,1)).
shortest_path((26,2),(26,1),15,(26,1)).
shortest_path((26,2),(28,1),165,(26,3)).
shortest_path((28,2),(24,1),195,(28,3)).
shortest_path((28,2),(19,1),390,(28,3)).
shortest_path((28,2),(17,1),390,(28,3)).
shortest_path((28,2),(18,1),405,(28,3)).
shortest_path((28,2),(20,1),405,(28,3)).
shortest_path((28,2),(25,1),180,(28,3)).
shortest_path((28,2),(25,4),75,(28,3)).
shortest_path((28,2),(21,4),285,(28,3)).
shortest_path((28,2),(22,1),255,(28,3)).
shortest_path((28,2),(21,1),270,(28,3)).
shortest_path((28,2),(26,1),165,(28,3)).
shortest_path((28,2),(28,1),15,(28,1)).
shortest_path((18,2),(24,1),165,(18,3)).
shortest_path((18,2),(19,1),30,(19,2)).
shortest_path((18,2),(17,1),60,(18,3)).
shortest_path((18,2),(18,1),45,(19,2)).
shortest_path((18,2),(20,1),45,(19,2)).
shortest_path((18,2),(25,1),180,(18,3)).
shortest_path((18,2),(25,4),285,(18,3)).
shortest_path((18,2),(21,4),75,(18,3)).
shortest_path((18,2),(22,1),135,(18,3)).
shortest_path((18,2),(21,1),150,(18,3)).
shortest_path((18,2),(26,1),195,(18,3)).
shortest_path((18,2),(28,1),375,(18,3)).
shortest_path((23,2),(24,1),30,(24,2)).
shortest_path((23,2),(19,1),165,(22,2)).
shortest_path((23,2),(17,1),165,(22,2)).
shortest_path((23,2),(18,1),180,(22,2)).
shortest_path((23,2),(20,1),180,(22,2)).
shortest_path((23,2),(25,1),45,(24,2)).
shortest_path((23,2),(25,4),150,(24,2)).
shortest_path((23,2),(21,4),60,(22,2)).
shortest_path((23,2),(22,1),30,(22,2)).
shortest_path((23,2),(21,1),45,(22,2)).
shortest_path((23,2),(26,1),60,(24,2)).
shortest_path((23,2),(28,1),240,(24,2)).
shortest_path((17,3),(24,1),165,(18,3)).
shortest_path((17,3),(19,1),60,(18,3)).
shortest_path((17,3),(17,1),30,(17,2)).
shortest_path((17,3),(18,1),75,(18,3)).
shortest_path((17,3),(20,1),75,(18,3)).
shortest_path((17,3),(25,1),180,(18,3)).
shortest_path((17,3),(25,4),285,(18,3)).
shortest_path((17,3),(21,4),75,(18,3)).
shortest_path((17,3),(22,1),135,(18,3)).
shortest_path((17,3),(21,1),150,(18,3)).
shortest_path((17,3),(26,1),195,(18,3)).
shortest_path((17,3),(28,1),375,(18,3)).
shortest_path((18,3),(24,1),150,(19,3)).
shortest_path((18,3),(19,1),45,(18,2)).
shortest_path((18,3),(17,1),45,(17,3)).
shortest_path((18,3),(18,1),60,(18,2)).
shortest_path((18,3),(20,1),60,(18,2)).
shortest_path((18,3),(25,1),165,(19,3)).
shortest_path((18,3),(25,4),270,(19,3)).
shortest_path((18,3),(21,4),60,(19,3)).
shortest_path((18,3),(22,1),120,(19,3)).
shortest_path((18,3),(21,1),135,(19,3)).
shortest_path((18,3),(26,1),180,(19,3)).
shortest_path((18,3),(28,1),360,(19,3)).
shortest_path((22,3),(24,1),60,(22,2)).
shortest_path((22,3),(19,1),135,(21,3)).
shortest_path((22,3),(17,1),135,(21,3)).
shortest_path((22,3),(18,1),150,(21,3)).
shortest_path((22,3),(20,1),150,(21,3)).
shortest_path((22,3),(25,1),75,(22,2)).
shortest_path((22,3),(25,4),180,(22,2)).
shortest_path((22,3),(21,4),30,(21,3)).
shortest_path((22,3),(22,1),30,(22,2)).
shortest_path((22,3),(21,1),45,(22,2)).
shortest_path((22,3),(26,1),90,(22,2)).
shortest_path((22,3),(28,1),270,(22,2)).
shortest_path((26,3),(24,1),60,(26,2)).
shortest_path((26,3),(19,1),255,(26,2)).
shortest_path((26,3),(17,1),255,(26,2)).
shortest_path((26,3),(18,1),270,(26,2)).
shortest_path((26,3),(20,1),270,(26,2)).
shortest_path((26,3),(25,1),45,(26,2)).
shortest_path((26,3),(25,4),60,(25,3)).
shortest_path((26,3),(21,4),150,(26,2)).
shortest_path((26,3),(22,1),120,(26,2)).
shortest_path((26,3),(21,1),135,(26,2)).
shortest_path((26,3),(26,1),30,(26,2)).
shortest_path((26,3),(28,1),150,(25,3)).
shortest_path((28,3),(24,1),180,(28,4)).
shortest_path((28,3),(19,1),375,(28,4)).
shortest_path((28,3),(17,1),375,(28,4)).
shortest_path((28,3),(18,1),390,(28,4)).
shortest_path((28,3),(20,1),390,(28,4)).
shortest_path((28,3),(25,1),165,(28,4)).
shortest_path((28,3),(25,4),60,(28,4)).
shortest_path((28,3),(21,4),270,(28,4)).
shortest_path((28,3),(22,1),240,(28,4)).
shortest_path((28,3),(21,1),255,(28,4)).
shortest_path((28,3),(26,1),150,(28,4)).
shortest_path((28,3),(28,1),30,(28,2)).
shortest_path((19,3),(24,1),135,(19,4)).
shortest_path((19,3),(19,1),60,(18,3)).
shortest_path((19,3),(17,1),60,(18,3)).
shortest_path((19,3),(18,1),75,(18,3)).
shortest_path((19,3),(20,1),75,(18,3)).
shortest_path((19,3),(25,1),150,(19,4)).
shortest_path((19,3),(25,4),255,(19,4)).
shortest_path((19,3),(21,4),45,(19,4)).
shortest_path((19,3),(22,1),105,(19,4)).
shortest_path((19,3),(21,1),120,(19,4)).
shortest_path((19,3),(26,1),165,(19,4)).
shortest_path((19,3),(28,1),345,(19,4)).
shortest_path((21,3),(24,1),75,(22,3)).
shortest_path((21,3),(19,1),120,(21,4)).
shortest_path((21,3),(17,1),120,(21,4)).
shortest_path((21,3),(18,1),135,(21,4)).
shortest_path((21,3),(20,1),135,(21,4)).
shortest_path((21,3),(25,1),90,(22,3)).
shortest_path((21,3),(25,4),195,(22,3)).
shortest_path((21,3),(21,4),15,(21,4)).
shortest_path((21,3),(22,1),45,(22,3)).
shortest_path((21,3),(21,1),60,(22,3)).
shortest_path((21,3),(26,1),105,(22,3)).
shortest_path((21,3),(28,1),285,(22,3)).
shortest_path((24,3),(24,1),90,(25,3)).
shortest_path((24,3),(19,1),285,(25,3)).
shortest_path((24,3),(17,1),285,(25,3)).
shortest_path((24,3),(18,1),300,(25,3)).
shortest_path((24,3),(20,1),300,(25,3)).
shortest_path((24,3),(25,1),75,(25,3)).
shortest_path((24,3),(25,4),30,(24,4)).
shortest_path((24,3),(21,4),180,(25,3)).
shortest_path((24,3),(22,1),150,(25,3)).
shortest_path((24,3),(21,1),165,(25,3)).
shortest_path((24,3),(26,1),60,(25,3)).
shortest_path((24,3),(28,1),120,(24,4)).
shortest_path((25,3),(24,1),75,(26,3)).
shortest_path((25,3),(19,1),270,(26,3)).
shortest_path((25,3),(17,1),270,(26,3)).
shortest_path((25,3),(18,1),285,(26,3)).
shortest_path((25,3),(20,1),285,(26,3)).
shortest_path((25,3),(25,1),60,(26,3)).
shortest_path((25,3),(25,4),45,(24,3)).
shortest_path((25,3),(21,4),165,(26,3)).
shortest_path((25,3),(22,1),135,(26,3)).
shortest_path((25,3),(21,1),150,(26,3)).
shortest_path((25,3),(26,1),45,(26,3)).
shortest_path((25,3),(28,1),135,(24,3)).
shortest_path((19,4),(24,1),120,(20,4)).
shortest_path((19,4),(19,1),75,(19,3)).
shortest_path((19,4),(17,1),75,(19,3)).
shortest_path((19,4),(18,1),90,(19,3)).
shortest_path((19,4),(20,1),90,(19,3)).
shortest_path((19,4),(25,1),135,(20,4)).
shortest_path((19,4),(25,4),240,(20,4)).
shortest_path((19,4),(21,4),30,(20,4)).
shortest_path((19,4),(22,1),90,(20,4)).
shortest_path((19,4),(21,1),105,(20,4)).
shortest_path((19,4),(26,1),150,(20,4)).
shortest_path((19,4),(28,1),330,(20,4)).
shortest_path((24,4),(24,1),105,(24,3)).
shortest_path((24,4),(19,1),300,(24,3)).
shortest_path((24,4),(17,1),300,(24,3)).
shortest_path((24,4),(18,1),315,(24,3)).
shortest_path((24,4),(20,1),315,(24,3)).
shortest_path((24,4),(25,1),90,(24,3)).
shortest_path((24,4),(25,4),15,(25,4)).
shortest_path((24,4),(21,4),195,(24,3)).
shortest_path((24,4),(22,1),165,(24,3)).
shortest_path((24,4),(21,1),180,(24,3)).
shortest_path((24,4),(26,1),75,(24,3)).
shortest_path((24,4),(28,1),105,(25,4)).
shortest_path((28,4),(24,1),165,(27,4)).
shortest_path((28,4),(19,1),360,(27,4)).
shortest_path((28,4),(17,1),360,(27,4)).
shortest_path((28,4),(18,1),375,(27,4)).
shortest_path((28,4),(20,1),375,(27,4)).
shortest_path((28,4),(25,1),150,(27,4)).
shortest_path((28,4),(25,4),45,(27,4)).
shortest_path((28,4),(21,4),255,(27,4)).
shortest_path((28,4),(22,1),225,(27,4)).
shortest_path((28,4),(21,1),240,(27,4)).
shortest_path((28,4),(26,1),135,(27,4)).
shortest_path((28,4),(28,1),45,(28,3)).
shortest_path((20,4),(24,1),105,(21,4)).
shortest_path((20,4),(19,1),90,(19,4)).
shortest_path((20,4),(17,1),90,(19,4)).
shortest_path((20,4),(18,1),105,(19,4)).
shortest_path((20,4),(20,1),105,(19,4)).
shortest_path((20,4),(25,1),120,(21,4)).
shortest_path((20,4),(25,4),225,(21,4)).
shortest_path((20,4),(21,4),15,(21,4)).
shortest_path((20,4),(22,1),75,(21,4)).
shortest_path((20,4),(21,1),90,(21,4)).
shortest_path((20,4),(26,1),135,(21,4)).
shortest_path((20,4),(28,1),315,(21,4)).
shortest_path((26,4),(24,1),135,(25,4)).
shortest_path((26,4),(19,1),330,(25,4)).
shortest_path((26,4),(17,1),330,(25,4)).
shortest_path((26,4),(18,1),345,(25,4)).
shortest_path((26,4),(20,1),345,(25,4)).
shortest_path((26,4),(25,1),120,(25,4)).
shortest_path((26,4),(25,4),15,(25,4)).
shortest_path((26,4),(21,4),225,(25,4)).
shortest_path((26,4),(22,1),195,(25,4)).
shortest_path((26,4),(21,1),210,(25,4)).
shortest_path((26,4),(26,1),105,(25,4)).
shortest_path((26,4),(28,1),75,(27,4)).
shortest_path((27,4),(24,1),150,(26,4)).
shortest_path((27,4),(19,1),345,(26,4)).
shortest_path((27,4),(17,1),345,(26,4)).
shortest_path((27,4),(18,1),360,(26,4)).
shortest_path((27,4),(20,1),360,(26,4)).
shortest_path((27,4),(25,1),135,(26,4)).
shortest_path((27,4),(25,4),30,(26,4)).
shortest_path((27,4),(21,4),240,(26,4)).
shortest_path((27,4),(22,1),210,(26,4)).
shortest_path((27,4),(21,1),225,(26,4)).
shortest_path((27,4),(26,1),120,(26,4)).
shortest_path((27,4),(28,1),60,(28,4)).
robot(1).
robot(2).
robot(3).
robot(4).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(deliver,(7,pickup),(7,putdown)).
depends(deliver,(8,pickup),(8,putdown)).
depends(wait,(3,pickup),(1,putdown)).
depends(wait,(4,pickup),(2,putdown)).
depends(wait,(5,pickup),(6,putdown)).
depends(wait,(7,pickup),(8,putdown)).
start(1,(22,1)).
start(2,(21,1)).
start(3,(26,1)).
start(4,(28,1)).

