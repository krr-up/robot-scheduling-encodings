edge((7,1),(8,1),15).
edge((8,1),(9,1),15).
edge((9,1),(10,1),15).
edge((11,1),(12,1),15).
edge((12,1),(13,1),15).
edge((9,1),(9,2),15).
edge((10,1),(10,2),15).
edge((11,1),(11,2),15).
edge((9,2),(10,2),15).
edge((10,2),(11,2),15).
edge((9,2),(9,3),15).
edge((10,2),(10,3),15).
edge((8,3),(9,3),15).
edge((9,3),(10,3),15).
edge((8,3),(8,4),15).
edge((10,3),(10,4),15).
edge((7,4),(8,4),15).
edge((10,4),(11,4),15).
edge((11,4),(12,4),15).
edge((12,4),(13,4),15).
edge((13,4),(12,4),15).
edge((12,4),(11,4),15).
edge((11,4),(10,4),15).
edge((8,4),(7,4),15).
edge((10,4),(10,3),15).
edge((8,4),(8,3),15).
edge((10,3),(9,3),15).
edge((9,3),(8,3),15).
edge((10,3),(10,2),15).
edge((9,3),(9,2),15).
edge((11,2),(10,2),15).
edge((10,2),(9,2),15).
edge((11,2),(11,1),15).
edge((10,2),(10,1),15).
edge((9,2),(9,1),15).
edge((13,1),(12,1),15).
edge((12,1),(11,1),15).
edge((10,1),(9,1),15).
edge((9,1),(8,1),15).
edge((8,1),(7,1),15).
conflict(v,(7,1),(7,1)).
conflict(v,(8,1),(8,1)).
conflict(v,(9,1),(9,1)).
conflict(v,(10,1),(10,1)).
conflict(v,(11,1),(11,1)).
conflict(v,(12,1),(12,1)).
conflict(v,(13,1),(13,1)).
conflict(v,(9,2),(9,2)).
conflict(v,(10,2),(10,2)).
conflict(v,(11,2),(11,2)).
conflict(v,(8,3),(8,3)).
conflict(v,(9,3),(9,3)).
conflict(v,(10,3),(10,3)).
conflict(v,(7,4),(7,4)).
conflict(v,(8,4),(8,4)).
conflict(v,(10,4),(10,4)).
conflict(v,(11,4),(11,4)).
conflict(v,(12,4),(12,4)).
conflict(v,(13,4),(13,4)).
conflict(e,((7,1),(8,1)),((8,1),(7,1))).
conflict(e,((8,1),(7,1)),((7,1),(8,1))).
conflict(e,((8,1),(9,1)),((9,1),(8,1))).
conflict(e,((9,1),(8,1)),((8,1),(9,1))).
conflict(e,((9,1),(9,2)),((9,2),(9,1))).
conflict(e,((9,1),(10,1)),((10,1),(9,1))).
conflict(e,((10,1),(9,1)),((9,1),(10,1))).
conflict(e,((10,1),(10,2)),((10,2),(10,1))).
conflict(e,((11,1),(11,2)),((11,2),(11,1))).
conflict(e,((11,1),(12,1)),((12,1),(11,1))).
conflict(e,((12,1),(11,1)),((11,1),(12,1))).
conflict(e,((12,1),(13,1)),((13,1),(12,1))).
conflict(e,((13,1),(12,1)),((12,1),(13,1))).
conflict(e,((9,2),(9,1)),((9,1),(9,2))).
conflict(e,((9,2),(9,3)),((9,3),(9,2))).
conflict(e,((9,2),(10,2)),((10,2),(9,2))).
conflict(e,((10,2),(10,1)),((10,1),(10,2))).
conflict(e,((10,2),(9,2)),((9,2),(10,2))).
conflict(e,((10,2),(10,3)),((10,3),(10,2))).
conflict(e,((10,2),(11,2)),((11,2),(10,2))).
conflict(e,((11,2),(11,1)),((11,1),(11,2))).
conflict(e,((11,2),(10,2)),((10,2),(11,2))).
conflict(e,((8,3),(8,4)),((8,4),(8,3))).
conflict(e,((8,3),(9,3)),((9,3),(8,3))).
conflict(e,((9,3),(9,2)),((9,2),(9,3))).
conflict(e,((9,3),(8,3)),((8,3),(9,3))).
conflict(e,((9,3),(10,3)),((10,3),(9,3))).
conflict(e,((10,3),(10,2)),((10,2),(10,3))).
conflict(e,((10,3),(9,3)),((9,3),(10,3))).
conflict(e,((10,3),(10,4)),((10,4),(10,3))).
conflict(e,((7,4),(8,4)),((8,4),(7,4))).
conflict(e,((8,4),(8,3)),((8,3),(8,4))).
conflict(e,((8,4),(7,4)),((7,4),(8,4))).
conflict(e,((10,4),(10,3)),((10,3),(10,4))).
conflict(e,((10,4),(11,4)),((11,4),(10,4))).
conflict(e,((11,4),(10,4)),((10,4),(11,4))).
conflict(e,((11,4),(12,4)),((12,4),(11,4))).
conflict(e,((12,4),(11,4)),((11,4),(12,4))).
conflict(e,((12,4),(13,4)),((13,4),(12,4))).
conflict(e,((13,4),(12,4)),((12,4),(13,4))).
conflict(e,((8,1),(7,1)),((8,1),(7,1))).
conflict(e,((7,1),(8,1)),((7,1),(8,1))).
conflict(e,((9,1),(8,1)),((9,1),(8,1))).
conflict(e,((8,1),(9,1)),((8,1),(9,1))).
conflict(e,((9,2),(9,1)),((9,2),(9,1))).
conflict(e,((10,1),(9,1)),((10,1),(9,1))).
conflict(e,((9,1),(10,1)),((9,1),(10,1))).
conflict(e,((10,2),(10,1)),((10,2),(10,1))).
conflict(e,((11,2),(11,1)),((11,2),(11,1))).
conflict(e,((12,1),(11,1)),((12,1),(11,1))).
conflict(e,((11,1),(12,1)),((11,1),(12,1))).
conflict(e,((13,1),(12,1)),((13,1),(12,1))).
conflict(e,((12,1),(13,1)),((12,1),(13,1))).
conflict(e,((9,1),(9,2)),((9,1),(9,2))).
conflict(e,((9,3),(9,2)),((9,3),(9,2))).
conflict(e,((10,2),(9,2)),((10,2),(9,2))).
conflict(e,((10,1),(10,2)),((10,1),(10,2))).
conflict(e,((9,2),(10,2)),((9,2),(10,2))).
conflict(e,((10,3),(10,2)),((10,3),(10,2))).
conflict(e,((11,2),(10,2)),((11,2),(10,2))).
conflict(e,((11,1),(11,2)),((11,1),(11,2))).
conflict(e,((10,2),(11,2)),((10,2),(11,2))).
conflict(e,((8,4),(8,3)),((8,4),(8,3))).
conflict(e,((9,3),(8,3)),((9,3),(8,3))).
conflict(e,((9,2),(9,3)),((9,2),(9,3))).
conflict(e,((8,3),(9,3)),((8,3),(9,3))).
conflict(e,((10,3),(9,3)),((10,3),(9,3))).
conflict(e,((10,2),(10,3)),((10,2),(10,3))).
conflict(e,((9,3),(10,3)),((9,3),(10,3))).
conflict(e,((10,4),(10,3)),((10,4),(10,3))).
conflict(e,((8,4),(7,4)),((8,4),(7,4))).
conflict(e,((8,3),(8,4)),((8,3),(8,4))).
conflict(e,((7,4),(8,4)),((7,4),(8,4))).
conflict(e,((10,3),(10,4)),((10,3),(10,4))).
conflict(e,((11,4),(10,4)),((11,4),(10,4))).
conflict(e,((10,4),(11,4)),((10,4),(11,4))).
conflict(e,((12,4),(11,4)),((12,4),(11,4))).
conflict(e,((11,4),(12,4)),((11,4),(12,4))).
conflict(e,((13,4),(12,4)),((13,4),(12,4))).
conflict(e,((12,4),(13,4)),((12,4),(13,4))).
task((1,pickup),(7,1)).
task((2,pickup),(12,1)).
task((3,pickup),(11,1)).
task((4,pickup),(12,1)).
task((5,pickup),(9,1)).
task((6,pickup),(8,1)).
task((1,putdown),(10,4)).
task((2,putdown),(8,1)).
task((3,putdown),(7,1)).
task((4,putdown),(9,1)).
task((5,putdown),(10,4)).
task((6,putdown),(13,4)).
home(1,(10,1)).
home(2,(13,1)).
nearest((7,1),(8,1),15).
nearest((8,1),(9,1),15).
nearest((9,1),(10,1),15).
nearest((11,1),(12,1),15).
nearest((12,1),(13,1),15).
nearest((9,1),(9,2),15).
nearest((10,1),(10,2),15).
nearest((11,1),(11,2),15).
nearest((9,2),(10,2),15).
nearest((10,2),(11,2),15).
nearest((9,2),(9,3),15).
nearest((10,2),(10,3),15).
nearest((8,3),(9,3),15).
nearest((9,3),(10,3),15).
nearest((8,3),(8,4),15).
nearest((10,3),(10,4),15).
nearest((7,4),(8,4),15).
nearest((10,4),(11,4),15).
nearest((11,4),(12,4),15).
nearest((12,4),(13,4),15).
nearest((13,4),(12,4),15).
nearest((12,4),(11,4),15).
nearest((11,4),(10,4),15).
nearest((8,4),(7,4),15).
nearest((10,4),(10,3),15).
nearest((8,4),(8,3),15).
nearest((10,3),(9,3),15).
nearest((9,3),(8,3),15).
nearest((10,3),(10,2),15).
nearest((9,3),(9,2),15).
nearest((11,2),(10,2),15).
nearest((10,2),(9,2),15).
nearest((11,2),(11,1),15).
nearest((10,2),(10,1),15).
nearest((9,2),(9,1),15).
nearest((13,1),(12,1),15).
nearest((12,1),(11,1),15).
nearest((10,1),(9,1),15).
nearest((9,1),(8,1),15).
nearest((8,1),(7,1),15).
entrypoint((7,1),(7,1),0).
entrypoint((13,1),(13,1),0).
entrypoint((12,1),(12,1),0).
entrypoint((11,1),(11,1),0).
entrypoint((9,1),(9,1),0).
entrypoint((8,1),(8,1),0).
entrypoint((10,4),(10,4),0).
entrypoint((10,1),(10,1),0).
entrypoint((12,4),(13,4),15).
on_deadend((7,1),(7,1)).
on_deadend((13,4),(13,4)).
on_deadend((13,1),(13,1)).
on_deadend((12,1),(13,1)).
on_deadend((12,4),(13,4)).
on_deadend((8,1),(7,1)).
on_deadend((11,4),(13,4)).
on_deadend((11,1),(13,1)).
on_deadend((11,2),(13,1)).
on_deadend((10,4),(13,4)).
endpoint_access((7,1),(7,1)).
endpoint_access((13,1),(13,1)).
endpoint_access((12,1),(12,1)).
endpoint_access((11,1),(11,1)).
endpoint_access((9,1),(9,1)).
endpoint_access((8,1),(8,1)).
endpoint_access((10,4),(10,4)).
endpoint_access((10,1),(10,1)).
endpoint_access((12,4),(13,4)).
endpoint_access((13,4),(13,4)).
endpoint_access((12,1),(13,1)).
endpoint_access((8,1),(7,1)).
endpoint_access((11,4),(13,4)).
endpoint_access((11,1),(13,1)).
endpoint_access((11,2),(13,1)).
endpoint_access((10,4),(13,4)).
shortest_path((7,1),(12,1),105,(8,1)).
shortest_path((7,1),(11,1),90,(8,1)).
shortest_path((7,1),(9,1),30,(8,1)).
shortest_path((7,1),(8,1),15,(8,1)).
shortest_path((7,1),(10,4),90,(8,1)).
shortest_path((7,1),(13,4),135,(8,1)).
shortest_path((7,1),(10,1),45,(8,1)).
shortest_path((7,1),(13,1),120,(8,1)).
shortest_path((12,1),(7,1),105,(11,1)).
shortest_path((12,1),(11,1),15,(11,1)).
shortest_path((12,1),(9,1),75,(11,1)).
shortest_path((12,1),(8,1),90,(11,1)).
shortest_path((12,1),(10,4),75,(11,1)).
shortest_path((12,1),(13,4),120,(11,1)).
shortest_path((12,1),(10,1),60,(11,1)).
shortest_path((12,1),(13,1),15,(13,1)).
shortest_path((11,1),(7,1),90,(11,2)).
shortest_path((11,1),(12,1),15,(12,1)).
shortest_path((11,1),(9,1),60,(11,2)).
shortest_path((11,1),(8,1),75,(11,2)).
shortest_path((11,1),(10,4),60,(11,2)).
shortest_path((11,1),(13,4),105,(11,2)).
shortest_path((11,1),(10,1),45,(11,2)).
shortest_path((11,1),(13,1),30,(12,1)).
shortest_path((9,1),(7,1),30,(8,1)).
shortest_path((9,1),(12,1),75,(10,1)).
shortest_path((9,1),(12,1),75,(9,2)).
shortest_path((9,1),(11,1),60,(10,1)).
shortest_path((9,1),(11,1),60,(9,2)).
shortest_path((9,1),(8,1),15,(8,1)).
shortest_path((9,1),(10,4),60,(10,1)).
shortest_path((9,1),(10,4),60,(9,2)).
shortest_path((9,1),(13,4),105,(10,1)).
shortest_path((9,1),(13,4),105,(9,2)).
shortest_path((9,1),(10,1),15,(10,1)).
shortest_path((9,1),(13,1),90,(10,1)).
shortest_path((9,1),(13,1),90,(9,2)).
shortest_path((8,1),(7,1),15,(7,1)).
shortest_path((8,1),(12,1),90,(9,1)).
shortest_path((8,1),(11,1),75,(9,1)).
shortest_path((8,1),(9,1),15,(9,1)).
shortest_path((8,1),(10,4),75,(9,1)).
shortest_path((8,1),(13,4),120,(9,1)).
shortest_path((8,1),(10,1),30,(9,1)).
shortest_path((8,1),(13,1),105,(9,1)).
shortest_path((10,4),(7,1),90,(10,3)).
shortest_path((10,4),(12,1),75,(10,3)).
shortest_path((10,4),(11,1),60,(10,3)).
shortest_path((10,4),(9,1),60,(10,3)).
shortest_path((10,4),(8,1),75,(10,3)).
shortest_path((10,4),(13,4),45,(11,4)).
shortest_path((10,4),(10,1),45,(10,3)).
shortest_path((10,4),(13,1),90,(10,3)).
shortest_path((13,4),(7,1),135,(12,4)).
shortest_path((13,4),(12,1),120,(12,4)).
shortest_path((13,4),(11,1),105,(12,4)).
shortest_path((13,4),(9,1),105,(12,4)).
shortest_path((13,4),(8,1),120,(12,4)).
shortest_path((13,4),(10,4),45,(12,4)).
shortest_path((13,4),(10,1),90,(12,4)).
shortest_path((13,4),(13,1),135,(12,4)).
shortest_path((10,1),(7,1),45,(9,1)).
shortest_path((10,1),(12,1),60,(10,2)).
shortest_path((10,1),(11,1),45,(10,2)).
shortest_path((10,1),(9,1),15,(9,1)).
shortest_path((10,1),(8,1),30,(9,1)).
shortest_path((10,1),(10,4),45,(10,2)).
shortest_path((10,1),(13,4),90,(10,2)).
shortest_path((10,1),(13,1),75,(10,2)).
shortest_path((13,1),(7,1),120,(12,1)).
shortest_path((13,1),(12,1),15,(12,1)).
shortest_path((13,1),(11,1),30,(12,1)).
shortest_path((13,1),(9,1),90,(12,1)).
shortest_path((13,1),(8,1),105,(12,1)).
shortest_path((13,1),(10,4),90,(12,1)).
shortest_path((13,1),(13,4),135,(12,1)).
shortest_path((13,1),(10,1),75,(12,1)).
shortest_path((9,2),(7,1),45,(9,1)).
shortest_path((9,2),(12,1),60,(10,2)).
shortest_path((9,2),(11,1),45,(10,2)).
shortest_path((9,2),(9,1),15,(9,1)).
shortest_path((9,2),(8,1),30,(9,1)).
shortest_path((9,2),(10,4),45,(10,2)).
shortest_path((9,2),(10,4),45,(9,3)).
shortest_path((9,2),(13,4),90,(10,2)).
shortest_path((9,2),(13,4),90,(9,3)).
shortest_path((9,2),(10,1),30,(10,2)).
shortest_path((9,2),(10,1),30,(9,1)).
shortest_path((9,2),(13,1),75,(10,2)).
shortest_path((10,2),(7,1),60,(9,2)).
shortest_path((10,2),(7,1),60,(10,1)).
shortest_path((10,2),(12,1),45,(11,2)).
shortest_path((10,2),(11,1),30,(11,2)).
shortest_path((10,2),(9,1),30,(9,2)).
shortest_path((10,2),(9,1),30,(10,1)).
shortest_path((10,2),(8,1),45,(9,2)).
shortest_path((10,2),(8,1),45,(10,1)).
shortest_path((10,2),(10,4),30,(10,3)).
shortest_path((10,2),(13,4),75,(10,3)).
shortest_path((10,2),(10,1),15,(10,1)).
shortest_path((10,2),(13,1),60,(11,2)).
shortest_path((11,2),(7,1),75,(10,2)).
shortest_path((11,2),(12,1),30,(11,1)).
shortest_path((11,2),(11,1),15,(11,1)).
shortest_path((11,2),(9,1),45,(10,2)).
shortest_path((11,2),(8,1),60,(10,2)).
shortest_path((11,2),(10,4),45,(10,2)).
shortest_path((11,2),(13,4),90,(10,2)).
shortest_path((11,2),(10,1),30,(10,2)).
shortest_path((11,2),(13,1),45,(11,1)).
shortest_path((9,3),(7,1),60,(9,2)).
shortest_path((9,3),(12,1),75,(10,3)).
shortest_path((9,3),(12,1),75,(9,2)).
shortest_path((9,3),(11,1),60,(10,3)).
shortest_path((9,3),(11,1),60,(9,2)).
shortest_path((9,3),(9,1),30,(9,2)).
shortest_path((9,3),(8,1),45,(9,2)).
shortest_path((9,3),(10,4),30,(10,3)).
shortest_path((9,3),(13,4),75,(10,3)).
shortest_path((9,3),(10,1),45,(10,3)).
shortest_path((9,3),(10,1),45,(9,2)).
shortest_path((9,3),(13,1),90,(10,3)).
shortest_path((9,3),(13,1),90,(9,2)).
shortest_path((10,3),(7,1),75,(9,3)).
shortest_path((10,3),(7,1),75,(10,2)).
shortest_path((10,3),(12,1),60,(10,2)).
shortest_path((10,3),(11,1),45,(10,2)).
shortest_path((10,3),(9,1),45,(9,3)).
shortest_path((10,3),(9,1),45,(10,2)).
shortest_path((10,3),(8,1),60,(9,3)).
shortest_path((10,3),(8,1),60,(10,2)).
shortest_path((10,3),(10,4),15,(10,4)).
shortest_path((10,3),(13,4),60,(10,4)).
shortest_path((10,3),(10,1),30,(10,2)).
shortest_path((10,3),(13,1),75,(10,2)).
shortest_path((8,3),(7,1),75,(9,3)).
shortest_path((8,3),(12,1),90,(9,3)).
shortest_path((8,3),(11,1),75,(9,3)).
shortest_path((8,3),(9,1),45,(9,3)).
shortest_path((8,3),(8,1),60,(9,3)).
shortest_path((8,3),(10,4),45,(9,3)).
shortest_path((8,3),(13,4),90,(9,3)).
shortest_path((8,3),(10,1),60,(9,3)).
shortest_path((8,3),(13,1),105,(9,3)).
shortest_path((8,4),(7,1),90,(8,3)).
shortest_path((8,4),(12,1),105,(8,3)).
shortest_path((8,4),(11,1),90,(8,3)).
shortest_path((8,4),(9,1),60,(8,3)).
shortest_path((8,4),(8,1),75,(8,3)).
shortest_path((8,4),(10,4),60,(8,3)).
shortest_path((8,4),(13,4),105,(8,3)).
shortest_path((8,4),(10,1),75,(8,3)).
shortest_path((8,4),(13,1),120,(8,3)).
shortest_path((7,4),(7,1),105,(8,4)).
shortest_path((7,4),(12,1),120,(8,4)).
shortest_path((7,4),(11,1),105,(8,4)).
shortest_path((7,4),(9,1),75,(8,4)).
shortest_path((7,4),(8,1),90,(8,4)).
shortest_path((7,4),(10,4),75,(8,4)).
shortest_path((7,4),(13,4),120,(8,4)).
shortest_path((7,4),(10,1),90,(8,4)).
shortest_path((7,4),(13,1),135,(8,4)).
shortest_path((11,4),(7,1),105,(10,4)).
shortest_path((11,4),(12,1),90,(10,4)).
shortest_path((11,4),(11,1),75,(10,4)).
shortest_path((11,4),(9,1),75,(10,4)).
shortest_path((11,4),(8,1),90,(10,4)).
shortest_path((11,4),(10,4),15,(10,4)).
shortest_path((11,4),(13,4),30,(12,4)).
shortest_path((11,4),(10,1),60,(10,4)).
shortest_path((11,4),(13,1),105,(10,4)).
shortest_path((12,4),(7,1),120,(11,4)).
shortest_path((12,4),(12,1),105,(11,4)).
shortest_path((12,4),(11,1),90,(11,4)).
shortest_path((12,4),(9,1),90,(11,4)).
shortest_path((12,4),(8,1),105,(11,4)).
shortest_path((12,4),(10,4),30,(11,4)).
shortest_path((12,4),(13,4),15,(13,4)).
shortest_path((12,4),(10,1),75,(11,4)).
shortest_path((12,4),(13,1),120,(11,4)).
robot(1).
robot(2).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(wait,(6,pickup),(2,putdown)).
depends(wait,(1,pickup),(3,putdown)).
depends(wait,(5,pickup),(4,putdown)).
start(1,(10,1)).
start(2,(13,1)).

