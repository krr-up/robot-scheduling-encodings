edge((1,1),(2,1),15).
edge((2,1),(3,1),15).
edge((3,1),(4,1),15).
edge((4,1),(5,1),15).
edge((5,1),(6,1),15).
edge((6,1),(7,1),15).
edge((7,1),(8,1),15).
edge((8,1),(9,1),15).
edge((9,1),(10,1),15).
edge((10,1),(11,1),15).
edge((11,1),(12,1),15).
edge((13,1),(14,1),15).
edge((14,1),(15,1),15).
edge((24,1),(25,1),15).
edge((25,1),(26,1),15).
edge((26,1),(27,1),15).
edge((28,1),(29,1),15).
edge((36,1),(37,1),15).
edge((37,1),(38,1),15).
edge((1,1),(1,2),15).
edge((4,1),(4,2),15).
edge((6,1),(6,2),15).
edge((7,1),(7,2),15).
edge((12,1),(12,2),15).
edge((14,1),(14,2),15).
edge((23,1),(23,2),15).
edge((25,1),(25,2),15).
edge((26,1),(26,2),15).
edge((27,1),(27,2),15).
edge((28,1),(28,2),15).
edge((36,1),(36,2),15).
edge((1,2),(2,2),15).
edge((3,2),(4,2),15).
edge((5,2),(6,2),15).
edge((7,2),(8,2),15).
edge((8,2),(9,2),15).
edge((9,2),(10,2),15).
edge((10,2),(11,2),15).
edge((12,2),(13,2),15).
edge((13,2),(14,2),15).
edge((24,2),(25,2),15).
edge((27,2),(28,2),15).
edge((32,2),(33,2),15).
edge((33,2),(34,2),15).
edge((34,2),(35,2),15).
edge((35,2),(36,2),15).
edge((36,2),(37,2),15).
edge((2,2),(2,3),15).
edge((7,2),(7,3),15).
edge((11,2),(11,3),15).
edge((13,2),(13,3),15).
edge((15,2),(15,3),15).
edge((23,2),(23,3),15).
edge((24,2),(24,3),15).
edge((27,2),(27,3),15).
edge((30,2),(30,3),15).
edge((35,2),(35,3),15).
edge((40,2),(40,3),15).
edge((7,3),(8,3),15).
edge((10,3),(11,3),15).
edge((13,3),(14,3),15).
edge((14,3),(15,3),15).
edge((23,3),(24,3),15).
edge((31,3),(32,3),15).
edge((32,3),(33,3),15).
edge((33,3),(34,3),15).
edge((34,3),(35,3),15).
edge((35,3),(36,3),15).
edge((37,3),(38,3),15).
edge((38,3),(39,3),15).
edge((39,3),(40,3),15).
edge((5,3),(5,4),15).
edge((6,3),(6,4),15).
edge((7,3),(7,4),15).
edge((8,3),(8,4),15).
edge((9,3),(9,4),15).
edge((13,3),(13,4),15).
edge((14,3),(14,4),15).
edge((21,3),(21,4),15).
edge((23,3),(23,4),15).
edge((25,3),(25,4),15).
edge((27,3),(27,4),15).
edge((30,3),(30,4),15).
edge((31,3),(31,4),15).
edge((34,3),(34,4),15).
edge((36,3),(36,4),15).
edge((37,3),(37,4),15).
edge((1,4),(2,4),15).
edge((2,4),(3,4),15).
edge((3,4),(4,4),15).
edge((4,4),(5,4),15).
edge((5,4),(6,4),15).
edge((6,4),(7,4),15).
edge((8,4),(9,4),15).
edge((9,4),(10,4),15).
edge((10,4),(11,4),15).
edge((14,4),(15,4),15).
edge((15,4),(16,4),15).
edge((16,4),(17,4),15).
edge((17,4),(18,4),15).
edge((18,4),(19,4),15).
edge((19,4),(20,4),15).
edge((20,4),(21,4),15).
edge((21,4),(22,4),15).
edge((22,4),(23,4),15).
edge((23,4),(24,4),15).
edge((25,4),(26,4),15).
edge((26,4),(27,4),15).
edge((27,4),(28,4),15).
edge((28,4),(29,4),15).
edge((29,4),(30,4),15).
edge((30,4),(31,4),15).
edge((31,4),(32,4),15).
edge((33,4),(34,4),15).
edge((34,4),(35,4),15).
edge((36,4),(37,4),15).
edge((37,4),(38,4),15).
edge((38,4),(39,4),15).
edge((39,4),(40,4),15).
edge((40,4),(39,4),15).
edge((39,4),(38,4),15).
edge((38,4),(37,4),15).
edge((37,4),(36,4),15).
edge((35,4),(34,4),15).
edge((34,4),(33,4),15).
edge((32,4),(31,4),15).
edge((31,4),(30,4),15).
edge((30,4),(29,4),15).
edge((29,4),(28,4),15).
edge((28,4),(27,4),15).
edge((27,4),(26,4),15).
edge((26,4),(25,4),15).
edge((24,4),(23,4),15).
edge((23,4),(22,4),15).
edge((22,4),(21,4),15).
edge((21,4),(20,4),15).
edge((20,4),(19,4),15).
edge((19,4),(18,4),15).
edge((18,4),(17,4),15).
edge((17,4),(16,4),15).
edge((16,4),(15,4),15).
edge((15,4),(14,4),15).
edge((11,4),(10,4),15).
edge((10,4),(9,4),15).
edge((9,4),(8,4),15).
edge((7,4),(6,4),15).
edge((6,4),(5,4),15).
edge((5,4),(4,4),15).
edge((4,4),(3,4),15).
edge((3,4),(2,4),15).
edge((2,4),(1,4),15).
edge((37,4),(37,3),15).
edge((36,4),(36,3),15).
edge((34,4),(34,3),15).
edge((31,4),(31,3),15).
edge((30,4),(30,3),15).
edge((27,4),(27,3),15).
edge((25,4),(25,3),15).
edge((23,4),(23,3),15).
edge((21,4),(21,3),15).
edge((14,4),(14,3),15).
edge((13,4),(13,3),15).
edge((9,4),(9,3),15).
edge((8,4),(8,3),15).
edge((7,4),(7,3),15).
edge((6,4),(6,3),15).
edge((5,4),(5,3),15).
edge((40,3),(39,3),15).
edge((39,3),(38,3),15).
edge((38,3),(37,3),15).
edge((36,3),(35,3),15).
edge((35,3),(34,3),15).
edge((34,3),(33,3),15).
edge((33,3),(32,3),15).
edge((32,3),(31,3),15).
edge((24,3),(23,3),15).
edge((15,3),(14,3),15).
edge((14,3),(13,3),15).
edge((11,3),(10,3),15).
edge((8,3),(7,3),15).
edge((40,3),(40,2),15).
edge((35,3),(35,2),15).
edge((30,3),(30,2),15).
edge((27,3),(27,2),15).
edge((24,3),(24,2),15).
edge((23,3),(23,2),15).
edge((15,3),(15,2),15).
edge((13,3),(13,2),15).
edge((11,3),(11,2),15).
edge((7,3),(7,2),15).
edge((2,3),(2,2),15).
edge((37,2),(36,2),15).
edge((36,2),(35,2),15).
edge((35,2),(34,2),15).
edge((34,2),(33,2),15).
edge((33,2),(32,2),15).
edge((28,2),(27,2),15).
edge((25,2),(24,2),15).
edge((14,2),(13,2),15).
edge((13,2),(12,2),15).
edge((11,2),(10,2),15).
edge((10,2),(9,2),15).
edge((9,2),(8,2),15).
edge((8,2),(7,2),15).
edge((6,2),(5,2),15).
edge((4,2),(3,2),15).
edge((2,2),(1,2),15).
edge((36,2),(36,1),15).
edge((28,2),(28,1),15).
edge((27,2),(27,1),15).
edge((26,2),(26,1),15).
edge((25,2),(25,1),15).
edge((23,2),(23,1),15).
edge((14,2),(14,1),15).
edge((12,2),(12,1),15).
edge((7,2),(7,1),15).
edge((6,2),(6,1),15).
edge((4,2),(4,1),15).
edge((1,2),(1,1),15).
edge((38,1),(37,1),15).
edge((37,1),(36,1),15).
edge((29,1),(28,1),15).
edge((27,1),(26,1),15).
edge((26,1),(25,1),15).
edge((25,1),(24,1),15).
edge((15,1),(14,1),15).
edge((14,1),(13,1),15).
edge((12,1),(11,1),15).
edge((11,1),(10,1),15).
edge((10,1),(9,1),15).
edge((9,1),(8,1),15).
edge((8,1),(7,1),15).
edge((7,1),(6,1),15).
edge((6,1),(5,1),15).
edge((5,1),(4,1),15).
edge((4,1),(3,1),15).
edge((3,1),(2,1),15).
edge((2,1),(1,1),15).
conflict(v,(1,1),(1,1)).
conflict(v,(2,1),(2,1)).
conflict(v,(3,1),(3,1)).
conflict(v,(4,1),(4,1)).
conflict(v,(5,1),(5,1)).
conflict(v,(6,1),(6,1)).
conflict(v,(7,1),(7,1)).
conflict(v,(8,1),(8,1)).
conflict(v,(9,1),(9,1)).
conflict(v,(10,1),(10,1)).
conflict(v,(11,1),(11,1)).
conflict(v,(12,1),(12,1)).
conflict(v,(13,1),(13,1)).
conflict(v,(14,1),(14,1)).
conflict(v,(15,1),(15,1)).
conflict(v,(23,1),(23,1)).
conflict(v,(24,1),(24,1)).
conflict(v,(25,1),(25,1)).
conflict(v,(26,1),(26,1)).
conflict(v,(27,1),(27,1)).
conflict(v,(28,1),(28,1)).
conflict(v,(29,1),(29,1)).
conflict(v,(36,1),(36,1)).
conflict(v,(37,1),(37,1)).
conflict(v,(38,1),(38,1)).
conflict(v,(1,2),(1,2)).
conflict(v,(2,2),(2,2)).
conflict(v,(3,2),(3,2)).
conflict(v,(4,2),(4,2)).
conflict(v,(5,2),(5,2)).
conflict(v,(6,2),(6,2)).
conflict(v,(7,2),(7,2)).
conflict(v,(8,2),(8,2)).
conflict(v,(9,2),(9,2)).
conflict(v,(10,2),(10,2)).
conflict(v,(11,2),(11,2)).
conflict(v,(12,2),(12,2)).
conflict(v,(13,2),(13,2)).
conflict(v,(14,2),(14,2)).
conflict(v,(15,2),(15,2)).
conflict(v,(23,2),(23,2)).
conflict(v,(24,2),(24,2)).
conflict(v,(25,2),(25,2)).
conflict(v,(26,2),(26,2)).
conflict(v,(27,2),(27,2)).
conflict(v,(28,2),(28,2)).
conflict(v,(30,2),(30,2)).
conflict(v,(32,2),(32,2)).
conflict(v,(33,2),(33,2)).
conflict(v,(34,2),(34,2)).
conflict(v,(35,2),(35,2)).
conflict(v,(36,2),(36,2)).
conflict(v,(37,2),(37,2)).
conflict(v,(40,2),(40,2)).
conflict(v,(2,3),(2,3)).
conflict(v,(5,3),(5,3)).
conflict(v,(6,3),(6,3)).
conflict(v,(7,3),(7,3)).
conflict(v,(8,3),(8,3)).
conflict(v,(9,3),(9,3)).
conflict(v,(10,3),(10,3)).
conflict(v,(11,3),(11,3)).
conflict(v,(13,3),(13,3)).
conflict(v,(14,3),(14,3)).
conflict(v,(15,3),(15,3)).
conflict(v,(21,3),(21,3)).
conflict(v,(23,3),(23,3)).
conflict(v,(24,3),(24,3)).
conflict(v,(25,3),(25,3)).
conflict(v,(27,3),(27,3)).
conflict(v,(30,3),(30,3)).
conflict(v,(31,3),(31,3)).
conflict(v,(32,3),(32,3)).
conflict(v,(33,3),(33,3)).
conflict(v,(34,3),(34,3)).
conflict(v,(35,3),(35,3)).
conflict(v,(36,3),(36,3)).
conflict(v,(37,3),(37,3)).
conflict(v,(38,3),(38,3)).
conflict(v,(39,3),(39,3)).
conflict(v,(40,3),(40,3)).
conflict(v,(1,4),(1,4)).
conflict(v,(2,4),(2,4)).
conflict(v,(3,4),(3,4)).
conflict(v,(4,4),(4,4)).
conflict(v,(5,4),(5,4)).
conflict(v,(6,4),(6,4)).
conflict(v,(7,4),(7,4)).
conflict(v,(8,4),(8,4)).
conflict(v,(9,4),(9,4)).
conflict(v,(10,4),(10,4)).
conflict(v,(11,4),(11,4)).
conflict(v,(13,4),(13,4)).
conflict(v,(14,4),(14,4)).
conflict(v,(15,4),(15,4)).
conflict(v,(16,4),(16,4)).
conflict(v,(17,4),(17,4)).
conflict(v,(18,4),(18,4)).
conflict(v,(19,4),(19,4)).
conflict(v,(20,4),(20,4)).
conflict(v,(21,4),(21,4)).
conflict(v,(22,4),(22,4)).
conflict(v,(23,4),(23,4)).
conflict(v,(24,4),(24,4)).
conflict(v,(25,4),(25,4)).
conflict(v,(26,4),(26,4)).
conflict(v,(27,4),(27,4)).
conflict(v,(28,4),(28,4)).
conflict(v,(29,4),(29,4)).
conflict(v,(30,4),(30,4)).
conflict(v,(31,4),(31,4)).
conflict(v,(32,4),(32,4)).
conflict(v,(33,4),(33,4)).
conflict(v,(34,4),(34,4)).
conflict(v,(35,4),(35,4)).
conflict(v,(36,4),(36,4)).
conflict(v,(37,4),(37,4)).
conflict(v,(38,4),(38,4)).
conflict(v,(39,4),(39,4)).
conflict(v,(40,4),(40,4)).
conflict(e,((1,1),(1,2)),((1,2),(1,1))).
conflict(e,((1,1),(2,1)),((2,1),(1,1))).
conflict(e,((2,1),(1,1)),((1,1),(2,1))).
conflict(e,((2,1),(3,1)),((3,1),(2,1))).
conflict(e,((3,1),(2,1)),((2,1),(3,1))).
conflict(e,((3,1),(4,1)),((4,1),(3,1))).
conflict(e,((4,1),(3,1)),((3,1),(4,1))).
conflict(e,((4,1),(4,2)),((4,2),(4,1))).
conflict(e,((4,1),(5,1)),((5,1),(4,1))).
conflict(e,((5,1),(4,1)),((4,1),(5,1))).
conflict(e,((5,1),(6,1)),((6,1),(5,1))).
conflict(e,((6,1),(5,1)),((5,1),(6,1))).
conflict(e,((6,1),(6,2)),((6,2),(6,1))).
conflict(e,((6,1),(7,1)),((7,1),(6,1))).
conflict(e,((7,1),(6,1)),((6,1),(7,1))).
conflict(e,((7,1),(7,2)),((7,2),(7,1))).
conflict(e,((7,1),(8,1)),((8,1),(7,1))).
conflict(e,((8,1),(7,1)),((7,1),(8,1))).
conflict(e,((8,1),(9,1)),((9,1),(8,1))).
conflict(e,((9,1),(8,1)),((8,1),(9,1))).
conflict(e,((9,1),(10,1)),((10,1),(9,1))).
conflict(e,((10,1),(9,1)),((9,1),(10,1))).
conflict(e,((10,1),(11,1)),((11,1),(10,1))).
conflict(e,((11,1),(10,1)),((10,1),(11,1))).
conflict(e,((11,1),(12,1)),((12,1),(11,1))).
conflict(e,((12,1),(11,1)),((11,1),(12,1))).
conflict(e,((12,1),(12,2)),((12,2),(12,1))).
conflict(e,((13,1),(14,1)),((14,1),(13,1))).
conflict(e,((14,1),(13,1)),((13,1),(14,1))).
conflict(e,((14,1),(14,2)),((14,2),(14,1))).
conflict(e,((14,1),(15,1)),((15,1),(14,1))).
conflict(e,((15,1),(14,1)),((14,1),(15,1))).
conflict(e,((23,1),(23,2)),((23,2),(23,1))).
conflict(e,((24,1),(25,1)),((25,1),(24,1))).
conflict(e,((25,1),(24,1)),((24,1),(25,1))).
conflict(e,((25,1),(25,2)),((25,2),(25,1))).
conflict(e,((25,1),(26,1)),((26,1),(25,1))).
conflict(e,((26,1),(25,1)),((25,1),(26,1))).
conflict(e,((26,1),(26,2)),((26,2),(26,1))).
conflict(e,((26,1),(27,1)),((27,1),(26,1))).
conflict(e,((27,1),(26,1)),((26,1),(27,1))).
conflict(e,((27,1),(27,2)),((27,2),(27,1))).
conflict(e,((28,1),(28,2)),((28,2),(28,1))).
conflict(e,((28,1),(29,1)),((29,1),(28,1))).
conflict(e,((29,1),(28,1)),((28,1),(29,1))).
conflict(e,((36,1),(36,2)),((36,2),(36,1))).
conflict(e,((36,1),(37,1)),((37,1),(36,1))).
conflict(e,((37,1),(36,1)),((36,1),(37,1))).
conflict(e,((37,1),(38,1)),((38,1),(37,1))).
conflict(e,((38,1),(37,1)),((37,1),(38,1))).
conflict(e,((1,2),(1,1)),((1,1),(1,2))).
conflict(e,((1,2),(2,2)),((2,2),(1,2))).
conflict(e,((2,2),(1,2)),((1,2),(2,2))).
conflict(e,((2,2),(2,3)),((2,3),(2,2))).
conflict(e,((3,2),(4,2)),((4,2),(3,2))).
conflict(e,((4,2),(4,1)),((4,1),(4,2))).
conflict(e,((4,2),(3,2)),((3,2),(4,2))).
conflict(e,((5,2),(6,2)),((6,2),(5,2))).
conflict(e,((6,2),(6,1)),((6,1),(6,2))).
conflict(e,((6,2),(5,2)),((5,2),(6,2))).
conflict(e,((7,2),(7,1)),((7,1),(7,2))).
conflict(e,((7,2),(7,3)),((7,3),(7,2))).
conflict(e,((7,2),(8,2)),((8,2),(7,2))).
conflict(e,((8,2),(7,2)),((7,2),(8,2))).
conflict(e,((8,2),(9,2)),((9,2),(8,2))).
conflict(e,((9,2),(8,2)),((8,2),(9,2))).
conflict(e,((9,2),(10,2)),((10,2),(9,2))).
conflict(e,((10,2),(9,2)),((9,2),(10,2))).
conflict(e,((10,2),(11,2)),((11,2),(10,2))).
conflict(e,((11,2),(10,2)),((10,2),(11,2))).
conflict(e,((11,2),(11,3)),((11,3),(11,2))).
conflict(e,((12,2),(12,1)),((12,1),(12,2))).
conflict(e,((12,2),(13,2)),((13,2),(12,2))).
conflict(e,((13,2),(12,2)),((12,2),(13,2))).
conflict(e,((13,2),(13,3)),((13,3),(13,2))).
conflict(e,((13,2),(14,2)),((14,2),(13,2))).
conflict(e,((14,2),(14,1)),((14,1),(14,2))).
conflict(e,((14,2),(13,2)),((13,2),(14,2))).
conflict(e,((15,2),(15,3)),((15,3),(15,2))).
conflict(e,((23,2),(23,1)),((23,1),(23,2))).
conflict(e,((23,2),(23,3)),((23,3),(23,2))).
conflict(e,((24,2),(24,3)),((24,3),(24,2))).
conflict(e,((24,2),(25,2)),((25,2),(24,2))).
conflict(e,((25,2),(25,1)),((25,1),(25,2))).
conflict(e,((25,2),(24,2)),((24,2),(25,2))).
conflict(e,((26,2),(26,1)),((26,1),(26,2))).
conflict(e,((27,2),(27,1)),((27,1),(27,2))).
conflict(e,((27,2),(27,3)),((27,3),(27,2))).
conflict(e,((27,2),(28,2)),((28,2),(27,2))).
conflict(e,((28,2),(28,1)),((28,1),(28,2))).
conflict(e,((28,2),(27,2)),((27,2),(28,2))).
conflict(e,((30,2),(30,3)),((30,3),(30,2))).
conflict(e,((32,2),(33,2)),((33,2),(32,2))).
conflict(e,((33,2),(32,2)),((32,2),(33,2))).
conflict(e,((33,2),(34,2)),((34,2),(33,2))).
conflict(e,((34,2),(33,2)),((33,2),(34,2))).
conflict(e,((34,2),(35,2)),((35,2),(34,2))).
conflict(e,((35,2),(34,2)),((34,2),(35,2))).
conflict(e,((35,2),(35,3)),((35,3),(35,2))).
conflict(e,((35,2),(36,2)),((36,2),(35,2))).
conflict(e,((36,2),(36,1)),((36,1),(36,2))).
conflict(e,((36,2),(35,2)),((35,2),(36,2))).
conflict(e,((36,2),(37,2)),((37,2),(36,2))).
conflict(e,((37,2),(36,2)),((36,2),(37,2))).
conflict(e,((40,2),(40,3)),((40,3),(40,2))).
conflict(e,((2,3),(2,2)),((2,2),(2,3))).
conflict(e,((5,3),(5,4)),((5,4),(5,3))).
conflict(e,((6,3),(6,4)),((6,4),(6,3))).
conflict(e,((7,3),(7,2)),((7,2),(7,3))).
conflict(e,((7,3),(7,4)),((7,4),(7,3))).
conflict(e,((7,3),(8,3)),((8,3),(7,3))).
conflict(e,((8,3),(7,3)),((7,3),(8,3))).
conflict(e,((8,3),(8,4)),((8,4),(8,3))).
conflict(e,((9,3),(9,4)),((9,4),(9,3))).
conflict(e,((10,3),(11,3)),((11,3),(10,3))).
conflict(e,((11,3),(11,2)),((11,2),(11,3))).
conflict(e,((11,3),(10,3)),((10,3),(11,3))).
conflict(e,((13,3),(13,2)),((13,2),(13,3))).
conflict(e,((13,3),(13,4)),((13,4),(13,3))).
conflict(e,((13,3),(14,3)),((14,3),(13,3))).
conflict(e,((14,3),(13,3)),((13,3),(14,3))).
conflict(e,((14,3),(14,4)),((14,4),(14,3))).
conflict(e,((14,3),(15,3)),((15,3),(14,3))).
conflict(e,((15,3),(15,2)),((15,2),(15,3))).
conflict(e,((15,3),(14,3)),((14,3),(15,3))).
conflict(e,((21,3),(21,4)),((21,4),(21,3))).
conflict(e,((23,3),(23,2)),((23,2),(23,3))).
conflict(e,((23,3),(23,4)),((23,4),(23,3))).
conflict(e,((23,3),(24,3)),((24,3),(23,3))).
conflict(e,((24,3),(24,2)),((24,2),(24,3))).
conflict(e,((24,3),(23,3)),((23,3),(24,3))).
conflict(e,((25,3),(25,4)),((25,4),(25,3))).
conflict(e,((27,3),(27,2)),((27,2),(27,3))).
conflict(e,((27,3),(27,4)),((27,4),(27,3))).
conflict(e,((30,3),(30,2)),((30,2),(30,3))).
conflict(e,((30,3),(30,4)),((30,4),(30,3))).
conflict(e,((31,3),(31,4)),((31,4),(31,3))).
conflict(e,((31,3),(32,3)),((32,3),(31,3))).
conflict(e,((32,3),(31,3)),((31,3),(32,3))).
conflict(e,((32,3),(33,3)),((33,3),(32,3))).
conflict(e,((33,3),(32,3)),((32,3),(33,3))).
conflict(e,((33,3),(34,3)),((34,3),(33,3))).
conflict(e,((34,3),(33,3)),((33,3),(34,3))).
conflict(e,((34,3),(34,4)),((34,4),(34,3))).
conflict(e,((34,3),(35,3)),((35,3),(34,3))).
conflict(e,((35,3),(35,2)),((35,2),(35,3))).
conflict(e,((35,3),(34,3)),((34,3),(35,3))).
conflict(e,((35,3),(36,3)),((36,3),(35,3))).
conflict(e,((36,3),(35,3)),((35,3),(36,3))).
conflict(e,((36,3),(36,4)),((36,4),(36,3))).
conflict(e,((37,3),(37,4)),((37,4),(37,3))).
conflict(e,((37,3),(38,3)),((38,3),(37,3))).
conflict(e,((38,3),(37,3)),((37,3),(38,3))).
conflict(e,((38,3),(39,3)),((39,3),(38,3))).
conflict(e,((39,3),(38,3)),((38,3),(39,3))).
conflict(e,((39,3),(40,3)),((40,3),(39,3))).
conflict(e,((40,3),(40,2)),((40,2),(40,3))).
conflict(e,((40,3),(39,3)),((39,3),(40,3))).
conflict(e,((1,4),(2,4)),((2,4),(1,4))).
conflict(e,((2,4),(1,4)),((1,4),(2,4))).
conflict(e,((2,4),(3,4)),((3,4),(2,4))).
conflict(e,((3,4),(2,4)),((2,4),(3,4))).
conflict(e,((3,4),(4,4)),((4,4),(3,4))).
conflict(e,((4,4),(3,4)),((3,4),(4,4))).
conflict(e,((4,4),(5,4)),((5,4),(4,4))).
conflict(e,((5,4),(5,3)),((5,3),(5,4))).
conflict(e,((5,4),(4,4)),((4,4),(5,4))).
conflict(e,((5,4),(6,4)),((6,4),(5,4))).
conflict(e,((6,4),(6,3)),((6,3),(6,4))).
conflict(e,((6,4),(5,4)),((5,4),(6,4))).
conflict(e,((6,4),(7,4)),((7,4),(6,4))).
conflict(e,((7,4),(7,3)),((7,3),(7,4))).
conflict(e,((7,4),(6,4)),((6,4),(7,4))).
conflict(e,((8,4),(8,3)),((8,3),(8,4))).
conflict(e,((8,4),(9,4)),((9,4),(8,4))).
conflict(e,((9,4),(9,3)),((9,3),(9,4))).
conflict(e,((9,4),(8,4)),((8,4),(9,4))).
conflict(e,((9,4),(10,4)),((10,4),(9,4))).
conflict(e,((10,4),(9,4)),((9,4),(10,4))).
conflict(e,((10,4),(11,4)),((11,4),(10,4))).
conflict(e,((11,4),(10,4)),((10,4),(11,4))).
conflict(e,((13,4),(13,3)),((13,3),(13,4))).
conflict(e,((14,4),(14,3)),((14,3),(14,4))).
conflict(e,((14,4),(15,4)),((15,4),(14,4))).
conflict(e,((15,4),(14,4)),((14,4),(15,4))).
conflict(e,((15,4),(16,4)),((16,4),(15,4))).
conflict(e,((16,4),(15,4)),((15,4),(16,4))).
conflict(e,((16,4),(17,4)),((17,4),(16,4))).
conflict(e,((17,4),(16,4)),((16,4),(17,4))).
conflict(e,((17,4),(18,4)),((18,4),(17,4))).
conflict(e,((18,4),(17,4)),((17,4),(18,4))).
conflict(e,((18,4),(19,4)),((19,4),(18,4))).
conflict(e,((19,4),(18,4)),((18,4),(19,4))).
conflict(e,((19,4),(20,4)),((20,4),(19,4))).
conflict(e,((20,4),(19,4)),((19,4),(20,4))).
conflict(e,((20,4),(21,4)),((21,4),(20,4))).
conflict(e,((21,4),(21,3)),((21,3),(21,4))).
conflict(e,((21,4),(20,4)),((20,4),(21,4))).
conflict(e,((21,4),(22,4)),((22,4),(21,4))).
conflict(e,((22,4),(21,4)),((21,4),(22,4))).
conflict(e,((22,4),(23,4)),((23,4),(22,4))).
conflict(e,((23,4),(23,3)),((23,3),(23,4))).
conflict(e,((23,4),(22,4)),((22,4),(23,4))).
conflict(e,((23,4),(24,4)),((24,4),(23,4))).
conflict(e,((24,4),(23,4)),((23,4),(24,4))).
conflict(e,((25,4),(25,3)),((25,3),(25,4))).
conflict(e,((25,4),(26,4)),((26,4),(25,4))).
conflict(e,((26,4),(25,4)),((25,4),(26,4))).
conflict(e,((26,4),(27,4)),((27,4),(26,4))).
conflict(e,((27,4),(27,3)),((27,3),(27,4))).
conflict(e,((27,4),(26,4)),((26,4),(27,4))).
conflict(e,((27,4),(28,4)),((28,4),(27,4))).
conflict(e,((28,4),(27,4)),((27,4),(28,4))).
conflict(e,((28,4),(29,4)),((29,4),(28,4))).
conflict(e,((29,4),(28,4)),((28,4),(29,4))).
conflict(e,((29,4),(30,4)),((30,4),(29,4))).
conflict(e,((30,4),(30,3)),((30,3),(30,4))).
conflict(e,((30,4),(29,4)),((29,4),(30,4))).
conflict(e,((30,4),(31,4)),((31,4),(30,4))).
conflict(e,((31,4),(31,3)),((31,3),(31,4))).
conflict(e,((31,4),(30,4)),((30,4),(31,4))).
conflict(e,((31,4),(32,4)),((32,4),(31,4))).
conflict(e,((32,4),(31,4)),((31,4),(32,4))).
conflict(e,((33,4),(34,4)),((34,4),(33,4))).
conflict(e,((34,4),(34,3)),((34,3),(34,4))).
conflict(e,((34,4),(33,4)),((33,4),(34,4))).
conflict(e,((34,4),(35,4)),((35,4),(34,4))).
conflict(e,((35,4),(34,4)),((34,4),(35,4))).
conflict(e,((36,4),(36,3)),((36,3),(36,4))).
conflict(e,((36,4),(37,4)),((37,4),(36,4))).
conflict(e,((37,4),(37,3)),((37,3),(37,4))).
conflict(e,((37,4),(36,4)),((36,4),(37,4))).
conflict(e,((37,4),(38,4)),((38,4),(37,4))).
conflict(e,((38,4),(37,4)),((37,4),(38,4))).
conflict(e,((38,4),(39,4)),((39,4),(38,4))).
conflict(e,((39,4),(38,4)),((38,4),(39,4))).
conflict(e,((39,4),(40,4)),((40,4),(39,4))).
conflict(e,((40,4),(39,4)),((39,4),(40,4))).
conflict(e,((1,2),(1,1)),((1,2),(1,1))).
conflict(e,((2,1),(1,1)),((2,1),(1,1))).
conflict(e,((1,1),(2,1)),((1,1),(2,1))).
conflict(e,((3,1),(2,1)),((3,1),(2,1))).
conflict(e,((2,1),(3,1)),((2,1),(3,1))).
conflict(e,((4,1),(3,1)),((4,1),(3,1))).
conflict(e,((3,1),(4,1)),((3,1),(4,1))).
conflict(e,((4,2),(4,1)),((4,2),(4,1))).
conflict(e,((5,1),(4,1)),((5,1),(4,1))).
conflict(e,((4,1),(5,1)),((4,1),(5,1))).
conflict(e,((6,1),(5,1)),((6,1),(5,1))).
conflict(e,((5,1),(6,1)),((5,1),(6,1))).
conflict(e,((6,2),(6,1)),((6,2),(6,1))).
conflict(e,((7,1),(6,1)),((7,1),(6,1))).
conflict(e,((6,1),(7,1)),((6,1),(7,1))).
conflict(e,((7,2),(7,1)),((7,2),(7,1))).
conflict(e,((8,1),(7,1)),((8,1),(7,1))).
conflict(e,((7,1),(8,1)),((7,1),(8,1))).
conflict(e,((9,1),(8,1)),((9,1),(8,1))).
conflict(e,((8,1),(9,1)),((8,1),(9,1))).
conflict(e,((10,1),(9,1)),((10,1),(9,1))).
conflict(e,((9,1),(10,1)),((9,1),(10,1))).
conflict(e,((11,1),(10,1)),((11,1),(10,1))).
conflict(e,((10,1),(11,1)),((10,1),(11,1))).
conflict(e,((12,1),(11,1)),((12,1),(11,1))).
conflict(e,((11,1),(12,1)),((11,1),(12,1))).
conflict(e,((12,2),(12,1)),((12,2),(12,1))).
conflict(e,((14,1),(13,1)),((14,1),(13,1))).
conflict(e,((13,1),(14,1)),((13,1),(14,1))).
conflict(e,((14,2),(14,1)),((14,2),(14,1))).
conflict(e,((15,1),(14,1)),((15,1),(14,1))).
conflict(e,((14,1),(15,1)),((14,1),(15,1))).
conflict(e,((23,2),(23,1)),((23,2),(23,1))).
conflict(e,((25,1),(24,1)),((25,1),(24,1))).
conflict(e,((24,1),(25,1)),((24,1),(25,1))).
conflict(e,((25,2),(25,1)),((25,2),(25,1))).
conflict(e,((26,1),(25,1)),((26,1),(25,1))).
conflict(e,((25,1),(26,1)),((25,1),(26,1))).
conflict(e,((26,2),(26,1)),((26,2),(26,1))).
conflict(e,((27,1),(26,1)),((27,1),(26,1))).
conflict(e,((26,1),(27,1)),((26,1),(27,1))).
conflict(e,((27,2),(27,1)),((27,2),(27,1))).
conflict(e,((28,2),(28,1)),((28,2),(28,1))).
conflict(e,((29,1),(28,1)),((29,1),(28,1))).
conflict(e,((28,1),(29,1)),((28,1),(29,1))).
conflict(e,((36,2),(36,1)),((36,2),(36,1))).
conflict(e,((37,1),(36,1)),((37,1),(36,1))).
conflict(e,((36,1),(37,1)),((36,1),(37,1))).
conflict(e,((38,1),(37,1)),((38,1),(37,1))).
conflict(e,((37,1),(38,1)),((37,1),(38,1))).
conflict(e,((1,1),(1,2)),((1,1),(1,2))).
conflict(e,((2,2),(1,2)),((2,2),(1,2))).
conflict(e,((1,2),(2,2)),((1,2),(2,2))).
conflict(e,((2,3),(2,2)),((2,3),(2,2))).
conflict(e,((4,2),(3,2)),((4,2),(3,2))).
conflict(e,((4,1),(4,2)),((4,1),(4,2))).
conflict(e,((3,2),(4,2)),((3,2),(4,2))).
conflict(e,((6,2),(5,2)),((6,2),(5,2))).
conflict(e,((6,1),(6,2)),((6,1),(6,2))).
conflict(e,((5,2),(6,2)),((5,2),(6,2))).
conflict(e,((7,1),(7,2)),((7,1),(7,2))).
conflict(e,((7,3),(7,2)),((7,3),(7,2))).
conflict(e,((8,2),(7,2)),((8,2),(7,2))).
conflict(e,((7,2),(8,2)),((7,2),(8,2))).
conflict(e,((9,2),(8,2)),((9,2),(8,2))).
conflict(e,((8,2),(9,2)),((8,2),(9,2))).
conflict(e,((10,2),(9,2)),((10,2),(9,2))).
conflict(e,((9,2),(10,2)),((9,2),(10,2))).
conflict(e,((11,2),(10,2)),((11,2),(10,2))).
conflict(e,((10,2),(11,2)),((10,2),(11,2))).
conflict(e,((11,3),(11,2)),((11,3),(11,2))).
conflict(e,((12,1),(12,2)),((12,1),(12,2))).
conflict(e,((13,2),(12,2)),((13,2),(12,2))).
conflict(e,((12,2),(13,2)),((12,2),(13,2))).
conflict(e,((13,3),(13,2)),((13,3),(13,2))).
conflict(e,((14,2),(13,2)),((14,2),(13,2))).
conflict(e,((14,1),(14,2)),((14,1),(14,2))).
conflict(e,((13,2),(14,2)),((13,2),(14,2))).
conflict(e,((15,3),(15,2)),((15,3),(15,2))).
conflict(e,((23,1),(23,2)),((23,1),(23,2))).
conflict(e,((23,3),(23,2)),((23,3),(23,2))).
conflict(e,((24,3),(24,2)),((24,3),(24,2))).
conflict(e,((25,2),(24,2)),((25,2),(24,2))).
conflict(e,((25,1),(25,2)),((25,1),(25,2))).
conflict(e,((24,2),(25,2)),((24,2),(25,2))).
conflict(e,((26,1),(26,2)),((26,1),(26,2))).
conflict(e,((27,1),(27,2)),((27,1),(27,2))).
conflict(e,((27,3),(27,2)),((27,3),(27,2))).
conflict(e,((28,2),(27,2)),((28,2),(27,2))).
conflict(e,((28,1),(28,2)),((28,1),(28,2))).
conflict(e,((27,2),(28,2)),((27,2),(28,2))).
conflict(e,((30,3),(30,2)),((30,3),(30,2))).
conflict(e,((33,2),(32,2)),((33,2),(32,2))).
conflict(e,((32,2),(33,2)),((32,2),(33,2))).
conflict(e,((34,2),(33,2)),((34,2),(33,2))).
conflict(e,((33,2),(34,2)),((33,2),(34,2))).
conflict(e,((35,2),(34,2)),((35,2),(34,2))).
conflict(e,((34,2),(35,2)),((34,2),(35,2))).
conflict(e,((35,3),(35,2)),((35,3),(35,2))).
conflict(e,((36,2),(35,2)),((36,2),(35,2))).
conflict(e,((36,1),(36,2)),((36,1),(36,2))).
conflict(e,((35,2),(36,2)),((35,2),(36,2))).
conflict(e,((37,2),(36,2)),((37,2),(36,2))).
conflict(e,((36,2),(37,2)),((36,2),(37,2))).
conflict(e,((40,3),(40,2)),((40,3),(40,2))).
conflict(e,((2,2),(2,3)),((2,2),(2,3))).
conflict(e,((5,4),(5,3)),((5,4),(5,3))).
conflict(e,((6,4),(6,3)),((6,4),(6,3))).
conflict(e,((7,2),(7,3)),((7,2),(7,3))).
conflict(e,((7,4),(7,3)),((7,4),(7,3))).
conflict(e,((8,3),(7,3)),((8,3),(7,3))).
conflict(e,((7,3),(8,3)),((7,3),(8,3))).
conflict(e,((8,4),(8,3)),((8,4),(8,3))).
conflict(e,((9,4),(9,3)),((9,4),(9,3))).
conflict(e,((11,3),(10,3)),((11,3),(10,3))).
conflict(e,((11,2),(11,3)),((11,2),(11,3))).
conflict(e,((10,3),(11,3)),((10,3),(11,3))).
conflict(e,((13,2),(13,3)),((13,2),(13,3))).
conflict(e,((13,4),(13,3)),((13,4),(13,3))).
conflict(e,((14,3),(13,3)),((14,3),(13,3))).
conflict(e,((13,3),(14,3)),((13,3),(14,3))).
conflict(e,((14,4),(14,3)),((14,4),(14,3))).
conflict(e,((15,3),(14,3)),((15,3),(14,3))).
conflict(e,((15,2),(15,3)),((15,2),(15,3))).
conflict(e,((14,3),(15,3)),((14,3),(15,3))).
conflict(e,((21,4),(21,3)),((21,4),(21,3))).
conflict(e,((23,2),(23,3)),((23,2),(23,3))).
conflict(e,((23,4),(23,3)),((23,4),(23,3))).
conflict(e,((24,3),(23,3)),((24,3),(23,3))).
conflict(e,((24,2),(24,3)),((24,2),(24,3))).
conflict(e,((23,3),(24,3)),((23,3),(24,3))).
conflict(e,((25,4),(25,3)),((25,4),(25,3))).
conflict(e,((27,2),(27,3)),((27,2),(27,3))).
conflict(e,((27,4),(27,3)),((27,4),(27,3))).
conflict(e,((30,2),(30,3)),((30,2),(30,3))).
conflict(e,((30,4),(30,3)),((30,4),(30,3))).
conflict(e,((31,4),(31,3)),((31,4),(31,3))).
conflict(e,((32,3),(31,3)),((32,3),(31,3))).
conflict(e,((31,3),(32,3)),((31,3),(32,3))).
conflict(e,((33,3),(32,3)),((33,3),(32,3))).
conflict(e,((32,3),(33,3)),((32,3),(33,3))).
conflict(e,((34,3),(33,3)),((34,3),(33,3))).
conflict(e,((33,3),(34,3)),((33,3),(34,3))).
conflict(e,((34,4),(34,3)),((34,4),(34,3))).
conflict(e,((35,3),(34,3)),((35,3),(34,3))).
conflict(e,((35,2),(35,3)),((35,2),(35,3))).
conflict(e,((34,3),(35,3)),((34,3),(35,3))).
conflict(e,((36,3),(35,3)),((36,3),(35,3))).
conflict(e,((35,3),(36,3)),((35,3),(36,3))).
conflict(e,((36,4),(36,3)),((36,4),(36,3))).
conflict(e,((37,4),(37,3)),((37,4),(37,3))).
conflict(e,((38,3),(37,3)),((38,3),(37,3))).
conflict(e,((37,3),(38,3)),((37,3),(38,3))).
conflict(e,((39,3),(38,3)),((39,3),(38,3))).
conflict(e,((38,3),(39,3)),((38,3),(39,3))).
conflict(e,((40,3),(39,3)),((40,3),(39,3))).
conflict(e,((40,2),(40,3)),((40,2),(40,3))).
conflict(e,((39,3),(40,3)),((39,3),(40,3))).
conflict(e,((2,4),(1,4)),((2,4),(1,4))).
conflict(e,((1,4),(2,4)),((1,4),(2,4))).
conflict(e,((3,4),(2,4)),((3,4),(2,4))).
conflict(e,((2,4),(3,4)),((2,4),(3,4))).
conflict(e,((4,4),(3,4)),((4,4),(3,4))).
conflict(e,((3,4),(4,4)),((3,4),(4,4))).
conflict(e,((5,4),(4,4)),((5,4),(4,4))).
conflict(e,((5,3),(5,4)),((5,3),(5,4))).
conflict(e,((4,4),(5,4)),((4,4),(5,4))).
conflict(e,((6,4),(5,4)),((6,4),(5,4))).
conflict(e,((6,3),(6,4)),((6,3),(6,4))).
conflict(e,((5,4),(6,4)),((5,4),(6,4))).
conflict(e,((7,4),(6,4)),((7,4),(6,4))).
conflict(e,((7,3),(7,4)),((7,3),(7,4))).
conflict(e,((6,4),(7,4)),((6,4),(7,4))).
conflict(e,((8,3),(8,4)),((8,3),(8,4))).
conflict(e,((9,4),(8,4)),((9,4),(8,4))).
conflict(e,((9,3),(9,4)),((9,3),(9,4))).
conflict(e,((8,4),(9,4)),((8,4),(9,4))).
conflict(e,((10,4),(9,4)),((10,4),(9,4))).
conflict(e,((9,4),(10,4)),((9,4),(10,4))).
conflict(e,((11,4),(10,4)),((11,4),(10,4))).
conflict(e,((10,4),(11,4)),((10,4),(11,4))).
conflict(e,((13,3),(13,4)),((13,3),(13,4))).
conflict(e,((14,3),(14,4)),((14,3),(14,4))).
conflict(e,((15,4),(14,4)),((15,4),(14,4))).
conflict(e,((14,4),(15,4)),((14,4),(15,4))).
conflict(e,((16,4),(15,4)),((16,4),(15,4))).
conflict(e,((15,4),(16,4)),((15,4),(16,4))).
conflict(e,((17,4),(16,4)),((17,4),(16,4))).
conflict(e,((16,4),(17,4)),((16,4),(17,4))).
conflict(e,((18,4),(17,4)),((18,4),(17,4))).
conflict(e,((17,4),(18,4)),((17,4),(18,4))).
conflict(e,((19,4),(18,4)),((19,4),(18,4))).
conflict(e,((18,4),(19,4)),((18,4),(19,4))).
conflict(e,((20,4),(19,4)),((20,4),(19,4))).
conflict(e,((19,4),(20,4)),((19,4),(20,4))).
conflict(e,((21,4),(20,4)),((21,4),(20,4))).
conflict(e,((21,3),(21,4)),((21,3),(21,4))).
conflict(e,((20,4),(21,4)),((20,4),(21,4))).
conflict(e,((22,4),(21,4)),((22,4),(21,4))).
conflict(e,((21,4),(22,4)),((21,4),(22,4))).
conflict(e,((23,4),(22,4)),((23,4),(22,4))).
conflict(e,((23,3),(23,4)),((23,3),(23,4))).
conflict(e,((22,4),(23,4)),((22,4),(23,4))).
conflict(e,((24,4),(23,4)),((24,4),(23,4))).
conflict(e,((23,4),(24,4)),((23,4),(24,4))).
conflict(e,((25,3),(25,4)),((25,3),(25,4))).
conflict(e,((26,4),(25,4)),((26,4),(25,4))).
conflict(e,((25,4),(26,4)),((25,4),(26,4))).
conflict(e,((27,4),(26,4)),((27,4),(26,4))).
conflict(e,((27,3),(27,4)),((27,3),(27,4))).
conflict(e,((26,4),(27,4)),((26,4),(27,4))).
conflict(e,((28,4),(27,4)),((28,4),(27,4))).
conflict(e,((27,4),(28,4)),((27,4),(28,4))).
conflict(e,((29,4),(28,4)),((29,4),(28,4))).
conflict(e,((28,4),(29,4)),((28,4),(29,4))).
conflict(e,((30,4),(29,4)),((30,4),(29,4))).
conflict(e,((30,3),(30,4)),((30,3),(30,4))).
conflict(e,((29,4),(30,4)),((29,4),(30,4))).
conflict(e,((31,4),(30,4)),((31,4),(30,4))).
conflict(e,((31,3),(31,4)),((31,3),(31,4))).
conflict(e,((30,4),(31,4)),((30,4),(31,4))).
conflict(e,((32,4),(31,4)),((32,4),(31,4))).
conflict(e,((31,4),(32,4)),((31,4),(32,4))).
conflict(e,((34,4),(33,4)),((34,4),(33,4))).
conflict(e,((34,3),(34,4)),((34,3),(34,4))).
conflict(e,((33,4),(34,4)),((33,4),(34,4))).
conflict(e,((35,4),(34,4)),((35,4),(34,4))).
conflict(e,((34,4),(35,4)),((34,4),(35,4))).
conflict(e,((36,3),(36,4)),((36,3),(36,4))).
conflict(e,((37,4),(36,4)),((37,4),(36,4))).
conflict(e,((37,3),(37,4)),((37,3),(37,4))).
conflict(e,((36,4),(37,4)),((36,4),(37,4))).
conflict(e,((38,4),(37,4)),((38,4),(37,4))).
conflict(e,((37,4),(38,4)),((37,4),(38,4))).
conflict(e,((39,4),(38,4)),((39,4),(38,4))).
conflict(e,((38,4),(39,4)),((38,4),(39,4))).
conflict(e,((40,4),(39,4)),((40,4),(39,4))).
conflict(e,((39,4),(40,4)),((39,4),(40,4))).
task((1,pickup),(13,1)).
task((2,pickup),(15,1)).
task((3,pickup),(9,1)).
task((4,pickup),(3,1)).
task((5,pickup),(4,1)).
task((6,pickup),(4,1)).
task((7,pickup),(14,1)).
task((8,pickup),(4,1)).
task((1,putdown),(15,1)).
task((2,putdown),(37,4)).
task((3,putdown),(39,4)).
task((4,putdown),(28,4)).
task((5,putdown),(14,1)).
task((6,putdown),(9,1)).
task((7,putdown),(19,4)).
task((8,putdown),(3,1)).
home(1,(36,1)).
home(2,(25,1)).
home(3,(26,1)).
home(4,(24,1)).
start(1,(36,1)).
start(2,(25,1)).
start(3,(26,1)).
start(4,(24,1)).
robot(1).
robot(2).
robot(3).
robot(4).
depends(deliver,(1,pickup),(1,putdown)).
depends(deliver,(2,pickup),(2,putdown)).
depends(deliver,(3,pickup),(3,putdown)).
depends(deliver,(4,pickup),(4,putdown)).
depends(deliver,(5,pickup),(5,putdown)).
depends(deliver,(6,pickup),(6,putdown)).
depends(deliver,(7,pickup),(7,putdown)).
depends(deliver,(8,pickup),(8,putdown)).
depends(wait,(2,pickup),(1,putdown)).
depends(wait,(7,pickup),(5,putdown)).
depends(wait,(3,pickup),(6,putdown)).
depends(wait,(4,pickup),(8,putdown)).
shortest_path((13,1),(15,1),30,(14,1)).
shortest_path((13,1),(9,1),120,(14,1)).
shortest_path((13,1),(3,1),210,(14,1)).
shortest_path((13,1),(4,1),195,(14,1)).
shortest_path((13,1),(14,1),15,(14,1)).
shortest_path((13,1),(37,4),555,(14,1)).
shortest_path((13,1),(39,4),585,(14,1)).
shortest_path((13,1),(28,4),390,(14,1)).
shortest_path((13,1),(19,4),165,(14,1)).
shortest_path((13,1),(36,1),555,(14,1)).
shortest_path((13,1),(25,1),300,(14,1)).
shortest_path((13,1),(26,1),315,(14,1)).
shortest_path((13,1),(24,1),315,(14,1)).
shortest_path((15,1),(13,1),30,(14,1)).
shortest_path((15,1),(9,1),120,(14,1)).
shortest_path((15,1),(3,1),210,(14,1)).
shortest_path((15,1),(4,1),195,(14,1)).
shortest_path((15,1),(14,1),15,(14,1)).
shortest_path((15,1),(37,4),555,(14,1)).
shortest_path((15,1),(39,4),585,(14,1)).
shortest_path((15,1),(28,4),390,(14,1)).
shortest_path((15,1),(19,4),165,(14,1)).
shortest_path((15,1),(36,1),555,(14,1)).
shortest_path((15,1),(25,1),300,(14,1)).
shortest_path((15,1),(26,1),315,(14,1)).
shortest_path((15,1),(24,1),315,(14,1)).
shortest_path((9,1),(13,1),120,(10,1)).
shortest_path((9,1),(15,1),120,(10,1)).
shortest_path((9,1),(3,1),90,(8,1)).
shortest_path((9,1),(4,1),75,(8,1)).
shortest_path((9,1),(14,1),105,(10,1)).
shortest_path((9,1),(37,4),585,(10,1)).
shortest_path((9,1),(39,4),615,(10,1)).
shortest_path((9,1),(28,4),420,(10,1)).
shortest_path((9,1),(19,4),195,(10,1)).
shortest_path((9,1),(36,1),585,(10,1)).
shortest_path((9,1),(25,1),330,(10,1)).
shortest_path((9,1),(26,1),345,(10,1)).
shortest_path((9,1),(24,1),345,(10,1)).
shortest_path((3,1),(13,1),210,(4,1)).
shortest_path((3,1),(15,1),210,(4,1)).
shortest_path((3,1),(9,1),90,(4,1)).
shortest_path((3,1),(4,1),15,(4,1)).
shortest_path((3,1),(14,1),195,(4,1)).
shortest_path((3,1),(37,4),675,(4,1)).
shortest_path((3,1),(39,4),705,(4,1)).
shortest_path((3,1),(28,4),510,(4,1)).
shortest_path((3,1),(19,4),285,(4,1)).
shortest_path((3,1),(36,1),675,(4,1)).
shortest_path((3,1),(25,1),420,(4,1)).
shortest_path((3,1),(26,1),435,(4,1)).
shortest_path((3,1),(24,1),435,(4,1)).
shortest_path((4,1),(13,1),195,(5,1)).
shortest_path((4,1),(15,1),195,(5,1)).
shortest_path((4,1),(9,1),75,(5,1)).
shortest_path((4,1),(3,1),15,(3,1)).
shortest_path((4,1),(14,1),180,(5,1)).
shortest_path((4,1),(37,4),660,(5,1)).
shortest_path((4,1),(39,4),690,(5,1)).
shortest_path((4,1),(28,4),495,(5,1)).
shortest_path((4,1),(19,4),270,(5,1)).
shortest_path((4,1),(36,1),660,(5,1)).
shortest_path((4,1),(25,1),405,(5,1)).
shortest_path((4,1),(26,1),420,(5,1)).
shortest_path((4,1),(24,1),420,(5,1)).
shortest_path((14,1),(13,1),15,(13,1)).
shortest_path((14,1),(15,1),15,(15,1)).
shortest_path((14,1),(9,1),105,(14,2)).
shortest_path((14,1),(3,1),195,(14,2)).
shortest_path((14,1),(4,1),180,(14,2)).
shortest_path((14,1),(37,4),540,(14,2)).
shortest_path((14,1),(39,4),570,(14,2)).
shortest_path((14,1),(28,4),375,(14,2)).
shortest_path((14,1),(19,4),150,(14,2)).
shortest_path((14,1),(36,1),540,(14,2)).
shortest_path((14,1),(25,1),285,(14,2)).
shortest_path((14,1),(26,1),300,(14,2)).
shortest_path((14,1),(24,1),300,(14,2)).
shortest_path((37,4),(13,1),555,(36,4)).
shortest_path((37,4),(15,1),555,(36,4)).
shortest_path((37,4),(9,1),585,(36,4)).
shortest_path((37,4),(3,1),675,(36,4)).
shortest_path((37,4),(4,1),660,(36,4)).
shortest_path((37,4),(14,1),540,(36,4)).
shortest_path((37,4),(39,4),30,(38,4)).
shortest_path((37,4),(28,4),165,(36,4)).
shortest_path((37,4),(19,4),390,(36,4)).
shortest_path((37,4),(36,1),90,(36,4)).
shortest_path((37,4),(25,1),255,(36,4)).
shortest_path((37,4),(26,1),240,(36,4)).
shortest_path((37,4),(24,1),270,(36,4)).
shortest_path((39,4),(13,1),585,(38,4)).
shortest_path((39,4),(15,1),585,(38,4)).
shortest_path((39,4),(9,1),615,(38,4)).
shortest_path((39,4),(3,1),705,(38,4)).
shortest_path((39,4),(4,1),690,(38,4)).
shortest_path((39,4),(14,1),570,(38,4)).
shortest_path((39,4),(37,4),30,(38,4)).
shortest_path((39,4),(28,4),195,(38,4)).
shortest_path((39,4),(19,4),420,(38,4)).
shortest_path((39,4),(36,1),120,(38,4)).
shortest_path((39,4),(25,1),285,(38,4)).
shortest_path((39,4),(26,1),270,(38,4)).
shortest_path((39,4),(24,1),300,(38,4)).
shortest_path((28,4),(13,1),390,(27,4)).
shortest_path((28,4),(15,1),390,(27,4)).
shortest_path((28,4),(9,1),420,(27,4)).
shortest_path((28,4),(3,1),510,(27,4)).
shortest_path((28,4),(4,1),495,(27,4)).
shortest_path((28,4),(14,1),375,(27,4)).
shortest_path((28,4),(37,4),165,(29,4)).
shortest_path((28,4),(39,4),195,(29,4)).
shortest_path((28,4),(19,4),225,(27,4)).
shortest_path((28,4),(36,1),165,(29,4)).
shortest_path((28,4),(25,1),90,(27,4)).
shortest_path((28,4),(26,1),75,(27,4)).
shortest_path((28,4),(24,1),105,(27,4)).
shortest_path((19,4),(13,1),165,(18,4)).
shortest_path((19,4),(15,1),165,(18,4)).
shortest_path((19,4),(9,1),195,(18,4)).
shortest_path((19,4),(3,1),285,(18,4)).
shortest_path((19,4),(4,1),270,(18,4)).
shortest_path((19,4),(14,1),150,(18,4)).
shortest_path((19,4),(37,4),390,(20,4)).
shortest_path((19,4),(39,4),420,(20,4)).
shortest_path((19,4),(28,4),225,(20,4)).
shortest_path((19,4),(36,1),390,(20,4)).
shortest_path((19,4),(25,1),135,(20,4)).
shortest_path((19,4),(26,1),150,(20,4)).
shortest_path((19,4),(24,1),150,(20,4)).
shortest_path((36,1),(13,1),555,(36,2)).
shortest_path((36,1),(15,1),555,(36,2)).
shortest_path((36,1),(9,1),585,(36,2)).
shortest_path((36,1),(3,1),675,(36,2)).
shortest_path((36,1),(4,1),660,(36,2)).
shortest_path((36,1),(14,1),540,(36,2)).
shortest_path((36,1),(37,4),90,(36,2)).
shortest_path((36,1),(39,4),120,(36,2)).
shortest_path((36,1),(28,4),165,(36,2)).
shortest_path((36,1),(19,4),390,(36,2)).
shortest_path((36,1),(25,1),255,(36,2)).
shortest_path((36,1),(26,1),240,(36,2)).
shortest_path((36,1),(24,1),270,(36,2)).
shortest_path((25,1),(13,1),300,(25,2)).
shortest_path((25,1),(15,1),300,(25,2)).
shortest_path((25,1),(9,1),330,(25,2)).
shortest_path((25,1),(3,1),420,(25,2)).
shortest_path((25,1),(4,1),405,(25,2)).
shortest_path((25,1),(14,1),285,(25,2)).
shortest_path((25,1),(37,4),255,(26,1)).
shortest_path((25,1),(39,4),285,(26,1)).
shortest_path((25,1),(28,4),90,(26,1)).
shortest_path((25,1),(19,4),135,(25,2)).
shortest_path((25,1),(36,1),255,(26,1)).
shortest_path((25,1),(26,1),15,(26,1)).
shortest_path((25,1),(24,1),15,(24,1)).
shortest_path((26,1),(13,1),315,(25,1)).
shortest_path((26,1),(15,1),315,(25,1)).
shortest_path((26,1),(9,1),345,(25,1)).
shortest_path((26,1),(3,1),435,(25,1)).
shortest_path((26,1),(4,1),420,(25,1)).
shortest_path((26,1),(14,1),300,(25,1)).
shortest_path((26,1),(37,4),240,(27,1)).
shortest_path((26,1),(39,4),270,(27,1)).
shortest_path((26,1),(28,4),75,(27,1)).
shortest_path((26,1),(19,4),150,(25,1)).
shortest_path((26,1),(36,1),240,(27,1)).
shortest_path((26,1),(25,1),15,(25,1)).
shortest_path((26,1),(24,1),30,(25,1)).
shortest_path((24,1),(13,1),315,(25,1)).
shortest_path((24,1),(15,1),315,(25,1)).
shortest_path((24,1),(9,1),345,(25,1)).
shortest_path((24,1),(3,1),435,(25,1)).
shortest_path((24,1),(4,1),420,(25,1)).
shortest_path((24,1),(14,1),300,(25,1)).
shortest_path((24,1),(37,4),270,(25,1)).
shortest_path((24,1),(39,4),300,(25,1)).
shortest_path((24,1),(28,4),105,(25,1)).
shortest_path((24,1),(19,4),150,(25,1)).
shortest_path((24,1),(36,1),270,(25,1)).
shortest_path((24,1),(25,1),15,(25,1)).
shortest_path((24,1),(26,1),30,(25,1)).
shortest_path((27,1),(36,1),225,(27,2)).
shortest_path((27,1),(28,4),60,(27,2)).
shortest_path((27,1),(39,4),255,(27,2)).
shortest_path((27,1),(37,4),225,(27,2)).
shortest_path((25,2),(19,4),120,(24,2)).
shortest_path((25,2),(14,1),270,(24,2)).
shortest_path((25,2),(4,1),390,(24,2)).
shortest_path((25,2),(3,1),405,(24,2)).
shortest_path((25,2),(9,1),315,(24,2)).
shortest_path((25,2),(15,1),285,(24,2)).
shortest_path((25,2),(13,1),285,(24,2)).
shortest_path((36,2),(24,1),255,(35,2)).
shortest_path((36,2),(26,1),225,(35,2)).
shortest_path((36,2),(25,1),240,(35,2)).
shortest_path((36,2),(19,4),375,(35,2)).
shortest_path((36,2),(28,4),150,(35,2)).
shortest_path((36,2),(39,4),105,(35,2)).
shortest_path((36,2),(37,4),75,(35,2)).
shortest_path((36,2),(14,1),525,(35,2)).
shortest_path((36,2),(4,1),645,(35,2)).
shortest_path((36,2),(3,1),660,(35,2)).
shortest_path((36,2),(9,1),570,(35,2)).
shortest_path((36,2),(15,1),540,(35,2)).
shortest_path((36,2),(13,1),540,(35,2)).
shortest_path((20,4),(24,1),135,(21,4)).
shortest_path((20,4),(26,1),135,(21,4)).
shortest_path((20,4),(25,1),120,(21,4)).
shortest_path((20,4),(36,1),375,(21,4)).
shortest_path((20,4),(28,4),210,(21,4)).
shortest_path((20,4),(39,4),405,(21,4)).
shortest_path((20,4),(37,4),375,(21,4)).
shortest_path((18,4),(14,1),135,(17,4)).
shortest_path((18,4),(4,1),255,(17,4)).
shortest_path((18,4),(3,1),270,(17,4)).
shortest_path((18,4),(9,1),180,(17,4)).
shortest_path((18,4),(15,1),150,(17,4)).
shortest_path((18,4),(13,1),150,(17,4)).
shortest_path((27,4),(24,1),90,(27,3)).
shortest_path((27,4),(26,1),60,(27,3)).
shortest_path((27,4),(25,1),75,(27,3)).
shortest_path((29,4),(36,1),150,(30,4)).
shortest_path((27,4),(19,4),210,(27,3)).
shortest_path((29,4),(39,4),180,(30,4)).
shortest_path((29,4),(37,4),150,(30,4)).
shortest_path((27,4),(14,1),360,(27,3)).
shortest_path((27,4),(4,1),480,(27,3)).
shortest_path((27,4),(3,1),495,(27,3)).
shortest_path((27,4),(9,1),405,(27,3)).
shortest_path((27,4),(15,1),375,(27,3)).
shortest_path((27,4),(13,1),375,(27,3)).
shortest_path((38,4),(24,1),285,(37,4)).
shortest_path((38,4),(26,1),255,(37,4)).
shortest_path((38,4),(25,1),270,(37,4)).
shortest_path((38,4),(36,1),105,(37,4)).
shortest_path((38,4),(19,4),405,(37,4)).
shortest_path((38,4),(28,4),180,(37,4)).
shortest_path((38,4),(37,4),15,(37,4)).
shortest_path((38,4),(14,1),555,(37,4)).
shortest_path((38,4),(4,1),675,(37,4)).
shortest_path((38,4),(3,1),690,(37,4)).
shortest_path((38,4),(9,1),600,(37,4)).
shortest_path((38,4),(15,1),570,(37,4)).
shortest_path((38,4),(13,1),570,(37,4)).
shortest_path((36,4),(24,1),255,(36,3)).
shortest_path((36,4),(26,1),225,(36,3)).
shortest_path((36,4),(25,1),240,(36,3)).
shortest_path((36,4),(36,1),75,(36,3)).
shortest_path((36,4),(19,4),375,(36,3)).
shortest_path((36,4),(28,4),150,(36,3)).
shortest_path((38,4),(39,4),15,(39,4)).
shortest_path((36,4),(14,1),525,(36,3)).
shortest_path((36,4),(4,1),645,(36,3)).
shortest_path((36,4),(3,1),660,(36,3)).
shortest_path((36,4),(9,1),570,(36,3)).
shortest_path((36,4),(15,1),540,(36,3)).
shortest_path((36,4),(13,1),540,(36,3)).
shortest_path((14,2),(24,1),285,(13,2)).
shortest_path((14,2),(26,1),285,(13,2)).
shortest_path((14,2),(25,1),270,(13,2)).
shortest_path((14,2),(36,1),525,(13,2)).
shortest_path((14,2),(19,4),135,(13,2)).
shortest_path((14,2),(28,4),360,(13,2)).
shortest_path((14,2),(39,4),555,(13,2)).
shortest_path((14,2),(37,4),525,(13,2)).
shortest_path((14,2),(4,1),165,(13,2)).
shortest_path((14,2),(3,1),180,(13,2)).
shortest_path((14,2),(9,1),90,(13,2)).
shortest_path((5,1),(24,1),405,(6,1)).
shortest_path((5,1),(26,1),405,(6,1)).
shortest_path((5,1),(25,1),390,(6,1)).
shortest_path((5,1),(36,1),645,(6,1)).
shortest_path((5,1),(19,4),255,(6,1)).
shortest_path((5,1),(28,4),480,(6,1)).
shortest_path((5,1),(39,4),675,(6,1)).
shortest_path((5,1),(37,4),645,(6,1)).
shortest_path((5,1),(14,1),165,(6,1)).
shortest_path((5,1),(9,1),60,(6,1)).
shortest_path((5,1),(15,1),180,(6,1)).
shortest_path((5,1),(13,1),180,(6,1)).
shortest_path((10,1),(24,1),330,(11,1)).
shortest_path((10,1),(26,1),330,(11,1)).
shortest_path((10,1),(25,1),315,(11,1)).
shortest_path((10,1),(36,1),570,(11,1)).
shortest_path((10,1),(19,4),180,(11,1)).
shortest_path((10,1),(28,4),405,(11,1)).
shortest_path((10,1),(39,4),600,(11,1)).
shortest_path((10,1),(37,4),570,(11,1)).
shortest_path((10,1),(14,1),90,(11,1)).
shortest_path((8,1),(4,1),60,(7,1)).
shortest_path((8,1),(3,1),75,(7,1)).
shortest_path((10,1),(15,1),105,(11,1)).
shortest_path((10,1),(13,1),105,(11,1)).
shortest_path((11,1),(13,1),90,(12,1)).
shortest_path((11,1),(15,1),90,(12,1)).
shortest_path((7,1),(3,1),60,(6,1)).
shortest_path((7,1),(4,1),45,(6,1)).
shortest_path((11,1),(14,1),75,(12,1)).
shortest_path((11,1),(37,4),555,(12,1)).
shortest_path((11,1),(39,4),585,(12,1)).
shortest_path((11,1),(28,4),390,(12,1)).
shortest_path((11,1),(19,4),165,(12,1)).
shortest_path((11,1),(36,1),555,(12,1)).
shortest_path((11,1),(25,1),300,(12,1)).
shortest_path((11,1),(26,1),315,(12,1)).
shortest_path((11,1),(24,1),315,(12,1)).
shortest_path((6,1),(13,1),165,(7,1)).
shortest_path((6,1),(15,1),165,(7,1)).
shortest_path((6,1),(9,1),45,(7,1)).
shortest_path((6,1),(14,1),150,(7,1)).
shortest_path((6,1),(37,4),630,(7,1)).
shortest_path((6,1),(39,4),660,(7,1)).
shortest_path((6,1),(28,4),465,(7,1)).
shortest_path((6,1),(19,4),240,(7,1)).
shortest_path((6,1),(36,1),630,(7,1)).
shortest_path((6,1),(25,1),375,(7,1)).
shortest_path((6,1),(26,1),390,(7,1)).
shortest_path((6,1),(24,1),390,(7,1)).
shortest_path((13,2),(9,1),75,(12,2)).
shortest_path((13,2),(3,1),165,(12,2)).
shortest_path((13,2),(4,1),150,(12,2)).
shortest_path((13,2),(37,4),510,(13,3)).
shortest_path((13,2),(39,4),540,(13,3)).
shortest_path((13,2),(28,4),345,(13,3)).
shortest_path((13,2),(19,4),120,(13,3)).
shortest_path((13,2),(36,1),510,(13,3)).
shortest_path((13,2),(25,1),255,(13,3)).
shortest_path((13,2),(26,1),270,(13,3)).
shortest_path((13,2),(24,1),270,(13,3)).
shortest_path((36,3),(13,1),525,(35,3)).
shortest_path((36,3),(15,1),525,(35,3)).
shortest_path((36,3),(9,1),555,(35,3)).
shortest_path((36,3),(3,1),645,(35,3)).
shortest_path((36,3),(4,1),630,(35,3)).
shortest_path((36,3),(14,1),510,(35,3)).
shortest_path((36,3),(28,4),135,(35,3)).
shortest_path((36,3),(19,4),360,(35,3)).
shortest_path((36,3),(36,1),60,(35,3)).
shortest_path((36,3),(25,1),225,(35,3)).
shortest_path((36,3),(26,1),210,(35,3)).
shortest_path((36,3),(24,1),240,(35,3)).
shortest_path((27,3),(13,1),360,(27,2)).
shortest_path((27,3),(15,1),360,(27,2)).
shortest_path((27,3),(9,1),390,(27,2)).
shortest_path((27,3),(3,1),480,(27,2)).
shortest_path((27,3),(4,1),465,(27,2)).
shortest_path((27,3),(14,1),345,(27,2)).
shortest_path((30,4),(37,4),135,(31,4)).
shortest_path((30,4),(39,4),165,(31,4)).
shortest_path((27,3),(19,4),195,(27,2)).
shortest_path((30,4),(36,1),135,(31,4)).
shortest_path((27,3),(25,1),60,(27,2)).
shortest_path((27,3),(26,1),45,(27,2)).
shortest_path((27,3),(24,1),75,(27,2)).
shortest_path((17,4),(13,1),135,(16,4)).
shortest_path((17,4),(15,1),135,(16,4)).
shortest_path((17,4),(9,1),165,(16,4)).
shortest_path((17,4),(3,1),255,(16,4)).
shortest_path((17,4),(4,1),240,(16,4)).
shortest_path((17,4),(14,1),120,(16,4)).
shortest_path((21,4),(37,4),360,(22,4)).
shortest_path((21,4),(39,4),390,(22,4)).
shortest_path((21,4),(28,4),195,(22,4)).
shortest_path((21,4),(36,1),360,(22,4)).
shortest_path((21,4),(25,1),105,(22,4)).
shortest_path((21,4),(26,1),120,(22,4)).
shortest_path((21,4),(24,1),120,(22,4)).
shortest_path((35,2),(13,1),525,(35,3)).
shortest_path((35,2),(15,1),525,(35,3)).
shortest_path((35,2),(9,1),555,(35,3)).
shortest_path((35,2),(3,1),645,(35,3)).
shortest_path((35,2),(4,1),630,(35,3)).
shortest_path((35,2),(14,1),510,(35,3)).
shortest_path((35,2),(37,4),60,(35,3)).
shortest_path((35,2),(39,4),90,(35,3)).
shortest_path((35,2),(28,4),135,(35,3)).
shortest_path((35,2),(19,4),360,(35,3)).
shortest_path((35,2),(25,1),225,(35,3)).
shortest_path((35,2),(26,1),210,(35,3)).
shortest_path((35,2),(24,1),240,(35,3)).
shortest_path((24,2),(13,1),270,(24,3)).
shortest_path((24,2),(15,1),270,(24,3)).
shortest_path((24,2),(9,1),300,(24,3)).
shortest_path((24,2),(3,1),390,(24,3)).
shortest_path((24,2),(4,1),375,(24,3)).
shortest_path((24,2),(14,1),255,(24,3)).
shortest_path((24,2),(19,4),105,(24,3)).
shortest_path((27,2),(37,4),210,(27,3)).
shortest_path((27,2),(39,4),240,(27,3)).
shortest_path((27,2),(28,4),45,(27,3)).
shortest_path((27,2),(36,1),210,(27,3)).
shortest_path((27,3),(36,1),195,(27,4)).
shortest_path((27,3),(28,4),30,(27,4)).
shortest_path((27,3),(39,4),225,(27,4)).
shortest_path((27,3),(37,4),195,(27,4)).
shortest_path((24,3),(19,4),90,(23,3)).
shortest_path((24,3),(14,1),240,(23,3)).
shortest_path((24,3),(4,1),360,(23,3)).
shortest_path((24,3),(3,1),375,(23,3)).
shortest_path((24,3),(9,1),285,(23,3)).
shortest_path((24,3),(15,1),255,(23,3)).
shortest_path((24,3),(13,1),255,(23,3)).
shortest_path((35,3),(24,1),225,(34,3)).
shortest_path((35,3),(26,1),195,(34,3)).
shortest_path((35,3),(25,1),210,(34,3)).
shortest_path((35,3),(19,4),345,(34,3)).
shortest_path((35,3),(28,4),120,(34,3)).
shortest_path((35,3),(39,4),75,(36,3)).
shortest_path((35,3),(37,4),45,(36,3)).
shortest_path((35,3),(14,1),495,(34,3)).
shortest_path((35,3),(4,1),615,(34,3)).
shortest_path((35,3),(3,1),630,(34,3)).
shortest_path((35,3),(9,1),540,(34,3)).
shortest_path((35,3),(15,1),510,(34,3)).
shortest_path((35,3),(13,1),510,(34,3)).
shortest_path((22,4),(24,1),105,(23,4)).
shortest_path((22,4),(26,1),105,(23,4)).
shortest_path((22,4),(25,1),90,(23,4)).
shortest_path((22,4),(36,1),345,(23,4)).
shortest_path((22,4),(28,4),180,(23,4)).
shortest_path((22,4),(39,4),375,(23,4)).
shortest_path((22,4),(37,4),345,(23,4)).
shortest_path((16,4),(14,1),105,(15,4)).
shortest_path((16,4),(4,1),225,(15,4)).
shortest_path((16,4),(3,1),240,(15,4)).
shortest_path((16,4),(9,1),150,(15,4)).
shortest_path((16,4),(15,1),120,(15,4)).
shortest_path((16,4),(13,1),120,(15,4)).
shortest_path((27,2),(24,1),60,(27,1)).
shortest_path((27,2),(26,1),30,(27,1)).
shortest_path((27,2),(25,1),45,(27,1)).
shortest_path((31,4),(36,1),120,(31,3)).
shortest_path((27,2),(19,4),180,(27,1)).
shortest_path((31,4),(39,4),150,(31,3)).
shortest_path((31,4),(37,4),120,(31,3)).
shortest_path((27,2),(14,1),330,(27,1)).
shortest_path((27,2),(4,1),450,(27,1)).
shortest_path((27,2),(3,1),465,(27,1)).
shortest_path((27,2),(9,1),375,(27,1)).
shortest_path((27,2),(15,1),345,(27,1)).
shortest_path((27,2),(13,1),345,(27,1)).
shortest_path((35,3),(36,1),45,(35,2)).
shortest_path((13,3),(24,1),255,(14,3)).
shortest_path((13,3),(26,1),255,(14,3)).
shortest_path((13,3),(25,1),240,(14,3)).
shortest_path((13,3),(36,1),495,(14,3)).
shortest_path((13,3),(19,4),105,(14,3)).
shortest_path((13,3),(28,4),330,(14,3)).
shortest_path((13,3),(39,4),525,(14,3)).
shortest_path((13,3),(37,4),495,(14,3)).
shortest_path((12,2),(4,1),135,(12,1)).
shortest_path((12,2),(3,1),150,(12,1)).
shortest_path((12,2),(9,1),60,(12,1)).
shortest_path((7,1),(24,1),375,(8,1)).
shortest_path((7,1),(26,1),375,(8,1)).
shortest_path((7,1),(25,1),360,(8,1)).
shortest_path((7,1),(36,1),615,(8,1)).
shortest_path((7,1),(19,4),225,(8,1)).
shortest_path((7,1),(28,4),450,(8,1)).
shortest_path((7,1),(39,4),645,(8,1)).
shortest_path((7,1),(37,4),615,(8,1)).
shortest_path((7,1),(14,1),135,(8,1)).
shortest_path((7,1),(9,1),30,(8,1)).
shortest_path((7,1),(15,1),150,(8,1)).
shortest_path((7,1),(13,1),150,(8,1)).
shortest_path((12,1),(24,1),300,(12,2)).
shortest_path((12,1),(26,1),300,(12,2)).
shortest_path((12,1),(25,1),285,(12,2)).
shortest_path((12,1),(36,1),540,(12,2)).
shortest_path((12,1),(19,4),150,(12,2)).
shortest_path((12,1),(28,4),375,(12,2)).
shortest_path((12,1),(39,4),570,(12,2)).
shortest_path((12,1),(37,4),540,(12,2)).
shortest_path((12,1),(14,1),60,(12,2)).
shortest_path((6,1),(4,1),30,(5,1)).
shortest_path((6,1),(3,1),45,(5,1)).
shortest_path((12,1),(15,1),75,(12,2)).
shortest_path((12,1),(13,1),75,(12,2)).
shortest_path((12,2),(13,1),60,(13,2)).
shortest_path((12,2),(15,1),60,(13,2)).
shortest_path((5,1),(3,1),30,(4,1)).
shortest_path((5,1),(4,1),15,(4,1)).
shortest_path((12,2),(14,1),45,(13,2)).
shortest_path((12,2),(37,4),525,(13,2)).
shortest_path((12,2),(39,4),555,(13,2)).
shortest_path((12,2),(28,4),360,(13,2)).
shortest_path((12,2),(19,4),135,(13,2)).
shortest_path((12,2),(36,1),525,(13,2)).
shortest_path((12,2),(25,1),270,(13,2)).
shortest_path((12,2),(26,1),285,(13,2)).
shortest_path((12,2),(24,1),285,(13,2)).
shortest_path((8,1),(13,1),135,(9,1)).
shortest_path((8,1),(15,1),135,(9,1)).
shortest_path((8,1),(9,1),15,(9,1)).
shortest_path((8,1),(14,1),120,(9,1)).
shortest_path((8,1),(37,4),600,(9,1)).
shortest_path((8,1),(39,4),630,(9,1)).
shortest_path((8,1),(28,4),435,(9,1)).
shortest_path((8,1),(19,4),210,(9,1)).
shortest_path((8,1),(36,1),600,(9,1)).
shortest_path((8,1),(25,1),345,(9,1)).
shortest_path((8,1),(26,1),360,(9,1)).
shortest_path((8,1),(24,1),360,(9,1)).
shortest_path((12,1),(9,1),45,(11,1)).
shortest_path((12,1),(3,1),135,(11,1)).
shortest_path((12,1),(4,1),120,(11,1)).
shortest_path((14,3),(37,4),480,(14,4)).
shortest_path((14,3),(39,4),510,(14,4)).
shortest_path((14,3),(28,4),315,(14,4)).
shortest_path((14,3),(19,4),90,(14,4)).
shortest_path((14,3),(36,1),480,(14,4)).
shortest_path((14,3),(25,1),225,(14,4)).
shortest_path((14,3),(26,1),240,(14,4)).
shortest_path((14,3),(24,1),240,(14,4)).
shortest_path((35,2),(36,1),30,(36,2)).
shortest_path((27,1),(13,1),330,(26,1)).
shortest_path((27,1),(15,1),330,(26,1)).
shortest_path((27,1),(9,1),360,(26,1)).
shortest_path((27,1),(3,1),450,(26,1)).
shortest_path((27,1),(4,1),435,(26,1)).
shortest_path((27,1),(14,1),315,(26,1)).
shortest_path((31,3),(37,4),105,(32,3)).
shortest_path((31,3),(39,4),135,(32,3)).
shortest_path((27,1),(19,4),165,(26,1)).
shortest_path((31,3),(36,1),105,(32,3)).
shortest_path((27,1),(25,1),30,(26,1)).
shortest_path((27,1),(26,1),15,(26,1)).
shortest_path((27,1),(24,1),45,(26,1)).
shortest_path((15,4),(13,1),105,(14,4)).
shortest_path((15,4),(15,1),105,(14,4)).
shortest_path((15,4),(9,1),135,(14,4)).
shortest_path((15,4),(3,1),225,(14,4)).
shortest_path((15,4),(4,1),210,(14,4)).
shortest_path((15,4),(14,1),90,(14,4)).
shortest_path((23,4),(37,4),330,(23,3)).
shortest_path((23,4),(39,4),360,(23,3)).
shortest_path((23,4),(28,4),165,(23,3)).
shortest_path((23,4),(36,1),330,(23,3)).
shortest_path((23,4),(25,1),75,(23,3)).
shortest_path((23,4),(26,1),90,(23,3)).
shortest_path((23,4),(24,1),90,(23,3)).
shortest_path((34,3),(13,1),495,(33,3)).
shortest_path((34,3),(15,1),495,(33,3)).
shortest_path((34,3),(9,1),525,(33,3)).
shortest_path((34,3),(3,1),615,(33,3)).
shortest_path((34,3),(4,1),600,(33,3)).
shortest_path((34,3),(14,1),480,(33,3)).
shortest_path((36,3),(37,4),30,(36,4)).
shortest_path((36,3),(39,4),60,(36,4)).
shortest_path((34,3),(28,4),105,(33,3)).
shortest_path((34,3),(19,4),330,(33,3)).
shortest_path((34,3),(25,1),195,(33,3)).
shortest_path((34,3),(26,1),180,(33,3)).
shortest_path((34,3),(24,1),210,(33,3)).
shortest_path((23,3),(13,1),240,(23,4)).
shortest_path((23,3),(15,1),240,(23,4)).
shortest_path((23,3),(9,1),270,(23,4)).
shortest_path((23,3),(3,1),360,(23,4)).
shortest_path((23,3),(4,1),345,(23,4)).
shortest_path((23,3),(14,1),225,(23,4)).
shortest_path((23,3),(19,4),75,(23,4)).
shortest_path((27,4),(37,4),180,(28,4)).
shortest_path((27,4),(39,4),210,(28,4)).
shortest_path((27,4),(28,4),15,(28,4)).
shortest_path((27,4),(36,1),180,(28,4)).
shortest_path((23,4),(19,4),60,(22,4)).
shortest_path((23,4),(14,1),210,(22,4)).
shortest_path((23,4),(4,1),330,(22,4)).
shortest_path((23,4),(3,1),345,(22,4)).
shortest_path((23,4),(9,1),255,(22,4)).
shortest_path((23,4),(15,1),225,(22,4)).
shortest_path((23,4),(13,1),225,(22,4)).
shortest_path((33,3),(24,1),195,(32,3)).
shortest_path((33,3),(26,1),165,(32,3)).
shortest_path((33,3),(25,1),180,(32,3)).
shortest_path((33,3),(19,4),315,(32,3)).
shortest_path((33,3),(28,4),90,(32,3)).
shortest_path((36,4),(39,4),45,(37,4)).
shortest_path((36,4),(37,4),15,(37,4)).
shortest_path((33,3),(14,1),465,(32,3)).
shortest_path((33,3),(4,1),585,(32,3)).
shortest_path((33,3),(3,1),600,(32,3)).
shortest_path((33,3),(9,1),510,(32,3)).
shortest_path((33,3),(15,1),480,(32,3)).
shortest_path((33,3),(13,1),480,(32,3)).
shortest_path((23,3),(24,1),75,(24,3)).
shortest_path((23,3),(26,1),75,(24,3)).
shortest_path((23,3),(25,1),60,(24,3)).
shortest_path((23,3),(36,1),315,(24,3)).
shortest_path((23,3),(28,4),150,(24,3)).
shortest_path((23,3),(39,4),345,(24,3)).
shortest_path((23,3),(37,4),315,(24,3)).
shortest_path((14,4),(14,1),75,(14,3)).
shortest_path((14,4),(4,1),195,(14,3)).
shortest_path((14,4),(3,1),210,(14,3)).
shortest_path((14,4),(9,1),120,(14,3)).
shortest_path((14,4),(15,1),90,(14,3)).
shortest_path((14,4),(13,1),90,(14,3)).
shortest_path((32,3),(36,1),90,(33,3)).
shortest_path((32,3),(39,4),120,(33,3)).
shortest_path((32,3),(37,4),90,(33,3)).
shortest_path((36,2),(36,1),15,(36,1)).
shortest_path((14,4),(24,1),225,(15,4)).
shortest_path((14,4),(26,1),225,(15,4)).
shortest_path((14,4),(25,1),210,(15,4)).
shortest_path((14,4),(36,1),465,(15,4)).
shortest_path((14,4),(19,4),75,(15,4)).
shortest_path((14,4),(28,4),300,(15,4)).
shortest_path((14,4),(39,4),495,(15,4)).
shortest_path((14,4),(37,4),465,(15,4)).
shortest_path((11,1),(4,1),105,(10,1)).
shortest_path((11,1),(3,1),120,(10,1)).
shortest_path((11,1),(9,1),30,(10,1)).
shortest_path((13,2),(14,1),30,(14,2)).
shortest_path((13,2),(15,1),45,(14,2)).
shortest_path((13,2),(13,1),45,(14,2)).
shortest_path((14,2),(13,1),30,(14,1)).
shortest_path((14,2),(15,1),30,(14,1)).
shortest_path((14,2),(14,1),15,(14,1)).
shortest_path((10,1),(9,1),15,(9,1)).
shortest_path((10,1),(3,1),105,(9,1)).
shortest_path((10,1),(4,1),90,(9,1)).
shortest_path((15,4),(37,4),450,(16,4)).
shortest_path((15,4),(39,4),480,(16,4)).
shortest_path((15,4),(28,4),285,(16,4)).
shortest_path((15,4),(19,4),60,(16,4)).
shortest_path((15,4),(36,1),450,(16,4)).
shortest_path((15,4),(25,1),195,(16,4)).
shortest_path((15,4),(26,1),210,(16,4)).
shortest_path((15,4),(24,1),210,(16,4)).
shortest_path((33,3),(37,4),75,(34,3)).
shortest_path((33,3),(39,4),105,(34,3)).
shortest_path((33,3),(36,1),75,(34,3)).
shortest_path((14,3),(13,1),75,(13,3)).
shortest_path((14,3),(15,1),75,(13,3)).
shortest_path((14,3),(9,1),105,(13,3)).
shortest_path((14,3),(3,1),195,(13,3)).
shortest_path((14,3),(4,1),180,(13,3)).
shortest_path((14,3),(14,1),60,(13,3)).
shortest_path((24,3),(37,4),300,(24,2)).
shortest_path((24,3),(39,4),330,(24,2)).
shortest_path((24,3),(28,4),135,(24,2)).
shortest_path((24,3),(36,1),300,(24,2)).
shortest_path((24,3),(25,1),45,(24,2)).
shortest_path((24,3),(26,1),60,(24,2)).
shortest_path((24,3),(24,1),60,(24,2)).
shortest_path((32,3),(13,1),465,(31,3)).
shortest_path((32,3),(15,1),465,(31,3)).
shortest_path((32,3),(9,1),495,(31,3)).
shortest_path((32,3),(3,1),585,(31,3)).
shortest_path((32,3),(4,1),570,(31,3)).
shortest_path((32,3),(14,1),450,(31,3)).
shortest_path((32,3),(28,4),75,(31,3)).
shortest_path((32,3),(19,4),300,(31,3)).
shortest_path((32,3),(25,1),165,(31,3)).
shortest_path((32,3),(26,1),150,(31,3)).
shortest_path((32,3),(24,1),180,(31,3)).
shortest_path((22,4),(13,1),210,(21,4)).
shortest_path((22,4),(15,1),210,(21,4)).
shortest_path((22,4),(9,1),240,(21,4)).
shortest_path((22,4),(3,1),330,(21,4)).
shortest_path((22,4),(4,1),315,(21,4)).
shortest_path((22,4),(14,1),195,(21,4)).
shortest_path((22,4),(19,4),45,(21,4)).
shortest_path((21,4),(19,4),30,(20,4)).
shortest_path((21,4),(14,1),180,(20,4)).
shortest_path((21,4),(4,1),300,(20,4)).
shortest_path((21,4),(3,1),315,(20,4)).
shortest_path((21,4),(9,1),225,(20,4)).
shortest_path((21,4),(15,1),195,(20,4)).
shortest_path((21,4),(13,1),195,(20,4)).
shortest_path((31,3),(24,1),165,(31,4)).
shortest_path((31,3),(26,1),135,(31,4)).
shortest_path((31,3),(25,1),150,(31,4)).
shortest_path((31,3),(19,4),285,(31,4)).
shortest_path((31,3),(28,4),60,(31,4)).
shortest_path((31,3),(14,1),435,(31,4)).
shortest_path((31,3),(4,1),555,(31,4)).
shortest_path((31,3),(3,1),570,(31,4)).
shortest_path((31,3),(9,1),480,(31,4)).
shortest_path((31,3),(15,1),450,(31,4)).
shortest_path((31,3),(13,1),450,(31,4)).
shortest_path((24,2),(24,1),45,(25,2)).
shortest_path((24,2),(26,1),45,(25,2)).
shortest_path((24,2),(25,1),30,(25,2)).
shortest_path((24,2),(36,1),285,(25,2)).
shortest_path((24,2),(28,4),120,(25,2)).
shortest_path((24,2),(39,4),315,(25,2)).
shortest_path((24,2),(37,4),285,(25,2)).
shortest_path((13,3),(14,1),45,(13,2)).
shortest_path((13,3),(4,1),165,(13,2)).
shortest_path((13,3),(3,1),180,(13,2)).
shortest_path((13,3),(9,1),90,(13,2)).
shortest_path((13,3),(15,1),60,(13,2)).
shortest_path((13,3),(13,1),60,(13,2)).
shortest_path((34,3),(36,1),60,(35,3)).
shortest_path((34,3),(39,4),90,(35,3)).
shortest_path((34,3),(37,4),60,(35,3)).
shortest_path((16,4),(24,1),195,(17,4)).
shortest_path((16,4),(26,1),195,(17,4)).
shortest_path((16,4),(25,1),180,(17,4)).
shortest_path((16,4),(36,1),435,(17,4)).
shortest_path((16,4),(19,4),45,(17,4)).
shortest_path((16,4),(28,4),270,(17,4)).
shortest_path((16,4),(39,4),465,(17,4)).
shortest_path((16,4),(37,4),435,(17,4)).
shortest_path((17,4),(37,4),420,(18,4)).
shortest_path((17,4),(39,4),450,(18,4)).
shortest_path((17,4),(28,4),255,(18,4)).
shortest_path((17,4),(19,4),30,(18,4)).
shortest_path((17,4),(36,1),420,(18,4)).
shortest_path((17,4),(25,1),165,(18,4)).
shortest_path((17,4),(26,1),180,(18,4)).
shortest_path((17,4),(24,1),180,(18,4)).
shortest_path((25,2),(37,4),270,(25,1)).
shortest_path((25,2),(39,4),300,(25,1)).
shortest_path((25,2),(28,4),105,(25,1)).
shortest_path((25,2),(36,1),270,(25,1)).
shortest_path((25,2),(25,1),15,(25,1)).
shortest_path((25,2),(26,1),30,(25,1)).
shortest_path((25,2),(24,1),30,(25,1)).
shortest_path((31,4),(13,1),435,(30,4)).
shortest_path((31,4),(15,1),435,(30,4)).
shortest_path((31,4),(9,1),465,(30,4)).
shortest_path((31,4),(3,1),555,(30,4)).
shortest_path((31,4),(4,1),540,(30,4)).
shortest_path((31,4),(14,1),420,(30,4)).
shortest_path((31,4),(28,4),45,(30,4)).
shortest_path((31,4),(19,4),270,(30,4)).
shortest_path((31,4),(25,1),135,(30,4)).
shortest_path((31,4),(26,1),120,(30,4)).
shortest_path((31,4),(24,1),150,(30,4)).
shortest_path((20,4),(13,1),180,(19,4)).
shortest_path((20,4),(15,1),180,(19,4)).
shortest_path((20,4),(9,1),210,(19,4)).
shortest_path((20,4),(3,1),300,(19,4)).
shortest_path((20,4),(4,1),285,(19,4)).
shortest_path((20,4),(14,1),165,(19,4)).
shortest_path((20,4),(19,4),15,(19,4)).
shortest_path((30,4),(24,1),135,(29,4)).
shortest_path((30,4),(26,1),105,(29,4)).
shortest_path((30,4),(25,1),120,(29,4)).
shortest_path((30,4),(19,4),255,(29,4)).
shortest_path((30,4),(28,4),30,(29,4)).
shortest_path((30,4),(14,1),405,(29,4)).
shortest_path((30,4),(4,1),525,(29,4)).
shortest_path((30,4),(3,1),540,(29,4)).
shortest_path((30,4),(9,1),450,(29,4)).
shortest_path((30,4),(15,1),420,(29,4)).
shortest_path((30,4),(13,1),420,(29,4)).
shortest_path((18,4),(24,1),165,(19,4)).
shortest_path((18,4),(26,1),165,(19,4)).
shortest_path((18,4),(25,1),150,(19,4)).
shortest_path((18,4),(36,1),405,(19,4)).
shortest_path((18,4),(19,4),15,(19,4)).
shortest_path((18,4),(28,4),240,(19,4)).
shortest_path((18,4),(39,4),435,(19,4)).
shortest_path((18,4),(37,4),405,(19,4)).
shortest_path((29,4),(13,1),405,(28,4)).
shortest_path((29,4),(15,1),405,(28,4)).
shortest_path((29,4),(9,1),435,(28,4)).
shortest_path((29,4),(3,1),525,(28,4)).
shortest_path((29,4),(4,1),510,(28,4)).
shortest_path((29,4),(14,1),390,(28,4)).
shortest_path((29,4),(28,4),15,(28,4)).
shortest_path((29,4),(19,4),240,(28,4)).
shortest_path((29,4),(25,1),105,(28,4)).
shortest_path((29,4),(26,1),90,(28,4)).
shortest_path((29,4),(24,1),120,(28,4)).

